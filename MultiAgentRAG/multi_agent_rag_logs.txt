2024-07-12 16:43:15 [info     ] Starting up the API server
2024-07-12 16:43:15 [debug    ] Ensured memories and memory_links tables exist in /app/data/7ba3cb660f59.db
2024-07-12 16:43:15 [info     ] Loaded corpus with 0 entries in 0.00 seconds
2024-07-12 16:43:15 [warning  ] Corpus is empty. Skipping indexing update.
2024-07-12 16:43:15 [info     ] _update_indexing executed      execution_time=7.128715515136719e-05 function=_update_indexing
2024-07-12 16:43:15 [info     ] API server initialization complete
INFO:     172.18.0.1:52414 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:57078 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x011fedb9d9ccf0b412e310ce57a51a25",
        "span_id": "0x842fb94007787049",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x28a478da4b95f53e",
    "start_time": "2024-07-12T16:43:16.651226Z",
    "end_time": "2024-07-12T16:43:16.651461Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x011fedb9d9ccf0b412e310ce57a51a25",
        "span_id": "0xcb787976d94613f9",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x28a478da4b95f53e",
    "start_time": "2024-07-12T16:43:16.651516Z",
    "end_time": "2024-07-12T16:43:16.651557Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x011fedb9d9ccf0b412e310ce57a51a25",
        "span_id": "0x28a478da4b95f53e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:43:16.650856Z",
    "end_time": "2024-07-12T16:43:16.651567Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://172.18.0.2:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8080",
        "http.user_agent": "curl/7.81.0",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 52414,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x423b59a0430a107d8226cfe84bc1e838",
        "span_id": "0xb20a42004ed802a5",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x0b6d8cc0c51cd783",
    "start_time": "2024-07-12T16:43:17.520315Z",
    "end_time": "2024-07-12T16:43:17.520529Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x423b59a0430a107d8226cfe84bc1e838",
        "span_id": "0x8bdc541b52144d44",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x0b6d8cc0c51cd783",
    "start_time": "2024-07-12T16:43:17.520581Z",
    "end_time": "2024-07-12T16:43:17.520614Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x423b59a0430a107d8226cfe84bc1e838",
        "span_id": "0x0b6d8cc0c51cd783",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:43:17.520003Z",
    "end_time": "2024-07-12T16:43:17.520622Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 57078,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:55394 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xc8e25d282f82e546339356ee1206883f",
        "span_id": "0x6973dcd474a877dc",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x57ef7c93922b0b7e",
    "start_time": "2024-07-12T16:43:47.545776Z",
    "end_time": "2024-07-12T16:43:47.545996Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xc8e25d282f82e546339356ee1206883f",
        "span_id": "0xc58a4757c4b7d1f5",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x57ef7c93922b0b7e",
    "start_time": "2024-07-12T16:43:47.546050Z",
    "end_time": "2024-07-12T16:43:47.546080Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xc8e25d282f82e546339356ee1206883f",
        "span_id": "0x57ef7c93922b0b7e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:43:47.545479Z",
    "end_time": "2024-07-12T16:43:47.546088Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 55394,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:35196 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x01a35d58e965c44d8939c0a1018c1b12",
        "span_id": "0x5784ebdd00cb2d7e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x22a0c9062b21a991",
    "start_time": "2024-07-12T16:44:17.574836Z",
    "end_time": "2024-07-12T16:44:17.575030Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x01a35d58e965c44d8939c0a1018c1b12",
        "span_id": "0x2a6d7cd94d1fc612",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x22a0c9062b21a991",
    "start_time": "2024-07-12T16:44:17.575076Z",
    "end_time": "2024-07-12T16:44:17.575102Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x01a35d58e965c44d8939c0a1018c1b12",
        "span_id": "0x22a0c9062b21a991",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:44:17.574444Z",
    "end_time": "2024-07-12T16:44:17.575109Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 35196,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:38948 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x97c2e5196d43aca8e8b2a9ce5789fcac",
        "span_id": "0xc0f777bef718beba",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb6a030de6f98daec",
    "start_time": "2024-07-12T16:44:47.599127Z",
    "end_time": "2024-07-12T16:44:47.599320Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x97c2e5196d43aca8e8b2a9ce5789fcac",
        "span_id": "0xf3058f7203ccfb27",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb6a030de6f98daec",
    "start_time": "2024-07-12T16:44:47.599368Z",
    "end_time": "2024-07-12T16:44:47.599395Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x97c2e5196d43aca8e8b2a9ce5789fcac",
        "span_id": "0xb6a030de6f98daec",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:44:47.598803Z",
    "end_time": "2024-07-12T16:44:47.599401Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 38948,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:44654 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x48f58b305415bba6041f0d8a76fe494c",
        "span_id": "0x37da94bfaa6b7b5b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x888e63bc263442ca",
    "start_time": "2024-07-12T16:45:17.621461Z",
    "end_time": "2024-07-12T16:45:17.621671Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x48f58b305415bba6041f0d8a76fe494c",
        "span_id": "0x70dbdc5f008958c3",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x888e63bc263442ca",
    "start_time": "2024-07-12T16:45:17.621715Z",
    "end_time": "2024-07-12T16:45:17.621742Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x48f58b305415bba6041f0d8a76fe494c",
        "span_id": "0x888e63bc263442ca",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:45:17.621171Z",
    "end_time": "2024-07-12T16:45:17.621749Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 44654,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:33614 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xe77161e2179d2f2d1ff11504c9c81cea",
        "span_id": "0x656c48b9091093e2",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xfc758f752bb0135c",
    "start_time": "2024-07-12T16:45:47.645419Z",
    "end_time": "2024-07-12T16:45:47.645607Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xe77161e2179d2f2d1ff11504c9c81cea",
        "span_id": "0x091e60a5f2f4f403",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xfc758f752bb0135c",
    "start_time": "2024-07-12T16:45:47.645651Z",
    "end_time": "2024-07-12T16:45:47.645681Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xe77161e2179d2f2d1ff11504c9c81cea",
        "span_id": "0xfc758f752bb0135c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:45:47.645153Z",
    "end_time": "2024-07-12T16:45:47.645688Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 33614,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:52472 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x0f104cde483066530e175bf9853e5037",
        "span_id": "0x69f2281474418510",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb7774cee1786e4ca",
    "start_time": "2024-07-12T16:46:17.667087Z",
    "end_time": "2024-07-12T16:46:17.667280Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x0f104cde483066530e175bf9853e5037",
        "span_id": "0x9a6b83ac30e5532a",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb7774cee1786e4ca",
    "start_time": "2024-07-12T16:46:17.667324Z",
    "end_time": "2024-07-12T16:46:17.667349Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x0f104cde483066530e175bf9853e5037",
        "span_id": "0xb7774cee1786e4ca",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:46:17.666808Z",
    "end_time": "2024-07-12T16:46:17.667355Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 52472,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:54090 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x8be13e6045f723e5ebe8e07b68f4efa8",
        "span_id": "0x83627e567f1cdc87",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x547f4871efded7fa",
    "start_time": "2024-07-12T16:46:47.690489Z",
    "end_time": "2024-07-12T16:46:47.690722Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x8be13e6045f723e5ebe8e07b68f4efa8",
        "span_id": "0xc651a00e1c90e223",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x547f4871efded7fa",
    "start_time": "2024-07-12T16:46:47.690777Z",
    "end_time": "2024-07-12T16:46:47.690807Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x8be13e6045f723e5ebe8e07b68f4efa8",
        "span_id": "0x547f4871efded7fa",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:46:47.690204Z",
    "end_time": "2024-07-12T16:46:47.690814Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 54090,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:47:05 [info     ] Received query: Hello, world!
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xeb39badf30fbe5e99ef031a077afebbd",
        "span_id": "0xbb96f7fcb0b71774",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xdd31ad371c27b000",
    "start_time": "2024-07-12T16:47:05.749811Z",
    "end_time": "2024-07-12T16:47:05.749838Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:47:10 [info     ] retrieve_relevant_memories executed execution_time=5.165543079376221 function=retrieve_relevant_memories
2024-07-12 16:47:11 [info     ] process_query executed         execution_time=5.77940034866333 function=process_query
2024-07-12 16:47:11 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:47:11 [debug    ] Saved memory for query: Hello, world! with result: NO RELEVANT INFORMATION
2024-07-12 16:47:11 [info     ] Loaded corpus with 1 entries in 0.00 seconds
2024-07-12 16:47:11 [info     ] Updated indexing with 1 documents in 0.00 seconds
2024-07-12 16:47:11 [info     ] _update_indexing executed      execution_time=0.0022420883178710938 function=_update_indexing
2024-07-12 16:47:11 [info     ] auto_link_memories executed    execution_time=0.006306886672973633 function=auto_link_memories
2024-07-12 16:47:11 [info     ] Memory saved                   extra={'query': 'Hello, world!', 'memory_id': 1}
2024-07-12 16:47:11 [info     ] save_memory executed           execution_time=0.27517223358154297 function=save_memory
2024-07-12 16:47:11 [info     ] Query processed successfully
INFO:     172.18.0.1:43152 - "POST /query HTTP/1.1" 200 OK
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xeb39badf30fbe5e99ef031a077afebbd",
        "span_id": "0x88dc05fb239dcc41",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xdd31ad371c27b000",
    "start_time": "2024-07-12T16:47:05.750191Z",
    "end_time": "2024-07-12T16:47:11.805239Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xeb39badf30fbe5e99ef031a077afebbd",
        "span_id": "0xaab23f239a72cba9",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xdd31ad371c27b000",
    "start_time": "2024-07-12T16:47:11.805415Z",
    "end_time": "2024-07-12T16:47:11.805627Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xeb39badf30fbe5e99ef031a077afebbd",
        "span_id": "0x039f382b29c746dd",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xdd31ad371c27b000",
    "start_time": "2024-07-12T16:47:11.805670Z",
    "end_time": "2024-07-12T16:47:11.805703Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xeb39badf30fbe5e99ef031a077afebbd",
        "span_id": "0xdd31ad371c27b000",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:47:05.749589Z",
    "end_time": "2024-07-12T16:47:11.805709Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "curl/7.81.0",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 43152,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:60010 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x87209fa6ecf6d556e3d8a2a00f384285",
        "span_id": "0x883af044a730791c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x8805cf32910a9160",
    "start_time": "2024-07-12T16:47:17.716330Z",
    "end_time": "2024-07-12T16:47:17.716612Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x87209fa6ecf6d556e3d8a2a00f384285",
        "span_id": "0x7141ba9844fde518",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x8805cf32910a9160",
    "start_time": "2024-07-12T16:47:17.716671Z",
    "end_time": "2024-07-12T16:47:17.716709Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x87209fa6ecf6d556e3d8a2a00f384285",
        "span_id": "0x8805cf32910a9160",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:47:17.715849Z",
    "end_time": "2024-07-12T16:47:17.716993Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 60010,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:52766 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x13d44338aa88f3b705424f7cba945415",
        "span_id": "0x4f50facaa7a241fd",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x0c5db2fb93bb4e4d",
    "start_time": "2024-07-12T16:47:47.742839Z",
    "end_time": "2024-07-12T16:47:47.743048Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x13d44338aa88f3b705424f7cba945415",
        "span_id": "0x31b0eb310a8de069",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x0c5db2fb93bb4e4d",
    "start_time": "2024-07-12T16:47:47.743096Z",
    "end_time": "2024-07-12T16:47:47.743125Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x13d44338aa88f3b705424f7cba945415",
        "span_id": "0x0c5db2fb93bb4e4d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:47:47.742545Z",
    "end_time": "2024-07-12T16:47:47.743132Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 52766,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:54658 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x690913ad137a7453a24d4082b38ddb05",
        "span_id": "0x8d195da53b47e5c7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x310c4a20b52fa8ad",
    "start_time": "2024-07-12T16:48:17.769183Z",
    "end_time": "2024-07-12T16:48:17.769392Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x690913ad137a7453a24d4082b38ddb05",
        "span_id": "0x82120de1ed789ffa",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x310c4a20b52fa8ad",
    "start_time": "2024-07-12T16:48:17.769442Z",
    "end_time": "2024-07-12T16:48:17.769470Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x690913ad137a7453a24d4082b38ddb05",
        "span_id": "0x310c4a20b52fa8ad",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:48:17.768853Z",
    "end_time": "2024-07-12T16:48:17.769477Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 54658,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:32864 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xb94032e465e8dc1620645f4ab1de7ef9",
        "span_id": "0xa8964f4d8295b271",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd2ff611b870f58e5",
    "start_time": "2024-07-12T16:48:47.791155Z",
    "end_time": "2024-07-12T16:48:47.791369Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xb94032e465e8dc1620645f4ab1de7ef9",
        "span_id": "0x2a23a1e9c1be1826",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd2ff611b870f58e5",
    "start_time": "2024-07-12T16:48:47.791423Z",
    "end_time": "2024-07-12T16:48:47.791455Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xb94032e465e8dc1620645f4ab1de7ef9",
        "span_id": "0xd2ff611b870f58e5",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:48:47.790842Z",
    "end_time": "2024-07-12T16:48:47.791463Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 32864,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:49:08 [info     ] Received query: I am going to subject you to a Long-Term Memory benchmark. In the following, I will be giving you different kinds of information and I expect you to answer extremely briefly, only providing the responses that you are required to provide. Otherwise, provide just short confirmations. Understood?
2024-07-12 16:49:09 [info     ] retrieve_relevant_memories executed execution_time=0.41463661193847656 function=retrieve_relevant_memories
2024-07-12 16:49:09 [info     ] process_query executed         execution_time=0.7612950801849365 function=process_query
2024-07-12 16:49:09 [debug    ] Generated response             response=CONFIRMED
2024-07-12 16:49:09 [debug    ] Saved memory for query: I am going to subject you to a Long-Term Memory benchmark. In the following, I will be giving you different kinds of information and I expect you to answer extremely briefly, only providing the responses that you are required to provide. Otherwise, provide just short confirmations. Understood? with result: CONFIRMED
2024-07-12 16:49:09 [info     ] Loaded corpus with 2 entries in 0.00 seconds
2024-07-12 16:49:09 [info     ] Updated indexing with 2 documents in 0.00 seconds
2024-07-12 16:49:09 [info     ] _update_indexing executed      execution_time=0.0015227794647216797 function=_update_indexing
2024-07-12 16:49:09 [info     ] auto_link_memories executed    execution_time=0.009200811386108398 function=auto_link_memories
2024-07-12 16:49:09 [info     ] Memory saved                   extra={'query': 'I am going to subject you to a Long-Term Memory benchmark. In the following, I will be giving you different kinds of information and I expect you to answer extremely briefly, only providing the responses that you are required to provide. Otherwise, provide just short confirmations. Understood?', 'memory_id': 2}
2024-07-12 16:49:09 [info     ] save_memory executed           execution_time=0.24334263801574707 function=save_memory
2024-07-12 16:49:09 [info     ] Query processed successfully
INFO:     172.18.0.1:57902 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:09 [info     ] Received query: My favourite colour is Purple.
2024-07-12 16:49:09 [info     ] get_linked_memories executed   execution_time=0.0035910606384277344 function=get_linked_memories
2024-07-12 16:49:09 [info     ] retrieve_relevant_memories executed execution_time=0.25612878799438477 function=retrieve_relevant_memories
2024-07-12 16:49:10 [info     ] process_query executed         execution_time=0.7635536193847656 function=process_query
2024-07-12 16:49:10 [debug    ] Generated response             response=NO RELEVANT INFORMATION
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xeac75c5eb625c25e0cc7cd79f0284442",
        "span_id": "0x3db8341f61e27b95",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x18a58b2692203fc8",
    "start_time": "2024-07-12T16:49:08.613406Z",
    "end_time": "2024-07-12T16:49:08.613430Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xeac75c5eb625c25e0cc7cd79f0284442",
        "span_id": "0x05495c9d21d8b343",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x18a58b2692203fc8",
    "start_time": "2024-07-12T16:49:08.613680Z",
    "end_time": "2024-07-12T16:49:09.618800Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xeac75c5eb625c25e0cc7cd79f0284442",
        "span_id": "0x47dbf9566d10f9d2",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x18a58b2692203fc8",
    "start_time": "2024-07-12T16:49:09.619004Z",
    "end_time": "2024-07-12T16:49:09.619246Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xeac75c5eb625c25e0cc7cd79f0284442",
        "span_id": "0x681b807454843888",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x18a58b2692203fc8",
    "start_time": "2024-07-12T16:49:09.619296Z",
    "end_time": "2024-07-12T16:49:09.619331Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xeac75c5eb625c25e0cc7cd79f0284442",
        "span_id": "0x18a58b2692203fc8",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:08.613218Z",
    "end_time": "2024-07-12T16:49:09.619339Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 57902,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x8712f7ea43ca89f64295a60f8be151c9",
        "span_id": "0x64813154f2dbc499",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7cdfb7f990964f22",
    "start_time": "2024-07-12T16:49:09.629748Z",
    "end_time": "2024-07-12T16:49:09.629767Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:49:10 [debug    ] Saved memory for query: My favourite colour is Purple. with result: NO RELEVANT INFORMATION
2024-07-12 16:49:10 [info     ] Loaded corpus with 3 entries in 0.00 seconds
2024-07-12 16:49:10 [info     ] Updated indexing with 3 documents in 0.00 seconds
2024-07-12 16:49:10 [info     ] _update_indexing executed      execution_time=0.001256704330444336 function=_update_indexing
2024-07-12 16:49:10 [info     ] auto_link_memories executed    execution_time=0.007508277893066406 function=auto_link_memories
2024-07-12 16:49:10 [info     ] Memory saved                   extra={'query': 'My favourite colour is Purple.', 'memory_id': 3}
2024-07-12 16:49:10 [info     ] save_memory executed           execution_time=0.24846124649047852 function=save_memory
2024-07-12 16:49:10 [info     ] Query processed successfully
INFO:     172.18.0.1:48308 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:10 [info     ] Received query: Atheism is a non-prophet organization
2024-07-12 16:49:10 [info     ] retrieve_relevant_memories executed execution_time=0.18286514282226562 function=retrieve_relevant_memories
2024-07-12 16:49:11 [info     ] process_query executed         execution_time=0.5020034313201904 function=process_query
2024-07-12 16:49:11 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:11 [debug    ] Saved memory for query: Atheism is a non-prophet organization with result: NO RELEVANT INFORMATION
2024-07-12 16:49:11 [info     ] Loaded corpus with 4 entries in 0.00 seconds
2024-07-12 16:49:11 [info     ] Updated indexing with 4 documents in 0.00 seconds
2024-07-12 16:49:11 [info     ] _update_indexing executed      execution_time=0.0014300346374511719 function=_update_indexing
2024-07-12 16:49:11 [info     ] auto_link_memories executed    execution_time=0.009543180465698242 function=auto_link_memories
2024-07-12 16:49:11 [info     ] Memory saved                   extra={'query': 'Atheism is a non-prophet organization', 'memory_id': 4}
2024-07-12 16:49:11 [info     ] save_memory executed           execution_time=0.2926456928253174 function=save_memory
2024-07-12 16:49:11 [info     ] Query processed successfully
INFO:     172.18.0.1:48324 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:11 [info     ] Received query: There is a Museum in the center of my hometown.
2024-07-12 16:49:11 [info     ] get_linked_memories executed   execution_time=0.0033147335052490234 function=get_linked_memories
2024-07-12 16:49:11 [info     ] get_linked_memories executed   execution_time=0.0031096935272216797 function=get_linked_memories
2024-07-12 16:49:11 [info     ] retrieve_relevant_memories executed execution_time=0.2245159149169922 function=retrieve_relevant_memories
2024-07-12 16:49:12 [info     ] process_query executed         execution_time=0.5566446781158447 function=process_query
2024-07-12 16:49:12 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:12 [debug    ] Saved memory for query: There is a Museum in the center of my hometown. with result: NO RELEVANT INFORMATION
2024-07-12 16:49:12 [info     ] Loaded corpus with 5 entries in 0.00 seconds
2024-07-12 16:49:12 [info     ] Updated indexing with 5 documents in 0.00 seconds
2024-07-12 16:49:12 [info     ] _update_indexing executed      execution_time=0.0014653205871582031 function=_update_indexing
2024-07-12 16:49:12 [info     ] auto_link_memories executed    execution_time=0.008534669876098633 function=auto_link_memories
2024-07-12 16:49:12 [info     ] Memory saved                   extra={'query': 'There is a Museum in the center of my hometown.', 'memory_id': 5}
2024-07-12 16:49:12 [info     ] save_memory executed           execution_time=0.2089691162109375 function=save_memory
2024-07-12 16:49:12 [info     ] Query processed successfully
INFO:     172.18.0.1:48332 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:12 [info     ] Received query: William is what I am called.
2024-07-12 16:49:12 [info     ] get_linked_memories executed   execution_time=0.003578662872314453 function=get_linked_memories
2024-07-12 16:49:12 [info     ] get_linked_memories executed   execution_time=0.003699064254760742 function=get_linked_memories
2024-07-12 16:49:12 [info     ] retrieve_relevant_memories executed execution_time=0.24172568321228027 function=retrieve_relevant_memories
2024-07-12 16:49:12 [info     ] process_query executed         execution_time=0.5718846321105957 function=process_query
2024-07-12 16:49:12 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:13 [debug    ] Saved memory for query: William is what I am called. with result: NO RELEVANT INFORMATION
2024-07-12 16:49:13 [info     ] Loaded corpus with 6 entries in 0.00 seconds
2024-07-12 16:49:13 [info     ] Updated indexing with 6 documents in 0.00 seconds
2024-07-12 16:49:13 [info     ] _update_indexing executed      execution_time=0.0015606880187988281 function=_update_indexing
2024-07-12 16:49:13 [info     ] auto_link_memories executed    execution_time=0.009205341339111328 function=auto_link_memories
2024-07-12 16:49:13 [info     ] Memory saved                   extra={'query': 'William is what I am called.', 'memory_id': 6}
2024-07-12 16:49:13 [info     ] save_memory executed           execution_time=0.26086854934692383 function=save_memory
2024-07-12 16:49:13 [info     ] Query processed successfully
INFO:     172.18.0.1:48340 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:13 [info     ] Received query: 'The greatest glory in living lies not in never falling, but in rising every time we fall.' - Nelson Mandela
2024-07-12 16:49:13 [info     ] get_linked_memories executed   execution_time=0.003704547882080078 function=get_linked_memories
2024-07-12 16:49:13 [info     ] retrieve_relevant_memories executed execution_time=0.19005799293518066 function=retrieve_relevant_memories
2024-07-12 16:49:13 [info     ] process_query executed         execution_time=0.6027472019195557 function=process_query
2024-07-12 16:49:13 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:13 [debug    ] Saved memory for query: 'The greatest glory in living lies not in never falling, but in rising every time we fall.' - Nelson Mandela with result: NO RELEVANT INFORMATION
2024-07-12 16:49:13 [info     ] Loaded corpus with 7 entries in 0.00 seconds
2024-07-12 16:49:13 [info     ] Updated indexing with 7 documents in 0.00 seconds
2024-07-12 16:49:13 [info     ] _update_indexing executed      execution_time=0.001651763916015625 function=_update_indexing
2024-07-12 16:49:13 [info     ] auto_link_memories executed    execution_time=0.008818387985229492 function=auto_link_memories
2024-07-12 16:49:13 [info     ] Memory saved                   extra={'query': "'The greatest glory in living lies not in never falling, but in rising every time we fall.' - Nelson Mandela", 'memory_id': 7}
2024-07-12 16:49:13 [info     ] save_memory executed           execution_time=0.19632697105407715 function=save_memory
2024-07-12 16:49:13 [info     ] Query processed successfully
INFO:     172.18.0.1:48352 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:13 [info     ] Received query: When I talk to you as the waiter (e.g. 'Waiter: what will it be sir?'), then you will reply as if you were the customer at a restaurant. Give straight answers to the questions and avoid going off script. Understood?
2024-07-12 16:49:14 [info     ] get_linked_memories executed   execution_time=0.0032269954681396484 function=get_linked_memories
2024-07-12 16:49:14 [info     ] get_linked_memories executed   execution_time=0.0032968521118164062 function=get_linked_memories
2024-07-12 16:49:14 [info     ] retrieve_relevant_memories executed execution_time=0.2677340507507324 function=retrieve_relevant_memories
2024-07-12 16:49:14 [info     ] process_query executed         execution_time=0.6033165454864502 function=process_query
2024-07-12 16:49:14 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:14 [debug    ] Saved memory for query: When I talk to you as the waiter (e.g. 'Waiter: what will it be sir?'), then you will reply as if you were the customer at a restaurant. Give straight answers to the questions and avoid going off script. Understood? with result: NO RELEVANT INFORMATION
2024-07-12 16:49:14 [info     ] Loaded corpus with 8 entries in 0.00 seconds
2024-07-12 16:49:14 [info     ] Updated indexing with 8 documents in 0.00 seconds
2024-07-12 16:49:14 [info     ] _update_indexing executed      execution_time=0.0015118122100830078 function=_update_indexing
2024-07-12 16:49:14 [info     ] auto_link_memories executed    execution_time=0.008995771408081055 function=auto_link_memories
2024-07-12 16:49:14 [info     ] Memory saved                   extra={'query': "When I talk to you as the waiter (e.g. 'Waiter: what will it be sir?'), then you will reply as if you were the customer at a restaurant. Give straight answers to the questions and avoid going off script. Understood?", 'memory_id': 8}
2024-07-12 16:49:14 [info     ] save_memory executed           execution_time=0.2812032699584961 function=save_memory
2024-07-12 16:49:14 [info     ] Query processed successfully
INFO:     172.18.0.1:48354 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:14 [info     ] Received query: They are broadcasting a program on TV. I will keep you updated on what happens, and at the end, I will ask you a question about what happened on the show. Okay?
2024-07-12 16:49:15 [info     ] get_linked_memories executed   execution_time=0.003638744354248047 function=get_linked_memories
2024-07-12 16:49:15 [info     ] get_linked_memories executed   execution_time=0.00360870361328125 function=get_linked_memories
2024-07-12 16:49:15 [info     ] get_linked_memories executed   execution_time=0.0036041736602783203 function=get_linked_memories
2024-07-12 16:49:15 [info     ] retrieve_relevant_memories executed execution_time=0.2857222557067871 function=retrieve_relevant_memories
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x8712f7ea43ca89f64295a60f8be151c9",
        "span_id": "0xbd11e23de0bb6f9d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7cdfb7f990964f22",
    "start_time": "2024-07-12T16:49:09.630011Z",
    "end_time": "2024-07-12T16:49:10.642529Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x8712f7ea43ca89f64295a60f8be151c9",
        "span_id": "0x9da9ce3941b86dc0",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7cdfb7f990964f22",
    "start_time": "2024-07-12T16:49:10.642693Z",
    "end_time": "2024-07-12T16:49:10.642971Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x8712f7ea43ca89f64295a60f8be151c9",
        "span_id": "0x623f69a997f5a319",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7cdfb7f990964f22",
    "start_time": "2024-07-12T16:49:10.643059Z",
    "end_time": "2024-07-12T16:49:10.643108Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x8712f7ea43ca89f64295a60f8be151c9",
        "span_id": "0x7cdfb7f990964f22",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:09.629527Z",
    "end_time": "2024-07-12T16:49:10.643122Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48308,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x953bca46cc0a00b6245388165eea45b0",
        "span_id": "0x1d925d47b1fa7199",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7bd7f31c34c6f328",
    "start_time": "2024-07-12T16:49:10.651691Z",
    "end_time": "2024-07-12T16:49:10.651711Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x953bca46cc0a00b6245388165eea45b0",
        "span_id": "0xb60371fa026d64be",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7bd7f31c34c6f328",
    "start_time": "2024-07-12T16:49:10.651904Z",
    "end_time": "2024-07-12T16:49:11.447032Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x953bca46cc0a00b6245388165eea45b0",
        "span_id": "0x133b7de5275af9f0",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7bd7f31c34c6f328",
    "start_time": "2024-07-12T16:49:11.447239Z",
    "end_time": "2024-07-12T16:49:11.447487Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x953bca46cc0a00b6245388165eea45b0",
        "span_id": "0x46b8b16ae687a21c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7bd7f31c34c6f328",
    "start_time": "2024-07-12T16:49:11.447536Z",
    "end_time": "2024-07-12T16:49:11.447572Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x953bca46cc0a00b6245388165eea45b0",
        "span_id": "0x7bd7f31c34c6f328",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:10.651501Z",
    "end_time": "2024-07-12T16:49:11.447579Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48324,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xc6c2b0a18eb2b6ebc96203346737a53f",
        "span_id": "0x3620c25ff2a56d17",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4b4d1af09ed6c2a8",
    "start_time": "2024-07-12T16:49:11.466041Z",
    "end_time": "2024-07-12T16:49:11.466058Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xc6c2b0a18eb2b6ebc96203346737a53f",
        "span_id": "0x9860b6587aa77455",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4b4d1af09ed6c2a8",
    "start_time": "2024-07-12T16:49:11.466282Z",
    "end_time": "2024-07-12T16:49:12.232328Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xc6c2b0a18eb2b6ebc96203346737a53f",
        "span_id": "0x247f74505a452af9",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4b4d1af09ed6c2a8",
    "start_time": "2024-07-12T16:49:12.232515Z",
    "end_time": "2024-07-12T16:49:12.232721Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xc6c2b0a18eb2b6ebc96203346737a53f",
        "span_id": "0x7764d6ee28f35db0",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4b4d1af09ed6c2a8",
    "start_time": "2024-07-12T16:49:12.232760Z",
    "end_time": "2024-07-12T16:49:12.232790Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xc6c2b0a18eb2b6ebc96203346737a53f",
        "span_id": "0x4b4d1af09ed6c2a8",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:11.465867Z",
    "end_time": "2024-07-12T16:49:12.232795Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48332,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xf71815d1c841053637ce5bb3f081dc2f",
        "span_id": "0xdc6f1fc249ec33bd",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7ad4ea8dc71dd08e",
    "start_time": "2024-07-12T16:49:12.241192Z",
    "end_time": "2024-07-12T16:49:12.241213Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xf71815d1c841053637ce5bb3f081dc2f",
        "span_id": "0x10c522342629e8dc",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7ad4ea8dc71dd08e",
    "start_time": "2024-07-12T16:49:12.241428Z",
    "end_time": "2024-07-12T16:49:13.074594Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xf71815d1c841053637ce5bb3f081dc2f",
        "span_id": "0x4ed41763d8e6aaef",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7ad4ea8dc71dd08e",
    "start_time": "2024-07-12T16:49:13.074801Z",
    "end_time": "2024-07-12T16:49:13.075084Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xf71815d1c841053637ce5bb3f081dc2f",
        "span_id": "0x2f6d57f8d806ee9d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7ad4ea8dc71dd08e",
    "start_time": "2024-07-12T16:49:13.075136Z",
    "end_time": "2024-07-12T16:49:13.075172Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xf71815d1c841053637ce5bb3f081dc2f",
        "span_id": "0x7ad4ea8dc71dd08e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:12.240997Z",
    "end_time": "2024-07-12T16:49:13.075178Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48340,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x01a44c844244a648e7f45583c4df5b01",
        "span_id": "0x330c29953844b067",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4a1f0ef70ff859eb",
    "start_time": "2024-07-12T16:49:13.084857Z",
    "end_time": "2024-07-12T16:49:13.084877Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x01a44c844244a648e7f45583c4df5b01",
        "span_id": "0xb551e21b086f31d4",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4a1f0ef70ff859eb",
    "start_time": "2024-07-12T16:49:13.085148Z",
    "end_time": "2024-07-12T16:49:13.884649Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x01a44c844244a648e7f45583c4df5b01",
        "span_id": "0xb4bea4aa45b92fd9",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4a1f0ef70ff859eb",
    "start_time": "2024-07-12T16:49:13.884815Z",
    "end_time": "2024-07-12T16:49:13.885033Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x01a44c844244a648e7f45583c4df5b01",
        "span_id": "0x0a131249219d83e8",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4a1f0ef70ff859eb",
    "start_time": "2024-07-12T16:49:13.885076Z",
    "end_time": "2024-07-12T16:49:13.885106Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x01a44c844244a648e7f45583c4df5b01",
        "span_id": "0x4a1f0ef70ff859eb",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:13.084658Z",
    "end_time": "2024-07-12T16:49:13.885112Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48352,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x903a06364174ae281f16aa4c1783969e",
        "span_id": "0xd2d5bcc752174a74",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xc4d77759c5720a22",
    "start_time": "2024-07-12T16:49:13.893139Z",
    "end_time": "2024-07-12T16:49:13.893156Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x903a06364174ae281f16aa4c1783969e",
        "span_id": "0xc8ce90fe4b734ce8",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xc4d77759c5720a22",
    "start_time": "2024-07-12T16:49:13.893365Z",
    "end_time": "2024-07-12T16:49:14.778328Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x903a06364174ae281f16aa4c1783969e",
        "span_id": "0x45b42c0cacc71eee",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xc4d77759c5720a22",
    "start_time": "2024-07-12T16:49:14.778499Z",
    "end_time": "2024-07-12T16:49:14.778706Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x903a06364174ae281f16aa4c1783969e",
        "span_id": "0xbbf41402c869693b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xc4d77759c5720a22",
    "start_time": "2024-07-12T16:49:14.778747Z",
    "end_time": "2024-07-12T16:49:14.778777Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x903a06364174ae281f16aa4c1783969e",
        "span_id": "0xc4d77759c5720a22",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:13.892965Z",
    "end_time": "2024-07-12T16:49:14.778782Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48354,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xafc06b8915379dd9d4db92db31ae43bf",
        "span_id": "0x0b8c42362315d20b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4c92b02b21f0e6d4",
    "start_time": "2024-07-12T16:49:14.789239Z",
    "end_time": "2024-07-12T16:49:14.789258Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:49:15 [info     ] process_query executed         execution_time=0.6736242771148682 function=process_query
2024-07-12 16:49:15 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:15 [debug    ] Saved memory for query: They are broadcasting a program on TV. I will keep you updated on what happens, and at the end, I will ask you a question about what happened on the show. Okay? with result: NO RELEVANT INFORMATION
2024-07-12 16:49:15 [info     ] Loaded corpus with 9 entries in 0.00 seconds
2024-07-12 16:49:15 [info     ] Updated indexing with 9 documents in 0.00 seconds
2024-07-12 16:49:15 [info     ] _update_indexing executed      execution_time=0.0015370845794677734 function=_update_indexing
2024-07-12 16:49:15 [info     ] auto_link_memories executed    execution_time=0.009969472885131836 function=auto_link_memories
2024-07-12 16:49:15 [info     ] Memory saved                   extra={'query': 'They are broadcasting a program on TV. I will keep you updated on what happens, and at the end, I will ask you a question about what happened on the show. Okay?', 'memory_id': 9}
2024-07-12 16:49:15 [info     ] save_memory executed           execution_time=0.24654603004455566 function=save_memory
2024-07-12 16:49:15 [info     ] Query processed successfully
INFO:     172.18.0.1:48362 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:15 [info     ] Received query: I require 1 Leek, please put it on the list.
2024-07-12 16:49:15 [info     ] retrieve_relevant_memories executed execution_time=0.17258214950561523 function=retrieve_relevant_memories
2024-07-12 16:49:16 [info     ] process_query executed         execution_time=0.48175787925720215 function=process_query
2024-07-12 16:49:16 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:16 [debug    ] Saved memory for query: I require 1 Leek, please put it on the list. with result: NO RELEVANT INFORMATION
2024-07-12 16:49:16 [info     ] Loaded corpus with 10 entries in 0.00 seconds
2024-07-12 16:49:16 [info     ] Updated indexing with 10 documents in 0.00 seconds
2024-07-12 16:49:16 [info     ] _update_indexing executed      execution_time=0.001554727554321289 function=_update_indexing
2024-07-12 16:49:16 [info     ] auto_link_memories executed    execution_time=0.00934600830078125 function=auto_link_memories
2024-07-12 16:49:16 [info     ] Memory saved                   extra={'query': 'I require 1 Leek, please put it on the list.', 'memory_id': 10}
2024-07-12 16:49:16 [info     ] save_memory executed           execution_time=0.20507073402404785 function=save_memory
2024-07-12 16:49:16 [info     ] Query processed successfully
INFO:     172.18.0.1:48378 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:16 [info     ] Received query: You will be given three messages from different people Joshua Mcdonald, Casey Peterson, and Mr. Toby Power.
2024-07-12 16:49:16 [info     ] get_linked_memories executed   execution_time=0.0033826828002929688 function=get_linked_memories
2024-07-12 16:49:16 [info     ] get_linked_memories executed   execution_time=0.003445863723754883 function=get_linked_memories
2024-07-12 16:49:16 [info     ] get_linked_memories executed   execution_time=0.0030837059020996094 function=get_linked_memories
2024-07-12 16:49:16 [info     ] get_linked_memories executed   execution_time=0.003131389617919922 function=get_linked_memories
2024-07-12 16:49:16 [info     ] get_linked_memories executed   execution_time=0.0036733150482177734 function=get_linked_memories
2024-07-12 16:49:16 [info     ] retrieve_relevant_memories executed execution_time=0.25795698165893555 function=retrieve_relevant_memories
2024-07-12 16:49:17 [info     ] process_query executed         execution_time=0.6067905426025391 function=process_query
2024-07-12 16:49:17 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:17 [debug    ] Saved memory for query: You will be given three messages from different people Joshua Mcdonald, Casey Peterson, and Mr. Toby Power. with result: NO RELEVANT INFORMATION
2024-07-12 16:49:17 [info     ] Loaded corpus with 11 entries in 0.00 seconds
2024-07-12 16:49:17 [info     ] Updated indexing with 11 documents in 0.00 seconds
2024-07-12 16:49:17 [info     ] _update_indexing executed      execution_time=0.001630544662475586 function=_update_indexing
2024-07-12 16:49:17 [info     ] auto_link_memories executed    execution_time=0.009665489196777344 function=auto_link_memories
2024-07-12 16:49:17 [info     ] Memory saved                   extra={'query': 'You will be given three messages from different people Joshua Mcdonald, Casey Peterson, and Mr. Toby Power.', 'memory_id': 11}
2024-07-12 16:49:17 [info     ] save_memory executed           execution_time=0.2017958164215088 function=save_memory
2024-07-12 16:49:17 [info     ] Query processed successfully
INFO:     172.18.0.1:48384 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:17 [info     ] Received query: Whenever I ask you to read my mail for me then say: 'Your letter opener is in your office'
2024-07-12 16:49:17 [info     ] get_linked_memories executed   execution_time=0.0033028125762939453 function=get_linked_memories
2024-07-12 16:49:17 [info     ] get_linked_memories executed   execution_time=0.003668069839477539 function=get_linked_memories
2024-07-12 16:49:17 [info     ] get_linked_memories executed   execution_time=0.0036356449127197266 function=get_linked_memories
2024-07-12 16:49:17 [info     ] get_linked_memories executed   execution_time=0.0038890838623046875 function=get_linked_memories
2024-07-12 16:49:17 [info     ] retrieve_relevant_memories executed execution_time=0.25162672996520996 function=retrieve_relevant_memories
INFO:     127.0.0.1:58582 - "GET /health HTTP/1.1" 200 OK
2024-07-12 16:49:17 [info     ] process_query executed         execution_time=0.6623556613922119 function=process_query
2024-07-12 16:49:17 [debug    ] Generated response             response=Your letter opener is in your office
2024-07-12 16:49:18 [debug    ] Saved memory for query: Whenever I ask you to read my mail for me then say: 'Your letter opener is in your office' with result: Your letter opener is in your office
2024-07-12 16:49:18 [info     ] Loaded corpus with 12 entries in 0.01 seconds
2024-07-12 16:49:18 [info     ] Updated indexing with 12 documents in 0.00 seconds
2024-07-12 16:49:18 [info     ] _update_indexing executed      execution_time=0.0018405914306640625 function=_update_indexing
2024-07-12 16:49:18 [info     ] auto_link_memories executed    execution_time=0.010614156723022461 function=auto_link_memories
2024-07-12 16:49:18 [info     ] Memory saved                   extra={'query': "Whenever I ask you to read my mail for me then say: 'Your letter opener is in your office'", 'memory_id': 12}
2024-07-12 16:49:18 [info     ] save_memory executed           execution_time=0.2702295780181885 function=save_memory
2024-07-12 16:49:18 [info     ] Query processed successfully
INFO:     172.18.0.1:48386 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:18 [info     ] Received query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: Which British city has cathedrals dedicated to St Nicholas and St Mary?, A: Newcastle upon Tyne
Q: Which Dickens novel's opening chapter is 'In Chancery' with a description of a foggy and muddy London street?, A: BLEAK HOUSE
Q: Which 18th century inventor and founding father of the United States coined the phrase 'time is money'?, A: Benjamin Franklyn
Q: "What was special about ""The Daily Courant"" that appeared in the early 18th century?", A: First daily newspaper
Q: Before being surpassed in 1311 AD by the Lincoln Cathedral in England, what construction with its 481 feet held the title for the tallest man-made structure for hundreds of years?, A: Great Pyramid of Giza built around 2500 BC
Q: Which TV series was about a pop group called 'Little Ladies' featuring Charlotte Cornwell, Julie Covington and Rula Lenska?, A: Rock Follies
Q: Actor Norman Painting died in November 2009, which part in a log running radio series did he make his own?, A: PHIL ARCHER
Q: What is the generic title of a series of French comic strips that were written originally by Ren Goscinny and illustrated by Albert Uderzo?, A: The Adventures of Asterix
Q: Which former Liverpool player has the middle name Everton?, A: MARK WALTERS
Q: In December 2006, the second longest motorway tunnel in Europe was opened connecting the port to the airport in which capital city?, A: Dublin
Q: Which 17th/18th century Irish politician leader was nicknamed 'the Liberator”?, A: Daniel O’Connell
Q: Referring to the cause of a person's downfall, who is the Greek goddess of punishment?, A: Nemesis
Q: The adjective leporine relates to which animal?, A: Hare
Q: Subtitled ‘What You Will’, which play begins: ‘If music be the food of love, play on’?, A: TWELFTH NIGHT
Q: "The ""Giant Marbles"" rock formation in the USA is in which national park?", A: Joshua Tree National Park
Q: In which city did the gangland St Valentine’s Day Massacre take place?, A: CHICAGO
Q: Which country invaded the Falkland Islands in April 1982?, A: Argentina
Q: Which double glazing firm used a feather in their advertising commercials, A: Everest
Q: What is the name for the point in the lunar orbit when the moon is nearest to the earth?, A: Perigee
Q: "Which classic poem's first line is ""A thing of beauty is a joy forever""?", A: ENDYMION (Keats)
Q: In culinary terms, what is the Scoville Scale used to measure?, A: HOTNESS OF CHILI PEPPERS
Q: Which supermarket chain started selling straight croissants in its stores in February?, A: TESCO
Q: "Judi Dench won an Oscar for Best Supporting Actressfor playing which character in the 1998 film ""Shakespeare in Love""?", A: Queen Elizabeth I
Q: Artiodactyla Suidae is the scientific name for which farm animal?, A: Pig
Q: Who played Beverley Hills hairdresser George Roundy in the 1975 film ‘Shampoo’?, A: Warren Beatty
Q: Lasting from 1299 to 1922, the Ottoman empire roughly corresponds to what modern day country?, A: Turkey
Q: """Torchwood"" was a spin-off of what popular TV show?", A: Doctor Who
Q: In which town is the 'TV sitcom 'Two Pints of Lager and a Packet of Crisps' set?, A: Runcorn
Q: www.lbvcr.com is the website for which event organised by the RAC, this year on Sunday November 7th?, A: LONDON TO BRIGHTON VETERAN CAR (RUN)
Q: ‘The history of all the hitherto existing society is the history of class struggles’ is part of the first chapter of which publication?, A: The Communist Manifesto
Q: What lake can be found on the border of Vermont and New York?, A: Lake Champlain
Q: The UK's longest National Trail, what path stretches 630 miles between Minehead and Poole Harbour?, A: SOUTH WEST COAST
Q: In the culinary world, what word is used for the edible offal of a fowl, typically including the heart, gizzard and liver?, A: Giblets
Q: Who was the first Briton to hold a world javelin record, A: Fatima Whitbread
Q: The traditional 'Daily rum ration' was ended in what year?, A: 1970
Q: Charlotte, TJ's, Adelphi, Barfly; Joiners, and Forum are/were names in what UK market sector?, A: Music
Q: His debut album 'Disc-Overy' was released in 2010. By what stage-name id Patrick Chukwuemeka Okogwu better known?, A: 'TINIE TEMPAH'
Q: Traitor's Gate is part of which building?, A: Tower of London
Q: "What name is given to the maxim ""employees tend to rise to their level of incompetence.""?", A: Peter Principle
Q: Which Asian city's international airport is built at the mouth of the Tama-gawa?, A: TOKYO
Q: Which singer made the news in September 2009 when Muslim groups protested that her first concert in Malaysia should be cancelled for a second time?, A: Beyonc
Q: Louis Reard created which two-piece item of clothing in 1946?, A: Bikini
Q: What name is given to a substance that accelerates a chemical reaction without itself being affected?, A: CATALYST
Q: In the 1904 Olympics, how many of the 23 track and field titles were won by Americans?, A: 21
Q: The largest known volcano in our solar system is on which planet?, A: Mars
Q: Who is the author of the Twilight series of best-selling books?, A: Stephenie Meyer
Q: What radio station do you find at 1090 on your local AM dial?, A: KPTK
Q: What is the title of the 2009 biopic film directed by Sam Taylor-Wood about the early life of John Lennon, A: Nowhere Boy
Q: Which volcano in Tanzania is the highest mountain in Africa?, A: Kilimanjaro
Q: What was the name of the ferry in the Zeebrugge disaster of 1987, A: Herald of Free Enterprise
Q: Which French racehorse, which won the Derby and Prix de I’Arc de Triomphe in 1965, was the highest rated horse by Timeform until Frankel’s performances in 2012?, A: Sea Bird
Q: What did Peter Carl Fabergé famously make?, A: Fabergé Eggs
Q: What board game for two players is known as wiq in Chinese and baduk in Korean?, A: Go
Q: What does the Unix Time system do?, A: Counts the seconds that have elapsed since Coordinated Universal Time was established on 1/1/1970
Q: In the 2005 Julian Barnes novel ‘Arthur and George’, who is Arthur?, A: Arthur Conan Doyle
Q: What nation invented the kilt?, A: Ireland
Q: According to Greek myth, who was the wife of Odysseus, celebrated for her faithfulness to him during his twenty year absence?, A: PENELOPE
Q: Annual global production (early 2000s) of rough diamonds is about?, A: 26 tonnes/metric tons
Q: Mycology is the study of what?, A: Fungi
Q: What is the appropriate name of the craft which crashed into Mercury in April?, A: Messenger
Q: In which English town is the Georgian colonnade called the Pantiles?, A: (ROYAL) TUNBRIDGE WELLS
Q: The youngest gold medalist for team GB at the 2012 Olympics, Jade Jones, won in which sport?, A: TAEKWANDO
Q: Which word can go before Work, Guard and Dog to make three other words?, A: Fire
Q: Which British film, starring Ralph Fiennes, won nine Oscars in 1997?, A: The English Patient
Q: Where is Petra, an archaeological site with rock-cut architecture and designated a World Heritage Site 1985, that was built by the Nabataeans as their capital city around 100 BC?, A: Jordan
Q: What name given to an autumn full moon in the northern hemisphere alludes to the brightness of the night sky that aids the shooting of migrating birds?, A: Hunter's moon
Q: Adi Dassler founded the Adidas company, which company was founded by his brother Rudolf in 1948?, A: Puma
Q: In December 1965, who became President of the Philippines?, A: Ferdinand Marcos
Q: A holiday on 25 March in Greece celebrates the final recognition of Greece as an independent nation following the Greek War of Independence against the Ottoman Empire. What year did this happen?, A: 1832
Q: The painting 'Faithful Unto Death' can be found in Liverpool's Walker Art Gallery. Who painted it?, A: SIR EDWARD JOHN POYNTER
Q: What was the name of the alliance of trading cities and their guilds, each with their own law system and with armies for mututal aid, that established and maintained a trade monopoly along the coast of Northern Europe, from the Baltic to the North Sea and inland, from the 13th to 17th centuries?, A: Hanseatic League
Q: What colour is pistachio flavoured ice cream?, A: Green
Q: Released in 1994, 'Objects In The Rear View Mirror May Appear Closer Than They Are' is the hit single with the longest un-bracketed title in UK chart history. Who sang it?, A: MEATLOAF
Q: "Who wrote the nonsense poem ""Jabberwocky""?", A: Lewis Carroll
Q: Whose first husband was a policeman called Jim Dougherty?, A: MARILYN MONROE
Q: In 2012 which former Liberian president was found guilty of crimes against humanity?, A: Charles Taylor
Q: Which capital city is served by Arlanda Airport, A: Stockholm
Q: Who won the 'Oscar' for Best Actress in the 1950's film'Born Yesterday'?, A: JUDY HOLLIDAY
Q: Which Cambridge College was attended by Anthony Blunt, Kim Philby and Guy Burgess?, A: TRINITY
Q: "Who published ""A Book of Nonsense"" (a volume of limericks that went through three editions) in 1846, ""The History of the Seven Families of the Lake Pipple-Popple"" in 1865, and ""The Owl and the Pussycat"" in 1867?", A: Edward Lear
Q: Which National Trust property in Wiltshire was once owned by William Henry Fox-Talbot the pioneer of photography?, A: Lacock Abbey
Q: Which 1960 film is based on the 1954 film ‘Seven Samurai’?, A: The Magnificent Seven
Q: Who was US Attorney General from January 1961 until September 1964 and a Senator for New York from January 1965 until June 1968?, A: Robert Kennedy
Q: Who was on the English throne in 1400?, A: Henry 4th
Q: What is next in the sequence: Lima, Quito, Bogota...?, A: Caracas
Q: Who on television is the 'Idiot Abroad'?, A: KARL PILKINGTON
Q: "In England, in the first half of the twentieth century, a ""vesta"" was a common term for a type of what?", A: Match
Q: Damascus is the capital of which country?, A: Syria
Q: Across Eastern Europe, the Middle East and parts of Asia, what are known as keftes or kufta, and similar words derived from Persian, kuftan, meaning beat or grind?, A: Meatballs
Q: "Colton Harris Moore, the 6'5"" American teenager who made the news because he stole a boat and a plane, acquired what nickname because of his lack of footwear?", A: The Barefoot Bandit
Q: What animals does a mahout work with?, A: Elephants
Q: If it was Phil Mickelson in 2006, Zach Johnson in 2007, and Trevor Immelman in 2008, who was it in 2009?, A: Angel Cabrera
Q: Which mediaeval author wrote The Canterbury Tales, A: Geoffrey Chaucer
Q: Who founded the 'London Philharmonic Orchestra' in 1931?, A: Sir Thomas Beecham
Q: What is an open plane curve formed by the intersection of a cone with a plane parallel to its side, resembling the path of a projectile under the action of gravity?, A: Parabola
Q: What was the Russian City of Nizhny Novgorod called between 1932 and 1990?, A: GORKY
Q: In which English county was former British Prime minister Margaret Thatcher born?, A: Lincolnshire
Q: What number shirt did England rugby union player Jonny Wilkinson wear in the 2011 World Cup?, A: 10
Q: Author Alex Haley, born on Aug 11, 1921, wrote what epic story of his family origins, later to be made a rather popular mini-series?, A: Roots: The Saga of an American Family
Q: Which famous Englishman had a cat called Hodge which he fed on oysters?, A: Dr Sam Johnson
Q: In which county will you find Fountains abbey and Studley Water Gardens?, A: North Yorkshire
Q: In the Commonwealth games in Delhi, which British athlete won the mens 200m gold medal?, A: Leon Baptiste
Q: To ‘Defenestrate’ is to throw something or someone out of what?, A: A window
Q: "What is the literal meaning of the French expression ""Son et Lumiere""?", A: """SOUND AND LIGHT"""
Q: The journal of which Amsterdam schoolgirl was first published in 1947 under the title The Diary of a Young Girl?, A: Anne Frank
Q: Which single word connects 'The Spanish Armada, and the TV series 'The Worker'?, A: DRAKE
Q: Which premiership manager upset Louis Van Gaal in February 2015, when he described his team as long ball united?, A: Sam Allardyce
Q: In which novel does Michael Henchard sell his wife and child for 5 guineas?, A: The Mayor of Casterbridge
Q: Which leader of a British coalition Government became the first Earl of Dwfor?, A: DAVID LLOYD-GEORGE
Q: Ben Collins was 'outed' in January 2009 as which mysterious TV character?, A: The Stig
Q: The big-selling country and western hit song, notably by Elvis Presley in 1957, is '(What?) Christmas'?, A: Blue
Q: The gravesite of what American writer, buried in Baltimore, is mysteriously visited every January 19th, to receive a toast of cognac and 3 roses?, A: Edgar Allen Poe
Q: On a clothing label a cross through what shape means 'Do Not Dry Clean'?, A: CIRCLE
Q: Who, in May 2006 when aged 17 years and 75 days, became the youngest footballer to play for England?, A: Theo Walcott
Q: Which capital city is known as Praha by its inhabitants?, A: PRAGUE
Q: The assassination of Salvatore Maragano led to a major change in what organisation?, A: New York mafia
Q: The Song of Simeon canticle is also known by which Latin name?, A: Nunc Dimittis
Q: What name was collectively given to the sons of Poseidon, who dwelt with him at the bottom of the sea?, A: Tritons
Q: Who played the sergeant in Carry On Sergeant?, A: William Hartnell
Q: On what date does St. David’s Day fall?, A: March 1st
Q: What is the imperial distance of a marathon race?, A: 26 miles, 385 yards
Q: Which island group in the South Atlantic was once known as the Sebald Islands?, A: The Falkland Islands
Q: The Italian cheese called dolcelatte translates into English as what?, A: Sweet milk
Q: Which mediaeval author wrote The Canterbury Tales, A: Geoffrey Chaucer
Q: What is the pleasant activity of osculation?, A: Kissing
Q: Canal+ TV is based in which country?, A: France
Q: What was the currency of the Netherlands from the 17th century until 2002, A: Guilder
Q: Who duetted with Aretha Franklin on Sisters Are Doing It For Themselves, A: Annie Lennox
Q: What is stevia a substitute for?, A: Sugar
Q: Which element is mixed with gold to make red gold?, A: Copper
Q: Why are Angel Falls, Venezuela, so called?, A: They were discovered by James Angel
Q: Which builder of steam engines formed a successful partnership with Matthew Boulton?, A: James Watt

2024-07-12 16:49:18 [info     ] get_linked_memories executed   execution_time=0.0033464431762695312 function=get_linked_memories
2024-07-12 16:49:18 [info     ] retrieve_relevant_memories executed execution_time=0.4586310386657715 function=retrieve_relevant_memories
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xafc06b8915379dd9d4db92db31ae43bf",
        "span_id": "0xb3bc1d85967cbade",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4c92b02b21f0e6d4",
    "start_time": "2024-07-12T16:49:14.789480Z",
    "end_time": "2024-07-12T16:49:15.710144Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xafc06b8915379dd9d4db92db31ae43bf",
        "span_id": "0x225f8a3f1019b3c1",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4c92b02b21f0e6d4",
    "start_time": "2024-07-12T16:49:15.710319Z",
    "end_time": "2024-07-12T16:49:15.710531Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xafc06b8915379dd9d4db92db31ae43bf",
        "span_id": "0x612cd91db108e874",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4c92b02b21f0e6d4",
    "start_time": "2024-07-12T16:49:15.710586Z",
    "end_time": "2024-07-12T16:49:15.710628Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xafc06b8915379dd9d4db92db31ae43bf",
        "span_id": "0x4c92b02b21f0e6d4",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:14.789038Z",
    "end_time": "2024-07-12T16:49:15.710636Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48362,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x8a44edbc199b2c34c944a362fcccaa2b",
        "span_id": "0x4f27eccaf2e5972d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x641b39b0dff9b75a",
    "start_time": "2024-07-12T16:49:15.722169Z",
    "end_time": "2024-07-12T16:49:15.722190Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x8a44edbc199b2c34c944a362fcccaa2b",
        "span_id": "0xc17935aa356e6201",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x641b39b0dff9b75a",
    "start_time": "2024-07-12T16:49:15.722399Z",
    "end_time": "2024-07-12T16:49:16.409650Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x8a44edbc199b2c34c944a362fcccaa2b",
        "span_id": "0xf8bcd616684aa877",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x641b39b0dff9b75a",
    "start_time": "2024-07-12T16:49:16.409862Z",
    "end_time": "2024-07-12T16:49:16.410182Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x8a44edbc199b2c34c944a362fcccaa2b",
        "span_id": "0xdfe9f5041c45b062",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x641b39b0dff9b75a",
    "start_time": "2024-07-12T16:49:16.410291Z",
    "end_time": "2024-07-12T16:49:16.410344Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x8a44edbc199b2c34c944a362fcccaa2b",
        "span_id": "0x641b39b0dff9b75a",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:15.721945Z",
    "end_time": "2024-07-12T16:49:16.410354Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48378,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xc90f11314d32949e6ef45d728c1564c0",
        "span_id": "0xd872d1b67cf0150b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x634fa763a496f83e",
    "start_time": "2024-07-12T16:49:16.420702Z",
    "end_time": "2024-07-12T16:49:16.420723Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xc90f11314d32949e6ef45d728c1564c0",
        "span_id": "0x8d24252f3c1752d6",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x634fa763a496f83e",
    "start_time": "2024-07-12T16:49:16.420942Z",
    "end_time": "2024-07-12T16:49:17.230124Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xc90f11314d32949e6ef45d728c1564c0",
        "span_id": "0xf3ede30b910f5aac",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x634fa763a496f83e",
    "start_time": "2024-07-12T16:49:17.230306Z",
    "end_time": "2024-07-12T16:49:17.230537Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xc90f11314d32949e6ef45d728c1564c0",
        "span_id": "0x6c7a4e9422336f67",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x634fa763a496f83e",
    "start_time": "2024-07-12T16:49:17.230578Z",
    "end_time": "2024-07-12T16:49:17.230608Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xc90f11314d32949e6ef45d728c1564c0",
        "span_id": "0x634fa763a496f83e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:16.420459Z",
    "end_time": "2024-07-12T16:49:17.230614Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48384,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xf0625983a598809b26695978acf79204",
        "span_id": "0xb38e15a6d6861042",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5106595d5ca951ba",
    "start_time": "2024-07-12T16:49:17.239773Z",
    "end_time": "2024-07-12T16:49:17.239791Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x9f8c036ee160063afa9f0010a2c8492e",
        "span_id": "0x30124bb3fa62ae6a",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x53d689ae3551fdb0",
    "start_time": "2024-07-12T16:49:17.816816Z",
    "end_time": "2024-07-12T16:49:17.817011Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x9f8c036ee160063afa9f0010a2c8492e",
        "span_id": "0x85d6119eaccb293d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x53d689ae3551fdb0",
    "start_time": "2024-07-12T16:49:17.817054Z",
    "end_time": "2024-07-12T16:49:17.817079Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x9f8c036ee160063afa9f0010a2c8492e",
        "span_id": "0x53d689ae3551fdb0",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:17.816561Z",
    "end_time": "2024-07-12T16:49:17.817084Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 58582,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xf0625983a598809b26695978acf79204",
        "span_id": "0xfec606feee3251d7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5106595d5ca951ba",
    "start_time": "2024-07-12T16:49:17.240010Z",
    "end_time": "2024-07-12T16:49:18.173078Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xf0625983a598809b26695978acf79204",
        "span_id": "0xbcd5f962ed5d2762",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5106595d5ca951ba",
    "start_time": "2024-07-12T16:49:18.173293Z",
    "end_time": "2024-07-12T16:49:18.173553Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xf0625983a598809b26695978acf79204",
        "span_id": "0x271c634c765ccb5b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5106595d5ca951ba",
    "start_time": "2024-07-12T16:49:18.173608Z",
    "end_time": "2024-07-12T16:49:18.173645Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xf0625983a598809b26695978acf79204",
        "span_id": "0x5106595d5ca951ba",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:17.239598Z",
    "end_time": "2024-07-12T16:49:18.173652Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48386,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x6fd6a921ae65e80c9b94eb04b84a4511",
        "span_id": "0x66dc8c1f18662f9e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x542dab3391169d29",
    "start_time": "2024-07-12T16:49:18.195985Z",
    "end_time": "2024-07-12T16:49:18.196003Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:49:31 [info     ] process_query executed         execution_time=13.593536138534546 function=process_query
2024-07-12 16:49:31 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:49:32 [debug    ] Saved memory for query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: Which British city has cathedrals dedicated to St Nicholas and St Mary?, A: Newcastle upon Tyne
Q: Which Dickens novel's opening chapter is 'In Chancery' with a description of a foggy and muddy London street?, A: BLEAK HOUSE
Q: Which 18th century inventor and founding father of the United States coined the phrase 'time is money'?, A: Benjamin Franklyn
Q: "What was special about ""The Daily Courant"" that appeared in the early 18th century?", A: First daily newspaper
Q: Before being surpassed in 1311 AD by the Lincoln Cathedral in England, what construction with its 481 feet held the title for the tallest man-made structure for hundreds of years?, A: Great Pyramid of Giza built around 2500 BC
Q: Which TV series was about a pop group called 'Little Ladies' featuring Charlotte Cornwell, Julie Covington and Rula Lenska?, A: Rock Follies
Q: Actor Norman Painting died in November 2009, which part in a log running radio series did he make his own?, A: PHIL ARCHER
Q: What is the generic title of a series of French comic strips that were written originally by Ren Goscinny and illustrated by Albert Uderzo?, A: The Adventures of Asterix
Q: Which former Liverpool player has the middle name Everton?, A: MARK WALTERS
Q: In December 2006, the second longest motorway tunnel in Europe was opened connecting the port to the airport in which capital city?, A: Dublin
Q: Which 17th/18th century Irish politician leader was nicknamed 'the Liberator”?, A: Daniel O’Connell
Q: Referring to the cause of a person's downfall, who is the Greek goddess of punishment?, A: Nemesis
Q: The adjective leporine relates to which animal?, A: Hare
Q: Subtitled ‘What You Will’, which play begins: ‘If music be the food of love, play on’?, A: TWELFTH NIGHT
Q: "The ""Giant Marbles"" rock formation in the USA is in which national park?", A: Joshua Tree National Park
Q: In which city did the gangland St Valentine’s Day Massacre take place?, A: CHICAGO
Q: Which country invaded the Falkland Islands in April 1982?, A: Argentina
Q: Which double glazing firm used a feather in their advertising commercials, A: Everest
Q: What is the name for the point in the lunar orbit when the moon is nearest to the earth?, A: Perigee
Q: "Which classic poem's first line is ""A thing of beauty is a joy forever""?", A: ENDYMION (Keats)
Q: In culinary terms, what is the Scoville Scale used to measure?, A: HOTNESS OF CHILI PEPPERS
Q: Which supermarket chain started selling straight croissants in its stores in February?, A: TESCO
Q: "Judi Dench won an Oscar for Best Supporting Actressfor playing which character in the 1998 film ""Shakespeare in Love""?", A: Queen Elizabeth I
Q: Artiodactyla Suidae is the scientific name for which farm animal?, A: Pig
Q: Who played Beverley Hills hairdresser George Roundy in the 1975 film ‘Shampoo’?, A: Warren Beatty
Q: Lasting from 1299 to 1922, the Ottoman empire roughly corresponds to what modern day country?, A: Turkey
Q: """Torchwood"" was a spin-off of what popular TV show?", A: Doctor Who
Q: In which town is the 'TV sitcom 'Two Pints of Lager and a Packet of Crisps' set?, A: Runcorn
Q: www.lbvcr.com is the website for which event organised by the RAC, this year on Sunday November 7th?, A: LONDON TO BRIGHTON VETERAN CAR (RUN)
Q: ‘The history of all the hitherto existing society is the history of class struggles’ is part of the first chapter of which publication?, A: The Communist Manifesto
Q: What lake can be found on the border of Vermont and New York?, A: Lake Champlain
Q: The UK's longest National Trail, what path stretches 630 miles between Minehead and Poole Harbour?, A: SOUTH WEST COAST
Q: In the culinary world, what word is used for the edible offal of a fowl, typically including the heart, gizzard and liver?, A: Giblets
Q: Who was the first Briton to hold a world javelin record, A: Fatima Whitbread
Q: The traditional 'Daily rum ration' was ended in what year?, A: 1970
Q: Charlotte, TJ's, Adelphi, Barfly; Joiners, and Forum are/were names in what UK market sector?, A: Music
Q: His debut album 'Disc-Overy' was released in 2010. By what stage-name id Patrick Chukwuemeka Okogwu better known?, A: 'TINIE TEMPAH'
Q: Traitor's Gate is part of which building?, A: Tower of London
Q: "What name is given to the maxim ""employees tend to rise to their level of incompetence.""?", A: Peter Principle
Q: Which Asian city's international airport is built at the mouth of the Tama-gawa?, A: TOKYO
Q: Which singer made the news in September 2009 when Muslim groups protested that her first concert in Malaysia should be cancelled for a second time?, A: Beyonc
Q: Louis Reard created which two-piece item of clothing in 1946?, A: Bikini
Q: What name is given to a substance that accelerates a chemical reaction without itself being affected?, A: CATALYST
Q: In the 1904 Olympics, how many of the 23 track and field titles were won by Americans?, A: 21
Q: The largest known volcano in our solar system is on which planet?, A: Mars
Q: Who is the author of the Twilight series of best-selling books?, A: Stephenie Meyer
Q: What radio station do you find at 1090 on your local AM dial?, A: KPTK
Q: What is the title of the 2009 biopic film directed by Sam Taylor-Wood about the early life of John Lennon, A: Nowhere Boy
Q: Which volcano in Tanzania is the highest mountain in Africa?, A: Kilimanjaro
Q: What was the name of the ferry in the Zeebrugge disaster of 1987, A: Herald of Free Enterprise
Q: Which French racehorse, which won the Derby and Prix de I’Arc de Triomphe in 1965, was the highest rated horse by Timeform until Frankel’s performances in 2012?, A: Sea Bird
Q: What did Peter Carl Fabergé famously make?, A: Fabergé Eggs
Q: What board game for two players is known as wiq in Chinese and baduk in Korean?, A: Go
Q: What does the Unix Time system do?, A: Counts the seconds that have elapsed since Coordinated Universal Time was established on 1/1/1970
Q: In the 2005 Julian Barnes novel ‘Arthur and George’, who is Arthur?, A: Arthur Conan Doyle
Q: What nation invented the kilt?, A: Ireland
Q: According to Greek myth, who was the wife of Odysseus, celebrated for her faithfulness to him during his twenty year absence?, A: PENELOPE
Q: Annual global production (early 2000s) of rough diamonds is about?, A: 26 tonnes/metric tons
Q: Mycology is the study of what?, A: Fungi
Q: What is the appropriate name of the craft which crashed into Mercury in April?, A: Messenger
Q: In which English town is the Georgian colonnade called the Pantiles?, A: (ROYAL) TUNBRIDGE WELLS
Q: The youngest gold medalist for team GB at the 2012 Olympics, Jade Jones, won in which sport?, A: TAEKWANDO
Q: Which word can go before Work, Guard and Dog to make three other words?, A: Fire
Q: Which British film, starring Ralph Fiennes, won nine Oscars in 1997?, A: The English Patient
Q: Where is Petra, an archaeological site with rock-cut architecture and designated a World Heritage Site 1985, that was built by the Nabataeans as their capital city around 100 BC?, A: Jordan
Q: What name given to an autumn full moon in the northern hemisphere alludes to the brightness of the night sky that aids the shooting of migrating birds?, A: Hunter's moon
Q: Adi Dassler founded the Adidas company, which company was founded by his brother Rudolf in 1948?, A: Puma
Q: In December 1965, who became President of the Philippines?, A: Ferdinand Marcos
Q: A holiday on 25 March in Greece celebrates the final recognition of Greece as an independent nation following the Greek War of Independence against the Ottoman Empire. What year did this happen?, A: 1832
Q: The painting 'Faithful Unto Death' can be found in Liverpool's Walker Art Gallery. Who painted it?, A: SIR EDWARD JOHN POYNTER
Q: What was the name of the alliance of trading cities and their guilds, each with their own law system and with armies for mututal aid, that established and maintained a trade monopoly along the coast of Northern Europe, from the Baltic to the North Sea and inland, from the 13th to 17th centuries?, A: Hanseatic League
Q: What colour is pistachio flavoured ice cream?, A: Green
Q: Released in 1994, 'Objects In The Rear View Mirror May Appear Closer Than They Are' is the hit single with the longest un-bracketed title in UK chart history. Who sang it?, A: MEATLOAF
Q: "Who wrote the nonsense poem ""Jabberwocky""?", A: Lewis Carroll
Q: Whose first husband was a policeman called Jim Dougherty?, A: MARILYN MONROE
Q: In 2012 which former Liberian president was found guilty of crimes against humanity?, A: Charles Taylor
Q: Which capital city is served by Arlanda Airport, A: Stockholm
Q: Who won the 'Oscar' for Best Actress in the 1950's film'Born Yesterday'?, A: JUDY HOLLIDAY
Q: Which Cambridge College was attended by Anthony Blunt, Kim Philby and Guy Burgess?, A: TRINITY
Q: "Who published ""A Book of Nonsense"" (a volume of limericks that went through three editions) in 1846, ""The History of the Seven Families of the Lake Pipple-Popple"" in 1865, and ""The Owl and the Pussycat"" in 1867?", A: Edward Lear
Q: Which National Trust property in Wiltshire was once owned by William Henry Fox-Talbot the pioneer of photography?, A: Lacock Abbey
Q: Which 1960 film is based on the 1954 film ‘Seven Samurai’?, A: The Magnificent Seven
Q: Who was US Attorney General from January 1961 until September 1964 and a Senator for New York from January 1965 until June 1968?, A: Robert Kennedy
Q: Who was on the English throne in 1400?, A: Henry 4th
Q: What is next in the sequence: Lima, Quito, Bogota...?, A: Caracas
Q: Who on television is the 'Idiot Abroad'?, A: KARL PILKINGTON
Q: "In England, in the first half of the twentieth century, a ""vesta"" was a common term for a type of what?", A: Match
Q: Damascus is the capital of which country?, A: Syria
Q: Across Eastern Europe, the Middle East and parts of Asia, what are known as keftes or kufta, and similar words derived from Persian, kuftan, meaning beat or grind?, A: Meatballs
Q: "Colton Harris Moore, the 6'5"" American teenager who made the news because he stole a boat and a plane, acquired what nickname because of his lack of footwear?", A: The Barefoot Bandit
Q: What animals does a mahout work with?, A: Elephants
Q: If it was Phil Mickelson in 2006, Zach Johnson in 2007, and Trevor Immelman in 2008, who was it in 2009?, A: Angel Cabrera
Q: Which mediaeval author wrote The Canterbury Tales, A: Geoffrey Chaucer
Q: Who founded the 'London Philharmonic Orchestra' in 1931?, A: Sir Thomas Beecham
Q: What is an open plane curve formed by the intersection of a cone with a plane parallel to its side, resembling the path of a projectile under the action of gravity?, A: Parabola
Q: What was the Russian City of Nizhny Novgorod called between 1932 and 1990?, A: GORKY
Q: In which English county was former British Prime minister Margaret Thatcher born?, A: Lincolnshire
Q: What number shirt did England rugby union player Jonny Wilkinson wear in the 2011 World Cup?, A: 10
Q: Author Alex Haley, born on Aug 11, 1921, wrote what epic story of his family origins, later to be made a rather popular mini-series?, A: Roots: The Saga of an American Family
Q: Which famous Englishman had a cat called Hodge which he fed on oysters?, A: Dr Sam Johnson
Q: In which county will you find Fountains abbey and Studley Water Gardens?, A: North Yorkshire
Q: In the Commonwealth games in Delhi, which British athlete won the mens 200m gold medal?, A: Leon Baptiste
Q: To ‘Defenestrate’ is to throw something or someone out of what?, A: A window
Q: "What is the literal meaning of the French expression ""Son et Lumiere""?", A: """SOUND AND LIGHT"""
Q: The journal of which Amsterdam schoolgirl was first published in 1947 under the title The Diary of a Young Girl?, A: Anne Frank
Q: Which single word connects 'The Spanish Armada, and the TV series 'The Worker'?, A: DRAKE
Q: Which premiership manager upset Louis Van Gaal in February 2015, when he described his team as long ball united?, A: Sam Allardyce
Q: In which novel does Michael Henchard sell his wife and child for 5 guineas?, A: The Mayor of Casterbridge
Q: Which leader of a British coalition Government became the first Earl of Dwfor?, A: DAVID LLOYD-GEORGE
Q: Ben Collins was 'outed' in January 2009 as which mysterious TV character?, A: The Stig
Q: The big-selling country and western hit song, notably by Elvis Presley in 1957, is '(What?) Christmas'?, A: Blue
Q: The gravesite of what American writer, buried in Baltimore, is mysteriously visited every January 19th, to receive a toast of cognac and 3 roses?, A: Edgar Allen Poe
Q: On a clothing label a cross through what shape means 'Do Not Dry Clean'?, A: CIRCLE
Q: Who, in May 2006 when aged 17 years and 75 days, became the youngest footballer to play for England?, A: Theo Walcott
Q: Which capital city is known as Praha by its inhabitants?, A: PRAGUE
Q: The assassination of Salvatore Maragano led to a major change in what organisation?, A: New York mafia
Q: The Song of Simeon canticle is also known by which Latin name?, A: Nunc Dimittis
Q: What name was collectively given to the sons of Poseidon, who dwelt with him at the bottom of the sea?, A: Tritons
Q: Who played the sergeant in Carry On Sergeant?, A: William Hartnell
Q: On what date does St. David’s Day fall?, A: March 1st
Q: What is the imperial distance of a marathon race?, A: 26 miles, 385 yards
Q: Which island group in the South Atlantic was once known as the Sebald Islands?, A: The Falkland Islands
Q: The Italian cheese called dolcelatte translates into English as what?, A: Sweet milk
Q: Which mediaeval author wrote The Canterbury Tales, A: Geoffrey Chaucer
Q: What is the pleasant activity of osculation?, A: Kissing
Q: Canal+ TV is based in which country?, A: France
Q: What was the currency of the Netherlands from the 17th century until 2002, A: Guilder
Q: Who duetted with Aretha Franklin on Sisters Are Doing It For Themselves, A: Annie Lennox
Q: What is stevia a substitute for?, A: Sugar
Q: Which element is mixed with gold to make red gold?, A: Copper
Q: Why are Angel Falls, Venezuela, so called?, A: They were discovered by James Angel
Q: Which builder of steam engines formed a successful partnership with Matthew Boulton?, A: James Watt
 with result: NO RELEVANT INFORMATION
2024-07-12 16:49:32 [info     ] Loaded corpus with 13 entries in 0.01 seconds
2024-07-12 16:49:32 [info     ] Updated indexing with 13 documents in 0.01 seconds
2024-07-12 16:49:32 [info     ] _update_indexing executed      execution_time=0.005614280700683594 function=_update_indexing
2024-07-12 16:49:32 [info     ] auto_link_memories executed    execution_time=0.016385793685913086 function=auto_link_memories
2024-07-12 16:49:32 [info     ] Memory saved                   extra={'query': 'Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]\nQ: Which British city has cathedrals dedicated to St Nicholas and St Mary?, A: Newcastle upon Tyne\nQ: Which Dickens novel\'s opening chapter is \'In Chancery\' with a description of a foggy and muddy London street?, A: BLEAK HOUSE\nQ: Which 18th century inventor and founding father of the United States coined the phrase \'time is money\'?, A: Benjamin Franklyn\nQ: "What was special about ""The Daily Courant"" that appeared in the early 18th century?", A: First daily newspaper\nQ: Before being surpassed in 1311 AD by the Lincoln Cathedral in England, what construction with its 481 feet held the title for the tallest man-made structure for hundreds of years?, A: Great Pyramid of Giza built around 2500 BC\nQ: Which TV series was about a pop group called \'Little Ladies\' featuring Charlotte Cornwell, Julie Covington and Rula Lenska?, A: Rock Follies\nQ: Actor Norman Painting died in November 2009, which part in a log running radio series did he make his own?, A: PHIL ARCHER\nQ: What is the generic title of a series of French comic strips that were written originally by Ren Goscinny and illustrated by Albert Uderzo?, A: The Adventures of Asterix\nQ: Which former Liverpool player has the middle name Everton?, A: MARK WALTERS\nQ: In December 2006, the second longest motorway tunnel in Europe was opened connecting the port to the airport in which capital city?, A: Dublin\nQ: Which 17th/18th century Irish politician leader was nicknamed \'the Liberator”?, A: Daniel O’Connell\nQ: Referring to the cause of a person\'s downfall, who is the Greek goddess of punishment?, A: Nemesis\nQ: The adjective leporine relates to which animal?, A: Hare\nQ: Subtitled ‘What You Will’, which play begins: ‘If music be the food of love, play on’?, A: TWELFTH NIGHT\nQ: "The ""Giant Marbles"" rock formation in the USA is in which national park?", A: Joshua Tree National Park\nQ: In which city did the gangland St Valentine’s Day Massacre take place?, A: CHICAGO\nQ: Which country invaded the Falkland Islands in April 1982?, A: Argentina\nQ: Which double glazing firm used a feather in their advertising commercials, A: Everest\nQ: What is the name for the point in the lunar orbit when the moon is nearest to the earth?, A: Perigee\nQ: "Which classic poem\'s first line is ""A thing of beauty is a joy forever""?", A: ENDYMION (Keats)\nQ: In culinary terms, what is the Scoville Scale used to measure?, A: HOTNESS OF CHILI PEPPERS\nQ: Which supermarket chain started selling straight croissants in its stores in February?, A: TESCO\nQ: "Judi Dench won an Oscar for Best Supporting Actressfor playing which character in the 1998 film ""Shakespeare in Love""?", A: Queen Elizabeth I\nQ: Artiodactyla Suidae is the scientific name for which farm animal?, A: Pig\nQ: Who played Beverley Hills hairdresser George Roundy in the 1975 film ‘Shampoo’?, A: Warren Beatty\nQ: Lasting from 1299 to 1922, the Ottoman empire roughly corresponds to what modern day country?, A: Turkey\nQ: """Torchwood"" was a spin-off of what popular TV show?", A: Doctor Who\nQ: In which town is the \'TV sitcom \'Two Pints of Lager and a Packet of Crisps\' set?, A: Runcorn\nQ: www.lbvcr.com is the website for which event organised by the RAC, this year on Sunday November 7th?, A: LONDON TO BRIGHTON VETERAN CAR (RUN)\nQ: ‘The history of all the hitherto existing society is the history of class struggles’ is part of the first chapter of which publication?, A: The Communist Manifesto\nQ: What lake can be found on the border of Vermont and New York?, A: Lake Champlain\nQ: The UK\'s longest National Trail, what path stretches 630 miles between Minehead and Poole Harbour?, A: SOUTH WEST COAST\nQ: In the culinary world, what word is used for the edible offal of a fowl, typically including the heart, gizzard and liver?, A: Giblets\nQ: Who was the first Briton to hold a world javelin record, A: Fatima Whitbread\nQ: The traditional \'Daily rum ration\' was ended in what year?, A: 1970\nQ: Charlotte, TJ\'s, Adelphi, Barfly; Joiners, and Forum are/were names in what UK market sector?, A: Music\nQ: His debut album \'Disc-Overy\' was released in 2010. By what stage-name id Patrick Chukwuemeka Okogwu better known?, A: \'TINIE TEMPAH\'\nQ: Traitor\'s Gate is part of which building?, A: Tower of London\nQ: "What name is given to the maxim ""employees tend to rise to their level of incompetence.""?", A: Peter Principle\nQ: Which Asian city\'s international airport is built at the mouth of the Tama-gawa?, A: TOKYO\nQ: Which singer made the news in September 2009 when Muslim groups protested that her first concert in Malaysia should be cancelled for a second time?, A: Beyonc\nQ: Louis Reard created which two-piece item of clothing in 1946?, A: Bikini\nQ: What name is given to a substance that accelerates a chemical reaction without itself being affected?, A: CATALYST\nQ: In the 1904 Olympics, how many of the 23 track and field titles were won by Americans?, A: 21\nQ: The largest known volcano in our solar system is on which planet?, A: Mars\nQ: Who is the author of the Twilight series of best-selling books?, A: Stephenie Meyer\nQ: What radio station do you find at 1090 on your local AM dial?, A: KPTK\nQ: What is the title of the 2009 biopic film directed by Sam Taylor-Wood about the early life of John Lennon, A: Nowhere Boy\nQ: Which volcano in Tanzania is the highest mountain in Africa?, A: Kilimanjaro\nQ: What was the name of the ferry in the Zeebrugge disaster of 1987, A: Herald of Free Enterprise\nQ: Which French racehorse, which won the Derby and Prix de I’Arc de Triomphe in 1965, was the highest rated horse by Timeform until Frankel’s performances in 2012?, A: Sea Bird\nQ: What did Peter Carl Fabergé famously make?, A: Fabergé Eggs\nQ: What board game for two players is known as wiq in Chinese and baduk in Korean?, A: Go\nQ: What does the Unix Time system do?, A: Counts the seconds that have elapsed since Coordinated Universal Time was established on 1/1/1970\nQ: In the 2005 Julian Barnes novel ‘Arthur and George’, who is Arthur?, A: Arthur Conan Doyle\nQ: What nation invented the kilt?, A: Ireland\nQ: According to Greek myth, who was the wife of Odysseus, celebrated for her faithfulness to him during his twenty year absence?, A: PENELOPE\nQ: Annual global production (early 2000s) of rough diamonds is about?, A: 26 tonnes/metric tons\nQ: Mycology is the study of what?, A: Fungi\nQ: What is the appropriate name of the craft which crashed into Mercury in April?, A: Messenger\nQ: In which English town is the Georgian colonnade called the Pantiles?, A: (ROYAL) TUNBRIDGE WELLS\nQ: The youngest gold medalist for team GB at the 2012 Olympics, Jade Jones, won in which sport?, A: TAEKWANDO\nQ: Which word can go before Work, Guard and Dog to make three other words?, A: Fire\nQ: Which British film, starring Ralph Fiennes, won nine Oscars in 1997?, A: The English Patient\nQ: Where is Petra, an archaeological site with rock-cut architecture and designated a World Heritage Site 1985, that was built by the Nabataeans as their capital city around 100 BC?, A: Jordan\nQ: What name given to an autumn full moon in the northern hemisphere alludes to the brightness of the night sky that aids the shooting of migrating birds?, A: Hunter\'s moon\nQ: Adi Dassler founded the Adidas company, which company was founded by his brother Rudolf in 1948?, A: Puma\nQ: In December 1965, who became President of the Philippines?, A: Ferdinand Marcos\nQ: A holiday on 25 March in Greece celebrates the final recognition of Greece as an independent nation following the Greek War of Independence against the Ottoman Empire. What year did this happen?, A: 1832\nQ: The painting \'Faithful Unto Death\' can be found in Liverpool\'s Walker Art Gallery. Who painted it?, A: SIR EDWARD JOHN POYNTER\nQ: What was the name of the alliance of trading cities and their guilds, each with their own law system and with armies for mututal aid, that established and maintained a trade monopoly along the coast of Northern Europe, from the Baltic to the North Sea and inland, from the 13th to 17th centuries?, A: Hanseatic League\nQ: What colour is pistachio flavoured ice cream?, A: Green\nQ: Released in 1994, \'Objects In The Rear View Mirror May Appear Closer Than They Are\' is the hit single with the longest un-bracketed title in UK chart history. Who sang it?, A: MEATLOAF\nQ: "Who wrote the nonsense poem ""Jabberwocky""?", A: Lewis Carroll\nQ: Whose first husband was a policeman called Jim Dougherty?, A: MARILYN MONROE\nQ: In 2012 which former Liberian president was found guilty of crimes against humanity?, A: Charles Taylor\nQ: Which capital city is served by Arlanda Airport, A: Stockholm\nQ: Who won the \'Oscar\' for Best Actress in the 1950\'s film\'Born Yesterday\'?, A: JUDY HOLLIDAY\nQ: Which Cambridge College was attended by Anthony Blunt, Kim Philby and Guy Burgess?, A: TRINITY\nQ: "Who published ""A Book of Nonsense"" (a volume of limericks that went through three editions) in 1846, ""The History of the Seven Families of the Lake Pipple-Popple"" in 1865, and ""The Owl and the Pussycat"" in 1867?", A: Edward Lear\nQ: Which National Trust property in Wiltshire was once owned by William Henry Fox-Talbot the pioneer of photography?, A: Lacock Abbey\nQ: Which 1960 film is based on the 1954 film ‘Seven Samurai’?, A: The Magnificent Seven\nQ: Who was US Attorney General from January 1961 until September 1964 and a Senator for New York from January 1965 until June 1968?, A: Robert Kennedy\nQ: Who was on the English throne in 1400?, A: Henry 4th\nQ: What is next in the sequence: Lima, Quito, Bogota...?, A: Caracas\nQ: Who on television is the \'Idiot Abroad\'?, A: KARL PILKINGTON\nQ: "In England, in the first half of the twentieth century, a ""vesta"" was a common term for a type of what?", A: Match\nQ: Damascus is the capital of which country?, A: Syria\nQ: Across Eastern Europe, the Middle East and parts of Asia, what are known as keftes or kufta, and similar words derived from Persian, kuftan, meaning beat or grind?, A: Meatballs\nQ: "Colton Harris Moore, the 6\'5"" American teenager who made the news because he stole a boat and a plane, acquired what nickname because of his lack of footwear?", A: The Barefoot Bandit\nQ: What animals does a mahout work with?, A: Elephants\nQ: If it was Phil Mickelson in 2006, Zach Johnson in 2007, and Trevor Immelman in 2008, who was it in 2009?, A: Angel Cabrera\nQ: Which mediaeval author wrote The Canterbury Tales, A: Geoffrey Chaucer\nQ: Who founded the \'London Philharmonic Orchestra\' in 1931?, A: Sir Thomas Beecham\nQ: What is an open plane curve formed by the intersection of a cone with a plane parallel to its side, resembling the path of a projectile under the action of gravity?, A: Parabola\nQ: What was the Russian City of Nizhny Novgorod called between 1932 and 1990?, A: GORKY\nQ: In which English county was former British Prime minister Margaret Thatcher born?, A: Lincolnshire\nQ: What number shirt did England rugby union player Jonny Wilkinson wear in the 2011 World Cup?, A: 10\nQ: Author Alex Haley, born on Aug 11, 1921, wrote what epic story of his family origins, later to be made a rather popular mini-series?, A: Roots: The Saga of an American Family\nQ: Which famous Englishman had a cat called Hodge which he fed on oysters?, A: Dr Sam Johnson\nQ: In which county will you find Fountains abbey and Studley Water Gardens?, A: North Yorkshire\nQ: In the Commonwealth games in Delhi, which British athlete won the mens 200m gold medal?, A: Leon Baptiste\nQ: To ‘Defenestrate’ is to throw something or someone out of what?, A: A window\nQ: "What is the literal meaning of the French expression ""Son et Lumiere""?", A: """SOUND AND LIGHT"""\nQ: The journal of which Amsterdam schoolgirl was first published in 1947 under the title The Diary of a Young Girl?, A: Anne Frank\nQ: Which single word connects \'The Spanish Armada, and the TV series \'The Worker\'?, A: DRAKE\nQ: Which premiership manager upset Louis Van Gaal in February 2015, when he described his team as long ball united?, A: Sam Allardyce\nQ: In which novel does Michael Henchard sell his wife and child for 5 guineas?, A: The Mayor of Casterbridge\nQ: Which leader of a British coalition Government became the first Earl of Dwfor?, A: DAVID LLOYD-GEORGE\nQ: Ben Collins was \'outed\' in January 2009 as which mysterious TV character?, A: The Stig\nQ: The big-selling country and western hit song, notably by Elvis Presley in 1957, is \'(What?) Christmas\'?, A: Blue\nQ: The gravesite of what American writer, buried in Baltimore, is mysteriously visited every January 19th, to receive a toast of cognac and 3 roses?, A: Edgar Allen Poe\nQ: On a clothing label a cross through what shape means \'Do Not Dry Clean\'?, A: CIRCLE\nQ: Who, in May 2006 when aged 17 years and 75 days, became the youngest footballer to play for England?, A: Theo Walcott\nQ: Which capital city is known as Praha by its inhabitants?, A: PRAGUE\nQ: The assassination of Salvatore Maragano led to a major change in what organisation?, A: New York mafia\nQ: The Song of Simeon canticle is also known by which Latin name?, A: Nunc Dimittis\nQ: What name was collectively given to the sons of Poseidon, who dwelt with him at the bottom of the sea?, A: Tritons\nQ: Who played the sergeant in Carry On Sergeant?, A: William Hartnell\nQ: On what date does St. David’s Day fall?, A: March 1st\nQ: What is the imperial distance of a marathon race?, A: 26 miles, 385 yards\nQ: Which island group in the South Atlantic was once known as the Sebald Islands?, A: The Falkland Islands\nQ: The Italian cheese called dolcelatte translates into English as what?, A: Sweet milk\nQ: Which mediaeval author wrote The Canterbury Tales, A: Geoffrey Chaucer\nQ: What is the pleasant activity of osculation?, A: Kissing\nQ: Canal+ TV is based in which country?, A: France\nQ: What was the currency of the Netherlands from the 17th century until 2002, A: Guilder\nQ: Who duetted with Aretha Franklin on Sisters Are Doing It For Themselves, A: Annie Lennox\nQ: What is stevia a substitute for?, A: Sugar\nQ: Which element is mixed with gold to make red gold?, A: Copper\nQ: Why are Angel Falls, Venezuela, so called?, A: They were discovered by James Angel\nQ: Which builder of steam engines formed a successful partnership with Matthew Boulton?, A: James Watt\n', 'memory_id': 13}
2024-07-12 16:49:32 [info     ] save_memory executed           execution_time=0.43570733070373535 function=save_memory
2024-07-12 16:49:32 [info     ] Query processed successfully
INFO:     172.18.0.1:48398 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:49:32 [info     ] Received query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: "The ""Hall of Mirrors"" is in which building?", A: Palace of Versailles
Q: In police parlance what are ‘dabs’?, A: Fingerprints
Q: What is the traditional/modern language of Iran and old Persia, named from the latter?, A: Farsi
Q: Which play set in Lancashire in the 1850's tells of boot maker Will Mossop's romance with his boss's daughter?, A: HOBSON'S CHOICE
Q: Which group had a number one hit in 2009 with 'I Gotta Feeling'?, A: BLACK EYED PEAS
Q: What is the biggest Italian automaker?, A: Fiat
Q: Which Bishop of the Church of England signs his first name followed by Roffen?, A: BISHOP OF ROCHESTER
Q: The Belgian beer ‘Kriek’ is flavoured with which fruit?, A: Cherry
Q: In February 1987, which UK airline was privatised and listed on the London Stock Exchange?, A: British Airways
Q: The eyes of Dr. T. J. Eckleberg are a dominant symbol in which 1925 novel and later films?, A: THE GREAT GATSBY
Q: What famous road began in Chicago, Illinois, ending at Santa Monica, California?, A: Route 66
Q: The Red Sea is connected to the Indian Ocean by which gulf ?, A: Gulf of Aden.
Q: Who was the King of Libya who was overthrown by a military coupled by Colonel Qaddafi in 1969?, A: IDRIS I

2024-07-12 16:49:32 [info     ] get_linked_memories executed   execution_time=0.0035865306854248047 function=get_linked_memories
2024-07-12 16:49:32 [info     ] get_linked_memories executed   execution_time=0.0038595199584960938 function=get_linked_memories
2024-07-12 16:49:32 [info     ] get_linked_memories executed   execution_time=0.0034401416778564453 function=get_linked_memories
2024-07-12 16:49:32 [info     ] retrieve_relevant_memories executed execution_time=0.262523889541626 function=retrieve_relevant_memories
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x6fd6a921ae65e80c9b94eb04b84a4511",
        "span_id": "0x50cdf23dcfbd766c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x542dab3391169d29",
    "start_time": "2024-07-12T16:49:18.196243Z",
    "end_time": "2024-07-12T16:49:32.226003Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x6fd6a921ae65e80c9b94eb04b84a4511",
        "span_id": "0x18d5ce8bec063683",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x542dab3391169d29",
    "start_time": "2024-07-12T16:49:32.226185Z",
    "end_time": "2024-07-12T16:49:32.226436Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x6fd6a921ae65e80c9b94eb04b84a4511",
        "span_id": "0x4ac92b4189761967",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x542dab3391169d29",
    "start_time": "2024-07-12T16:49:32.226479Z",
    "end_time": "2024-07-12T16:49:32.226530Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x6fd6a921ae65e80c9b94eb04b84a4511",
        "span_id": "0x542dab3391169d29",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:18.195794Z",
    "end_time": "2024-07-12T16:49:32.226541Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 48398,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xe591d21e0f8d3058bfc79027d925f92b",
        "span_id": "0xb5cb7a334bf0dbc7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x513aebfd9f3797a1",
    "start_time": "2024-07-12T16:49:32.247663Z",
    "end_time": "2024-07-12T16:49:32.247685Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:42016 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x1c71f8556ae075363d1709a85b4115c6",
        "span_id": "0x76099005f1f1aa5d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xecdc71f90f36fc2f",
    "start_time": "2024-07-12T16:49:47.843036Z",
    "end_time": "2024-07-12T16:49:47.843262Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x1c71f8556ae075363d1709a85b4115c6",
        "span_id": "0x6d25dad6d3d552b0",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xecdc71f90f36fc2f",
    "start_time": "2024-07-12T16:49:47.843315Z",
    "end_time": "2024-07-12T16:49:47.843342Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x1c71f8556ae075363d1709a85b4115c6",
        "span_id": "0xecdc71f90f36fc2f",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:47.842744Z",
    "end_time": "2024-07-12T16:49:47.843348Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 42016,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:41850 - "GET /health HTTP/1.1" 200 OK
2024-07-12 16:50:18 [info     ] process_query executed         execution_time=45.791353702545166 function=process_query
2024-07-12 16:50:18 [debug    ] Generated response             response=NO RELEVANT INFORMATION
2024-07-12 16:50:18 [debug    ] Saved memory for query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: "The ""Hall of Mirrors"" is in which building?", A: Palace of Versailles
Q: In police parlance what are ‘dabs’?, A: Fingerprints
Q: What is the traditional/modern language of Iran and old Persia, named from the latter?, A: Farsi
Q: Which play set in Lancashire in the 1850's tells of boot maker Will Mossop's romance with his boss's daughter?, A: HOBSON'S CHOICE
Q: Which group had a number one hit in 2009 with 'I Gotta Feeling'?, A: BLACK EYED PEAS
Q: What is the biggest Italian automaker?, A: Fiat
Q: Which Bishop of the Church of England signs his first name followed by Roffen?, A: BISHOP OF ROCHESTER
Q: The Belgian beer ‘Kriek’ is flavoured with which fruit?, A: Cherry
Q: In February 1987, which UK airline was privatised and listed on the London Stock Exchange?, A: British Airways
Q: The eyes of Dr. T. J. Eckleberg are a dominant symbol in which 1925 novel and later films?, A: THE GREAT GATSBY
Q: What famous road began in Chicago, Illinois, ending at Santa Monica, California?, A: Route 66
Q: The Red Sea is connected to the Indian Ocean by which gulf ?, A: Gulf of Aden.
Q: Who was the King of Libya who was overthrown by a military coupled by Colonel Qaddafi in 1969?, A: IDRIS I
 with result: NO RELEVANT INFORMATION
2024-07-12 16:50:18 [info     ] Loaded corpus with 14 entries in 0.00 seconds
2024-07-12 16:50:18 [info     ] Updated indexing with 14 documents in 0.00 seconds
2024-07-12 16:50:18 [info     ] _update_indexing executed      execution_time=0.004882335662841797 function=_update_indexing
2024-07-12 16:50:18 [info     ] auto_link_memories executed    execution_time=0.011202096939086914 function=auto_link_memories
2024-07-12 16:50:18 [info     ] Memory saved                   extra={'query': 'Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]\nQ: "The ""Hall of Mirrors"" is in which building?", A: Palace of Versailles\nQ: In police parlance what are ‘dabs’?, A: Fingerprints\nQ: What is the traditional/modern language of Iran and old Persia, named from the latter?, A: Farsi\nQ: Which play set in Lancashire in the 1850\'s tells of boot maker Will Mossop\'s romance with his boss\'s daughter?, A: HOBSON\'S CHOICE\nQ: Which group had a number one hit in 2009 with \'I Gotta Feeling\'?, A: BLACK EYED PEAS\nQ: What is the biggest Italian automaker?, A: Fiat\nQ: Which Bishop of the Church of England signs his first name followed by Roffen?, A: BISHOP OF ROCHESTER\nQ: The Belgian beer ‘Kriek’ is flavoured with which fruit?, A: Cherry\nQ: In February 1987, which UK airline was privatised and listed on the London Stock Exchange?, A: British Airways\nQ: The eyes of Dr. T. J. Eckleberg are a dominant symbol in which 1925 novel and later films?, A: THE GREAT GATSBY\nQ: What famous road began in Chicago, Illinois, ending at Santa Monica, California?, A: Route 66\nQ: The Red Sea is connected to the Indian Ocean by which gulf ?, A: Gulf of Aden.\nQ: Who was the King of Libya who was overthrown by a military coupled by Colonel Qaddafi in 1969?, A: IDRIS I\n', 'memory_id': 14}
2024-07-12 16:50:18 [info     ] save_memory executed           execution_time=0.35012173652648926 function=save_memory
2024-07-12 16:50:18 [info     ] Query processed successfully
INFO:     172.18.0.1:55554 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:50:18 [info     ] Received query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: What is a nectarine a cross between, A: None. The nectarine is a smooth skinned variety of the peach

2024-07-12 16:50:18 [info     ] get_linked_memories executed   execution_time=0.012582540512084961 function=get_linked_memories
2024-07-12 16:50:18 [info     ] get_linked_memories executed   execution_time=0.004967451095581055 function=get_linked_memories
2024-07-12 16:50:18 [info     ] retrieve_relevant_memories executed execution_time=0.5768017768859863 function=retrieve_relevant_memories
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x06cd069776f58cad1c54b1fc4849000e",
        "span_id": "0x44b10f6cf626cb55",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x8b5c0fe6154f09c7",
    "start_time": "2024-07-12T16:50:17.865327Z",
    "end_time": "2024-07-12T16:50:17.865553Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x06cd069776f58cad1c54b1fc4849000e",
        "span_id": "0xbc1169b8fb5e8f9c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x8b5c0fe6154f09c7",
    "start_time": "2024-07-12T16:50:17.865606Z",
    "end_time": "2024-07-12T16:50:17.865639Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x06cd069776f58cad1c54b1fc4849000e",
        "span_id": "0x8b5c0fe6154f09c7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:50:17.865032Z",
    "end_time": "2024-07-12T16:50:17.865647Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 41850,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xe591d21e0f8d3058bfc79027d925f92b",
        "span_id": "0x0a1f70ffcdb0ea15",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x513aebfd9f3797a1",
    "start_time": "2024-07-12T16:49:32.247926Z",
    "end_time": "2024-07-12T16:50:18.389872Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xe591d21e0f8d3058bfc79027d925f92b",
        "span_id": "0x2c3c5d90cb209ff4",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x513aebfd9f3797a1",
    "start_time": "2024-07-12T16:50:18.390039Z",
    "end_time": "2024-07-12T16:50:18.390243Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xe591d21e0f8d3058bfc79027d925f92b",
        "span_id": "0x6af0bcaf112a19e7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x513aebfd9f3797a1",
    "start_time": "2024-07-12T16:50:18.390289Z",
    "end_time": "2024-07-12T16:50:18.390319Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xe591d21e0f8d3058bfc79027d925f92b",
        "span_id": "0x513aebfd9f3797a1",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:49:32.247419Z",
    "end_time": "2024-07-12T16:50:18.390326Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 55554,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x38e3db83905e62f83632f625104c196f",
        "span_id": "0xcec36af0a39946a4",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5d16034325b234ca",
    "start_time": "2024-07-12T16:50:18.398008Z",
    "end_time": "2024-07-12T16:50:18.398025Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:42566 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x18968e41719bb660194b1aef6106b639",
        "span_id": "0xc365c5a953a6abc2",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4f1d779e89a57cbc",
    "start_time": "2024-07-12T16:50:47.887918Z",
    "end_time": "2024-07-12T16:50:47.888138Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x18968e41719bb660194b1aef6106b639",
        "span_id": "0x4377dc421709092d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4f1d779e89a57cbc",
    "start_time": "2024-07-12T16:50:47.888184Z",
    "end_time": "2024-07-12T16:50:47.888212Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x18968e41719bb660194b1aef6106b639",
        "span_id": "0x4f1d779e89a57cbc",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:50:47.887621Z",
    "end_time": "2024-07-12T16:50:47.888218Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 42566,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:51:05 [info     ] process_query executed         execution_time=47.48818492889404 function=process_query
2024-07-12 16:51:05 [debug    ] Generated response             response=Here is the answer:

["Palace of Versailles", "Fingerprints", "Farsi", "HOBSON'S CHOICE", "BLACK EYED PEAS", "Fiat", "BISHOP OF ROCHESTER", "Cherry", "British Airways", "THE GREAT GATSBY", "Route 66", "Gulf of Aden", "IDRIS I", "Newcastle upon Tyne", "BLEAK HOUSE", "Benjamin Franklyn", "First daily newspaper", "Great Pyramid of Giza built around 2500 BC", "Rock Follies", "PHIL ARCHER", "The Adventures of Asterix", "MARK WALTERS", "Dublin", "Daniel O’Connell", "Nemesis", "Hare", "TWELFTH NIGHT", "Joshua Tree National Park", "CHICAGO", "Argentina", "Everest", "Perigee", "ENDYMION (Keats)", "HOTNESS OF CHILI PEPPERS", "TESCO", "Queen Elizabeth I", "Pig", "Warren Beatty", "Turkey", "Doctor Who", "Runcorn", "London to Brighton Veteran Car Run", "The Communist Manifesto", "Lake Champlain", "SOUTH WEST COAST", "Giblets", "Fatima Whitbread", "1970", "Music", "'TINIE TEMPAH", "Tower of London", "Peter Principle", "TOKYO", "Beyonc", "Bikini", "CATALYST", "21", "Mars", "Stephenie Meyer", "KPTK", "Nowhere Boy", "Kilimanjaro", "Herald of Free Enterprise", "Sea Bird", "Fabergé Eggs", "Go", "Counts the seconds that have elapsed since Coordinated Universal Time was established on 1/1/1970", "Arthur Conan Doyle", "Ireland", "PENELOPE", "26 tonnes/metric tons", "Fungi", "Messenger", "(ROYAL) TUNBRIDGE WELLS", "TAEKWANDO", "Fire", "The English Patient", "Jordan", "Hunter's moon", "Puma", "Ferdinand Marcos", "1832", "SIR EDWARD JOHN POYNTER", "Hanseatic League", "Green", "MEATLOAF", "Lewis Carroll", "MARILYN MONROE", "Charles Taylor", "Stockholm", "JUDY HOLLIDAY", "TRINITY", "Edward Lear", "Lacock Abbey", "The Magnificent Seven", "Robert Kennedy", "Henry 4th", "Caracas", "KARL PILKINGTON", "Match", "Syria", "Meatballs", "The Barefoot Bandit", "Elephants", "Angel Cabrera", "Geoffrey Chaucer", "Sir Thomas Beecham", "Parabola", "GORKY", "Lincolnshire", "10", "Roots: The Saga of an American Family", "Dr Sam Johnson", "North Yorkshire", "Leon Baptiste", "Window", """SOUND AND LIGHT""", "Anne Frank", "DRAKE", "Sam Allardyce", "The Mayor of Casterbridge", "DAVID LLOYD-GEORGE", "The Stig", "Blue", "Edgar Allen Poe", "Circle", "Theo Walcott", "PRAGUE", "New York mafia", "Nunc Dimittis", "Tritons", "William Hartnell", "March 1st", "26 miles, 385 yards", "The Falkland Islands", "Sweet milk", "Geoffrey Chaucer", "Kissing", "France", "Guilder", "Annie Lennox", "Sugar", "Copper", "They were discovered by James Angel", "Copper", "James Watt"]
2024-07-12 16:51:06 [debug    ] Saved memory for query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: What is a nectarine a cross between, A: None. The nectarine is a smooth skinned variety of the peach
 with result: Here is the answer:

["Palace of Versailles", "Fingerprints", "Farsi", "HOBSON'S CHOICE", "BLACK EYED PEAS", "Fiat", "BISHOP OF ROCHESTER", "Cherry", "British Airways", "THE GREAT GATSBY", "Route 66", "Gulf of Aden", "IDRIS I", "Newcastle upon Tyne", "BLEAK HOUSE", "Benjamin Franklyn", "First daily newspaper", "Great Pyramid of Giza built around 2500 BC", "Rock Follies", "PHIL ARCHER", "The Adventures of Asterix", "MARK WALTERS", "Dublin", "Daniel O’Connell", "Nemesis", "Hare", "TWELFTH NIGHT", "Joshua Tree National Park", "CHICAGO", "Argentina", "Everest", "Perigee", "ENDYMION (Keats)", "HOTNESS OF CHILI PEPPERS", "TESCO", "Queen Elizabeth I", "Pig", "Warren Beatty", "Turkey", "Doctor Who", "Runcorn", "London to Brighton Veteran Car Run", "The Communist Manifesto", "Lake Champlain", "SOUTH WEST COAST", "Giblets", "Fatima Whitbread", "1970", "Music", "'TINIE TEMPAH", "Tower of London", "Peter Principle", "TOKYO", "Beyonc", "Bikini", "CATALYST", "21", "Mars", "Stephenie Meyer", "KPTK", "Nowhere Boy", "Kilimanjaro", "Herald of Free Enterprise", "Sea Bird", "Fabergé Eggs", "Go", "Counts the seconds that have elapsed since Coordinated Universal Time was established on 1/1/1970", "Arthur Conan Doyle", "Ireland", "PENELOPE", "26 tonnes/metric tons", "Fungi", "Messenger", "(ROYAL) TUNBRIDGE WELLS", "TAEKWANDO", "Fire", "The English Patient", "Jordan", "Hunter's moon", "Puma", "Ferdinand Marcos", "1832", "SIR EDWARD JOHN POYNTER", "Hanseatic League", "Green", "MEATLOAF", "Lewis Carroll", "MARILYN MONROE", "Charles Taylor", "Stockholm", "JUDY HOLLIDAY", "TRINITY", "Edward Lear", "Lacock Abbey", "The Magnificent Seven", "Robert Kennedy", "Henry 4th", "Caracas", "KARL PILKINGTON", "Match", "Syria", "Meatballs", "The Barefoot Bandit", "Elephants", "Angel Cabrera", "Geoffrey Chaucer", "Sir Thomas Beecham", "Parabola", "GORKY", "Lincolnshire", "10", "Roots: The Saga of an American Family", "Dr Sam Johnson", "North Yorkshire", "Leon Baptiste", "Window", """SOUND AND LIGHT""", "Anne Frank", "DRAKE", "Sam Allardyce", "The Mayor of Casterbridge", "DAVID LLOYD-GEORGE", "The Stig", "Blue", "Edgar Allen Poe", "Circle", "Theo Walcott", "PRAGUE", "New York mafia", "Nunc Dimittis", "Tritons", "William Hartnell", "March 1st", "26 miles, 385 yards", "The Falkland Islands", "Sweet milk", "Geoffrey Chaucer", "Kissing", "France", "Guilder", "Annie Lennox", "Sugar", "Copper", "They were discovered by James Angel", "Copper", "James Watt"]
2024-07-12 16:51:06 [info     ] Loaded corpus with 15 entries in 0.01 seconds
2024-07-12 16:51:06 [info     ] Updated indexing with 15 documents in 0.01 seconds
2024-07-12 16:51:06 [info     ] _update_indexing executed      execution_time=0.005677223205566406 function=_update_indexing
2024-07-12 16:51:06 [info     ] auto_link_memories executed    execution_time=0.01195216178894043 function=auto_link_memories
2024-07-12 16:51:06 [info     ] Memory saved                   extra={'query': 'Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]\nQ: What is a nectarine a cross between, A: None. The nectarine is a smooth skinned variety of the peach\n', 'memory_id': 15}
2024-07-12 16:51:06 [info     ] save_memory executed           execution_time=0.35056543350219727 function=save_memory
2024-07-12 16:51:06 [info     ] Query processed successfully
INFO:     172.18.0.1:52072 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:51:06 [info     ] Received query: (On TV) Logan is in the living_room.

2024-07-12 16:51:06 [info     ] get_linked_memories executed   execution_time=0.003477334976196289 function=get_linked_memories
2024-07-12 16:51:06 [info     ] get_linked_memories executed   execution_time=0.0037751197814941406 function=get_linked_memories
2024-07-12 16:51:06 [info     ] retrieve_relevant_memories executed execution_time=0.22381210327148438 function=retrieve_relevant_memories
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x38e3db83905e62f83632f625104c196f",
        "span_id": "0x2c06613d7e65f47b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5d16034325b234ca",
    "start_time": "2024-07-12T16:50:18.398226Z",
    "end_time": "2024-07-12T16:51:06.237433Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x38e3db83905e62f83632f625104c196f",
        "span_id": "0x762f5eebed9070da",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5d16034325b234ca",
    "start_time": "2024-07-12T16:51:06.237640Z",
    "end_time": "2024-07-12T16:51:06.237859Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x38e3db83905e62f83632f625104c196f",
        "span_id": "0x13e72564e88ed87b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5d16034325b234ca",
    "start_time": "2024-07-12T16:51:06.237910Z",
    "end_time": "2024-07-12T16:51:06.237945Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x38e3db83905e62f83632f625104c196f",
        "span_id": "0x5d16034325b234ca",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:50:18.397837Z",
    "end_time": "2024-07-12T16:51:06.237952Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 52072,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x0cbf7443e233d89ab945761926f88ba8",
        "span_id": "0xfd9d0b0814fe6c5d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x411141b317d9d214",
    "start_time": "2024-07-12T16:51:06.247205Z",
    "end_time": "2024-07-12T16:51:06.247226Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:51:17 [info     ] process_query executed         execution_time=11.260644435882568 function=process_query
2024-07-12 16:51:17 [debug    ] Generated response             response=• Logan is watching TV in the living room.
2024-07-12 16:51:17 [debug    ] Saved memory for query: (On TV) Logan is in the living_room.
 with result: • Logan is watching TV in the living room.
2024-07-12 16:51:17 [info     ] Loaded corpus with 16 entries in 0.00 seconds
2024-07-12 16:51:17 [info     ] Updated indexing with 16 documents in 0.01 seconds
2024-07-12 16:51:17 [info     ] _update_indexing executed      execution_time=0.005490541458129883 function=_update_indexing
2024-07-12 16:51:17 [info     ] auto_link_memories executed    execution_time=0.011231422424316406 function=auto_link_memories
2024-07-12 16:51:17 [info     ] Memory saved                   extra={'query': '(On TV) Logan is in the living_room.\n', 'memory_id': 16}
2024-07-12 16:51:17 [info     ] save_memory executed           execution_time=0.24129343032836914 function=save_memory
2024-07-12 16:51:17 [info     ] Query processed successfully
INFO:     172.18.0.1:52764 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:51:17 [info     ] Received query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: Araucaria araucana is the national tree of Chile. Although it is not a true pine it became known as the 'Chile Pine'. What is its current common English name?, A: MONKEY PUZZLE
Q: Complete the name of the Church of England diocese: 'Bath and .....'?, A: WELLS
Q: What Latin phrase, which translates as for the public good, is taken to mean professional work undertaken voluntarily and without payment?, A: pro bono
Q: Which English football team play their home games at Vicarage Road?, A: Watford
Q: What was the name of Roland Rat's gerbil friend?, A: Kevin
Q: Just north of Bolton, on which English motorway will you find Rivington Services?, A: M61
Q: Who has won the most Oscars, A: Walt Disney
Q: What former Egyptian president was born on Christmas day in 1918?, A: Anwar Sadat
Q: Which band, formed in Salford in 1976, contained Ian Curtis, Bernard Sumner and Peter Hook?, A: 'JOY DIVISION'
Q: Which organisation awards the Dickin Medal?, A: PDSA
Q: Which battle of 1897 brought Anglo-Egyptian control of Sudan?, A: Omdurman
Q: Who played Claude Greengrass in 'Heartbeat'?, A: BILL MAYNARD
Q: The Halle Orchestra was founded in which British city?, A: Manchester
Q: In sport who competes in the Eredivisie?, A: Dutch Football Teams
Q: To which family of trees do junipers belong?, A: Cypress
Q: Who lives in the Hundred Acre Wood?, A: Winnie-the-Pooh
Q: Which Nobel Prize did Patrick White win in 1973?, A: LITERATURE
Q: In which city would you find O'Hare International Airport?, A: Chicago
Q: The Inca people lived in which continent before conquest by the Spanish?, A: South America
Q: Vermillion is a shade of which colour?, A: Red
Q: What sort of creature is a Pacific Sea Wasp?, A: A Jellyfish
Q: From 1791 to 1803, Toussaint L’Ouverture led a revolt against France on which island?, A: Haiti
Q: What Cantonese mixed bite-size food means literally 'touch the heart'?, A: Dim sum
Q: Maria Fitzherbert was ‘married’ to which British monarch?, A: George IV
Q: For a point each, name the 9 countries surrounding Germany., A: Denmark, Poland, Czech Republic, Austria, Switzerland, France, Luxembourg, Belgium, and the Netherlands
Q: Batman Returns, Practical Magic, Dead Calm, The Peacemaker?, A: Batman Returns - the others starred Nicole Kidman.
Q: "The following is the first line from which book?""1801 - I have just returned from a visit to my landlord"".", A: 'WUTHERING HEIGHTS'
Q: Which baseball team won the World Series in 2011?, A: St Louis Cardinals
Q: Who was Cassius Clay's manager, A: Dundee
Q: Bole is a shade of which colour?, A: Brown
Q: "What was the ""Scopes Monkey Trial"" about?", A: Teaching the theory of evolution in schools
Q: What was the name of the concert held at the Cleveland Arena, Ohio, on 21st March 1952, said to be the world’s first major rock & roll concert?, A: The Moondog Coronation Ball
Q: In business theory which one of these is not normally a 'profit lever'?, A: Time
Q: In the novel ‘Watership Down’, Yona is what type of creature?, A: Hedgehog
Q: Can you name the singer of the title track for '1997 - Tomorrow Never Dies'?, A: Sheryl Crow
Q: Which Christian festival is celebrated on 6 January, the 12th day after Christmas, to commemorate the coming of the Magi?, A: Epiphany
Q: In what Beijing square were democracy activists massacred in 1989?, A: Tiananmen
Q: Which brewery makes Hatters Mild and Unicorn Bitter?, A: Robinson
Q: Covering an area in excess of 30,000 square miles, in which country can you find the 'Dasht  e Kavir Desert' the largest to lie wholly in it's own country?, A: IRAN
Q: Maria Fitzherbert was ‘married’ to which British monarch?, A: George IV
Q: What was Tony Blair’s constituency?, A: SEDGEFIELD
Q: Which singer and actress who lived from 1963 - 2012, shares her surname with major city in Texas?, A: Whitney Houston
Q: Who won the Best Actress Oscar for the 1988 film, The Accused?, A: Jodie Foster
Q: The four town halls in Kirklees that contain concert venues are in Huddersfield, Cleckheaton, Dewsbury and which other town?, A: Batley
Q: Jack Nicholson played Randle McMurphy in which film?, A: One Flew Over the Cuckoo’s Nest
Q: Which single word connects 'The Spanish Armada, and the TV series 'The Worker'?, A: DRAKE
Q: American Jim Yong Kim was appointed head of which international organization in April 2012?, A: World Bank
Q: Who has been President of France twice, but never been elected to the position?, A: Alain Poher
Q: What is the name of the seven-branched candelabra used in the Jewish religion?, A: Menorah
Q: Which private railway line runs between Kidderminster and Bridgnorth?, A: Severn Valley
Q: Nicknamed the 'Diamond State', which US state shares borders with Pennslyvania, New Jersey and Maryland?, A: DELAWARE
Q: Who scored Wrexham's fourth and final spot-kick against Grimsby Town in the penalty shoot0out at Wembley last month ?, A: (Johnny) HUNT
Q: The world cup opens on Friday. Which country is hosting this year?, A: South Africa
Q: The name Benedict, as used by popes, etc., is from the Latin meaning?, A: The Blessed
Q: Hidrosis is the medical term for which bodily function?, A: Sweating
Q: What naturalist’s quest to save Rwandan gorillas from poaching was made into the 1988 Academy Award-nominated film “Gorillas in the Mist”?, A: Dian Fossey
Q: Which city was visited by Prince William in March 2011 after suffering two earthquakes in the preceeding six months?, A: CHRISTCHURCH
Q: what is chased down Cooper's Hill in Gloucestershire in a traditional race every Spring Bank Holiday?, A: A CHEESE
Q: Who supposedly chopped down a cherry tree, but couldn't lie about it?, A: George Washington
Q: 'Whole Lotta Love', 'Yellow Pearl', 'The Wizard', and 'Get Out Of That' have all been theme tunes to which television programme?, A: 'TOP OF THE POPS'
Q: What is the name of the long narrow island off the east coast of Russia?, A: Sakhalin
Q: Which hit programme is filmed in a tent at Harptree Court in Somerset?, A: Great British Bake Off
Q: "Which singer recently made a surprise return to the top of the UK charts after 29 years, with his album ""50""?", A: (Rick) Astley
Q: The flag of the Great Socialist People's Libyan Arab Jamahiriya was what single colour?, A: Green
Q: Published on Feb 21, 1848, which two authors were responsible for the Communist Manifesto?, A: Karl Marx and Friedrich Engels
Q: Which Germna military leader had the nickname 'The Blue Max'? He commited suicide on October 15th 1846 by swallowing potassium cyanide after being found guilty of war crimes at the Nuremberg War Crimes Trial., A: Hermaan GOERING
Q: Which singer had a big 60s No 1 with Roses Are Red?, A: Bobby Vinton
Q: Which Liverpool street was named as 'The Great Street 2013' in the National Urbanism Awards?, A: Hope Street
Q: What noted fictional pirate, who sailed aboard the Jolly Roger, had an unreasonable fear of crocodiles and had a first mate named Smee?, A: Captain Hook
Q: KHI is the international code for which Asian airport?, A: Karachi
Q: One Summer: America 1927 is a 2013 history book by which author?, A: BILL BRYSON
Q: Named for a Greek muse and currently given by the Nielsen Company, what are the awards given to reward creative excellence in advertising and design?, A: Clio Awards
Q: Which city is generally accepted as the birthplace of Grunge, a subgenre of alternative rock that emerged during the mid-1980s?, A: Seattle
Q: Who played Dr Richard Kimble in the 1993 film The Fugitive?, A: Harrison Ford
Q: In food and drink terms, what are porcini (poor-chee-nee) and straw?, A: Types of mushrooms

INFO:     127.0.0.1:51182 - "GET /health HTTP/1.1" 200 OK
2024-07-12 16:51:18 [info     ] get_linked_memories executed   execution_time=0.003187417984008789 function=get_linked_memories
2024-07-12 16:51:18 [info     ] get_linked_memories executed   execution_time=0.0031969547271728516 function=get_linked_memories
2024-07-12 16:51:18 [info     ] get_linked_memories executed   execution_time=0.002770662307739258 function=get_linked_memories
2024-07-12 16:51:18 [info     ] get_linked_memories executed   execution_time=0.0030012130737304688 function=get_linked_memories
2024-07-12 16:51:18 [info     ] retrieve_relevant_memories executed execution_time=0.3074061870574951 function=retrieve_relevant_memories
2024-07-12 16:51:18 [error    ] Error executing query          error=Error code: 429 - {'error': {'message': 'Rate limit reached for model `llama3-70b-8192` in organization `org_01j2kdfmb1f3r9h6frjpjqadwf` on tokens per minute (TPM): Limit 6000, Used 5724, Requested 6997. Please try again in 1m7.203s. Visit https://console.groq.com/docs/rate-limits for more information.', 'type': 'tokens', 'code': 'rate_limit_exceeded'}} query=Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: Araucaria araucana is the national tree of Chile. Although it is not a true pine it became known as the 'Chile Pine'. What is its current common English name?, A: MONKEY PUZZLE
Q: Complete the name of the Church of England diocese: 'Bath and .....'?, A: WELLS
Q: What Latin phrase, which translates as for the public good, is taken to mean professional work undertaken voluntarily and without payment?, A: pro bono
Q: Which English football team play their home games at Vicarage Road?, A: Watford
Q: What was the name of Roland Rat's gerbil friend?, A: Kevin
Q: Just north of Bolton, on which English motorway will you find Rivington Services?, A: M61
Q: Who has won the most Oscars, A: Walt Disney
Q: What former Egyptian president was born on Christmas day in 1918?, A: Anwar Sadat
Q: Which band, formed in Salford in 1976, contained Ian Curtis, Bernard Sumner and Peter Hook?, A: 'JOY DIVISION'
Q: Which organisation awards the Dickin Medal?, A: PDSA
Q: Which battle of 1897 brought Anglo-Egyptian control of Sudan?, A: Omdurman
Q: Who played Claude Greengrass in 'Heartbeat'?, A: BILL MAYNARD
Q: The Halle Orchestra was founded in which British city?, A: Manchester
Q: In sport who competes in the Eredivisie?, A: Dutch Football Teams
Q: To which family of trees do junipers belong?, A: Cypress
Q: Who lives in the Hundred Acre Wood?, A: Winnie-the-Pooh
Q: Which Nobel Prize did Patrick White win in 1973?, A: LITERATURE
Q: In which city would you find O'Hare International Airport?, A: Chicago
Q: The Inca people lived in which continent before conquest by the Spanish?, A: South America
Q: Vermillion is a shade of which colour?, A: Red
Q: What sort of creature is a Pacific Sea Wasp?, A: A Jellyfish
Q: From 1791 to 1803, Toussaint L’Ouverture led a revolt against France on which island?, A: Haiti
Q: What Cantonese mixed bite-size food means literally 'touch the heart'?, A: Dim sum
Q: Maria Fitzherbert was ‘married’ to which British monarch?, A: George IV
Q: For a point each, name the 9 countries surrounding Germany., A: Denmark, Poland, Czech Republic, Austria, Switzerland, France, Luxembourg, Belgium, and the Netherlands
Q: Batman Returns, Practical Magic, Dead Calm, The Peacemaker?, A: Batman Returns - the others starred Nicole Kidman.
Q: "The following is the first line from which book?""1801 - I have just returned from a visit to my landlord"".", A: 'WUTHERING HEIGHTS'
Q: Which baseball team won the World Series in 2011?, A: St Louis Cardinals
Q: Who was Cassius Clay's manager, A: Dundee
Q: Bole is a shade of which colour?, A: Brown
Q: "What was the ""Scopes Monkey Trial"" about?", A: Teaching the theory of evolution in schools
Q: What was the name of the concert held at the Cleveland Arena, Ohio, on 21st March 1952, said to be the world’s first major rock & roll concert?, A: The Moondog Coronation Ball
Q: In business theory which one of these is not normally a 'profit lever'?, A: Time
Q: In the novel ‘Watership Down’, Yona is what type of creature?, A: Hedgehog
Q: Can you name the singer of the title track for '1997 - Tomorrow Never Dies'?, A: Sheryl Crow
Q: Which Christian festival is celebrated on 6 January, the 12th day after Christmas, to commemorate the coming of the Magi?, A: Epiphany
Q: In what Beijing square were democracy activists massacred in 1989?, A: Tiananmen
Q: Which brewery makes Hatters Mild and Unicorn Bitter?, A: Robinson
Q: Covering an area in excess of 30,000 square miles, in which country can you find the 'Dasht  e Kavir Desert' the largest to lie wholly in it's own country?, A: IRAN
Q: Maria Fitzherbert was ‘married’ to which British monarch?, A: George IV
Q: What was Tony Blair’s constituency?, A: SEDGEFIELD
Q: Which singer and actress who lived from 1963 - 2012, shares her surname with major city in Texas?, A: Whitney Houston
Q: Who won the Best Actress Oscar for the 1988 film, The Accused?, A: Jodie Foster
Q: The four town halls in Kirklees that contain concert venues are in Huddersfield, Cleckheaton, Dewsbury and which other town?, A: Batley
Q: Jack Nicholson played Randle McMurphy in which film?, A: One Flew Over the Cuckoo’s Nest
Q: Which single word connects 'The Spanish Armada, and the TV series 'The Worker'?, A: DRAKE
Q: American Jim Yong Kim was appointed head of which international organization in April 2012?, A: World Bank
Q: Who has been President of France twice, but never been elected to the position?, A: Alain Poher
Q: What is the name of the seven-branched candelabra used in the Jewish religion?, A: Menorah
Q: Which private railway line runs between Kidderminster and Bridgnorth?, A: Severn Valley
Q: Nicknamed the 'Diamond State', which US state shares borders with Pennslyvania, New Jersey and Maryland?, A: DELAWARE
Q: Who scored Wrexham's fourth and final spot-kick against Grimsby Town in the penalty shoot0out at Wembley last month ?, A: (Johnny) HUNT
Q: The world cup opens on Friday. Which country is hosting this year?, A: South Africa
Q: The name Benedict, as used by popes, etc., is from the Latin meaning?, A: The Blessed
Q: Hidrosis is the medical term for which bodily function?, A: Sweating
Q: What naturalist’s quest to save Rwandan gorillas from poaching was made into the 1988 Academy Award-nominated film “Gorillas in the Mist”?, A: Dian Fossey
Q: Which city was visited by Prince William in March 2011 after suffering two earthquakes in the preceeding six months?, A: CHRISTCHURCH
Q: what is chased down Cooper's Hill in Gloucestershire in a traditional race every Spring Bank Holiday?, A: A CHEESE
Q: Who supposedly chopped down a cherry tree, but couldn't lie about it?, A: George Washington
Q: 'Whole Lotta Love', 'Yellow Pearl', 'The Wizard', and 'Get Out Of That' have all been theme tunes to which television programme?, A: 'TOP OF THE POPS'
Q: What is the name of the long narrow island off the east coast of Russia?, A: Sakhalin
Q: Which hit programme is filmed in a tent at Harptree Court in Somerset?, A: Great British Bake Off
Q: "Which singer recently made a surprise return to the top of the UK charts after 29 years, with his album ""50""?", A: (Rick) Astley
Q: The flag of the Great Socialist People's Libyan Arab Jamahiriya was what single colour?, A: Green
Q: Published on Feb 21, 1848, which two authors were responsible for the Communist Manifesto?, A: Karl Marx and Friedrich Engels
Q: Which Germna military leader had the nickname 'The Blue Max'? He commited suicide on October 15th 1846 by swallowing potassium cyanide after being found guilty of war crimes at the Nuremberg War Crimes Trial., A: Hermaan GOERING
Q: Which singer had a big 60s No 1 with Roses Are Red?, A: Bobby Vinton
Q: Which Liverpool street was named as 'The Great Street 2013' in the National Urbanism Awards?, A: Hope Street
Q: What noted fictional pirate, who sailed aboard the Jolly Roger, had an unreasonable fear of crocodiles and had a first mate named Smee?, A: Captain Hook
Q: KHI is the international code for which Asian airport?, A: Karachi
Q: One Summer: America 1927 is a 2013 history book by which author?, A: BILL BRYSON
Q: Named for a Greek muse and currently given by the Nielsen Company, what are the awards given to reward creative excellence in advertising and design?, A: Clio Awards
Q: Which city is generally accepted as the birthplace of Grunge, a subgenre of alternative rock that emerged during the mid-1980s?, A: Seattle
Q: Who played Dr Richard Kimble in the 1993 film The Fugitive?, A: Harrison Ford
Q: In food and drink terms, what are porcini (poor-chee-nee) and straw?, A: Types of mushrooms

[31m╭─[0m[31m──────────────────────────────[0m[31m [0m[1;31mTraceback [0m[1;2;31m(most recent call last)[0m[31m [0m[31m───────────────────────────────[0m[31m─╮[0m
[31m│[0m [2;33m/app/src/utils/[0m[1;33mcontroller.py[0m:[94m26[0m in [92mexecute_query[0m                                                 [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m23 [0m[2m│   [0m                                                                                        [31m│[0m
[31m│[0m   [2m24 [0m[2m│   [0m[94masync[0m [94mdef[0m [92mexecute_query[0m([96mself[0m, query: [96mstr[0m) -> [96mstr[0m:                                       [31m│[0m
[31m│[0m   [2m25 [0m[2m│   │   [0m[94mtry[0m:                                                                                [31m│[0m
[31m│[0m [31m❱ [0m26 [2m│   │   │   [0mresponse = [94mawait[0m [96mself[0m.agent.process_query(query)                                [31m│[0m
[31m│[0m   [2m27 [0m[2m│   │   │   [0m[96mself[0m.logger.debug([33m"[0m[33mGenerated response[0m[33m"[0m, response=response)                      [31m│[0m
[31m│[0m   [2m28 [0m[2m│   │   │   [0m[94mawait[0m [96mself[0m.memory_manager.save_memory(query, response)                          [31m│[0m
[31m│[0m   [2m29 [0m[2m│   │   │   [0m[94mreturn[0m response                                                                 [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m     e = [1;35mRateLimitError[0m[1m([0m[33m"Error code: 429 - [0m[1;33m{[0m[33m'error': [0m[1;33m{[0m[33m'message': 'Rate limit reached for [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33mmodel `llama3-70b-8192` in organization `org_01j2kdfmb1f3r9h6frjpjqadwf` on tokens [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33mper minute [0m[1;33m([0m[33mTPM[0m[1;33m)[0m[33m: Limit 6000, Used 5724, Requested 6997. Please try again in [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33m1m7.203s. Visit https://console.groq.com/docs/rate-limits for more information.', [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33m'type': 'tokens', 'code': 'rate_limit_exceeded'[0m[1;33m}[0m[1;33m}[0m[33m"[0m[1m)[0m                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m query = [33m'Here are some trivia questions and answers for you to process. Please extract [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33mal'[0m+[94m7633[0m                                                                             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m  self = [1m<[0m[1;95msrc.utils.controller.Controller[0m[39m object at [0m[94m0x7fe58a4003e0[0m[1m>[0m                           [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/src/utils/[0m[1;33menhanced_logging.py[0m:[94m12[0m in [92mwrapper[0m                                                 [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m 9 [0m[2m│   [0m[1;95m@wraps[0m(func)                                                                            [31m│[0m
[31m│[0m   [2m10 [0m[2m│   [0m[94masync[0m [94mdef[0m [92mwrapper[0m(*args, **kwargs):                                                     [31m│[0m
[31m│[0m   [2m11 [0m[2m│   │   [0mstart_time = time.time()                                                            [31m│[0m
[31m│[0m [31m❱ [0m12 [2m│   │   [0mresult = [94mawait[0m func(*args, **kwargs)                                                [31m│[0m
[31m│[0m   [2m13 [0m[2m│   │   [0mexecution_time = time.time() - start_time                                           [31m│[0m
[31m│[0m   [2m14 [0m[2m│   │   [0mperformance_logger.info([33mf[0m[33m"[0m[33m{[0mfunc.[91m__name__[0m[33m}[0m[33m executed[0m[33m"[0m,                                [31m│[0m
[31m│[0m   [2m15 [0m[2m│   │   │   │   │   │   │   │   [0mexecution_time=execution_time,                              [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m       args = [1m([0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[1m<[0m[1;95msrc.agents.agent.Agent[0m[39m object at [0m[94m0x7fe58a400230[0m[1m>[0m,                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'Here are some trivia questions and answers for you to process. Please [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33mextract al'[0m+[94m7633[0m                                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [1m)[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       func = [1m<[0m[1;95mfunction[0m[39m Agent.process_query at [0m[94m0x7fe5e768d080[0m[1m>[0m                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m     kwargs = [1m{[0m[1m}[0m                                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m start_time = [94m1720803077.761131[0m                                                               [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/src/agents/[0m[1;33magent.py[0m:[94m52[0m in [92mprocess_query[0m                                                     [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m49 [0m[2m│   │   [0m]                                                                                   [31m│[0m
[31m│[0m   [2m50 [0m[2m│   │   [0m                                                                                    [31m│[0m
[31m│[0m   [2m51 [0m[2m│   │   [0m[2m# Use asyncio.to_thread to run the synchronous API call in a separate thread[0m        [31m│[0m
[31m│[0m [31m❱ [0m52 [2m│   │   [0mresponse = [94mawait[0m asyncio.to_thread(                                                 [31m│[0m
[31m│[0m   [2m53 [0m[2m│   │   │   [0m[96mself[0m.groq_client.chat.completions.create,                                       [31m│[0m
[31m│[0m   [2m54 [0m[2m│   │   │   [0mmessages=messages,                                                              [31m│[0m
[31m│[0m   [2m55 [0m[2m│   │   │   [0mmodel=config.MODEL_NAME,                                                        [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m          messages = [1m[[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m{[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'role'[0m: [33m'system'[0m,                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33madministrator at the core of a sophistic'[0m+[94m598[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m}[0m,                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m{[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'role'[0m: [33m'user'[0m,                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33mfor you to process. Please ext'[0m+[94m27115[0m                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m}[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [1m][0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             query = [33m'Here are some trivia questions and answers for you to process. Please [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33mextract al'[0m+[94m7633[0m                                                         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m relevant_memories = [33m'[0m[1;33m<[0m[1;33m13[0m[1;33m>[0m[33m, <Here are some trivia questions and answers for you to process. [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33mPlease ext'[0m+[94m18819[0m                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              self = [1m<[0m[1;95msrc.agents.agent.Agent[0m[39m object at [0m[94m0x7fe58a400230[0m[1m>[0m                        [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/usr/local/lib/python3.12/asyncio/[0m[1;33mthreads.py[0m:[94m25[0m in [92mto_thread[0m                                     [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m22 [0m[2m│   [0mloop = events.get_running_loop()                                                        [31m│[0m
[31m│[0m   [2m23 [0m[2m│   [0mctx = contextvars.copy_context()                                                        [31m│[0m
[31m│[0m   [2m24 [0m[2m│   [0mfunc_call = functools.partial(ctx.run, func, *args, **kwargs)                           [31m│[0m
[31m│[0m [31m❱ [0m25 [2m│   [0m[94mreturn[0m [94mawait[0m loop.run_in_executor([94mNone[0m, func_call)                                      [31m│[0m
[31m│[0m   [2m26 [0m                                                                                            [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m      args = [1m([0m[1m)[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       ctx = [1m<[0m[1;95m_contextvars.Context[0m[39m object at [0m[94m0x7fe589a1bc00[0m[1m>[0m                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m      func = [1m<[0m[1;95mbound[0m[39m method Completions.create of <groq.resources.chat.completions.Completions[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [39mobject at [0m[94m0x7fe5e77993d0[0m[39m>[0m[1m>[0m                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m func_call = [1;35mfunctools.partial[0m[1m([0m[1m<[0m[1;95mbuilt-in[0m[39m method run of _contextvars.Context object at [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [94m0x7fe589a1bc00[0m[39m>, <bound method Completions.create of [0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [39m<groq.resources.chat.completions.Completions object at [0m[94m0x7fe5e77993d0[0m[39m>>, [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmessages[0m[39m=[0m[1;39m[[0m[1;39m{[0m[33m'role'[0m[39m: [0m[33m'system'[0m[39m, [0m[33m'content'[0m[39m: [0m[33m'You are a highly efficient, no-nonsense[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33madministrator at the core of a sophisticated memory system. Your primary role is[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mto analyze retrieved memories and provide concise, relevant summaries or [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mindicate their lack of relevance. You value brevity and directness above all [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33melse.\n\n    The retrieved memories you will be processing are structured as [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfollows:\n\n    1. Each memory entry contains: <memory_id>, <previous_query>, [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<previous_response>, <similarity_score>\n    2. Some entries may have an [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33madditional field indicating if they are linked to another memory.\n\n    Analyze[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthese memories in relation to the current query efficiently, paying special [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mattention to linked memories.'[0m[1;39m}[0m[39m, [0m[1;39m{[0m[33m'role'[0m[39m: [0m[33m'user'[0m[39m, [0m[33m'content'[0m[39m: [0m[33m'QUERY: Here are [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msome trivia questions and answers for you to process. Please extract all of the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33manswers in json form as a single message: E.g [0m[1;33m[[0m[33m"answer 1", "answer 2", ...[0m[1;33m][0m[33m\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAraucaria araucana is the national tree of Chile. Although it is not a true pine[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mit became known as the \'Chile Pine\'. What is its current common English name?,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mA: MONKEY PUZZLE\nQ: Complete the name of the Church of England diocese: \'Bath [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand .....\'?, A: WELLS\nQ: What Latin phrase, which translates as for the public[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mgood, is taken to mean professional work undertaken voluntarily and without [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpayment?, A: pro bono\nQ: Which English football team play their home games at [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mVicarage Road?, A: Watford\nQ: What was the name of Roland Rat\'s gerbil [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfriend?, A: Kevin\nQ: Just north of Bolton, on which English motorway will you [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfind Rivington Services?, A: M61\nQ: Who has won the most Oscars, A: Walt [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDisney\nQ: What former Egyptian president was born on Christmas day in 1918?, A:[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAnwar Sadat\nQ: Which band, formed in Salford in 1976, contained Ian Curtis, [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBernard Sumner and Peter Hook?, A: \'JOY DIVISION\'\nQ: Which organisation [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mawards the Dickin Medal?, A: PDSA\nQ: Which battle of 1897 brought [0m              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAnglo-Egyptian control of Sudan?, A: Omdurman\nQ: Who played Claude Greengrass [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33min \'Heartbeat\'?, A: BILL MAYNARD\nQ: The Halle Orchestra was founded in which [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBritish city?, A: Manchester\nQ: In sport who competes in the Eredivisie?, A: [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDutch Football Teams\nQ: To which family of trees do junipers belong?, A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCypress\nQ: Who lives in the Hundred Acre Wood?, A: Winnie-the-Pooh\nQ: Which [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNobel Prize did Patrick White win in 1973?, A: LITERATURE\nQ: In which city [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwould you find O\'Hare International Airport?, A: Chicago\nQ: The Inca people [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlived in which continent before conquest by the Spanish?, A: South America\nQ: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mVermillion is a shade of which colour?, A: Red\nQ: What sort of creature is a [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPacific Sea Wasp?, A: A Jellyfish\nQ: From 1791 to 1803, Toussaint L’Ouverture [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mled a revolt against France on which island?, A: Haiti\nQ: What Cantonese mixed [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbite-size food means literally \'touch the heart\'?, A: Dim sum\nQ: Maria [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFitzherbert was ‘married’ to which British monarch?, A: George IV\nQ: For a [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpoint each, name the 9 countries surrounding Germany., A: Denmark, Poland, Czech[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mRepublic, Austria, Switzerland, France, Luxembourg, Belgium, and the [0m            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNetherlands\nQ: Batman Returns, Practical Magic, Dead Calm, The Peacemaker?, A: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBatman Returns - the others starred Nicole Kidman.\nQ: "The following is the [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfirst line from which book?""1801 - I have just returned from a visit to my [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlandlord"".", A: \'WUTHERING HEIGHTS\'\nQ: Which baseball team won the World [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mSeries in 2011?, A: St Louis Cardinals\nQ: Who was Cassius Clay\'s manager, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDundee\nQ: Bole is a shade of which colour?, A: Brown\nQ: "What was the ""Scopes[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMonkey Trial"" about?", A: Teaching the theory of evolution in schools\nQ: What [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwas the name of the concert held at the Cleveland Arena, Ohio, on 21st March [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1952, said to be the world’s first major rock & roll concert?, A: The Moondog [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCoronation Ball\nQ: In business theory which one of these is not normally a [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'profit lever\'?, A: Time\nQ: In the novel ‘Watership Down’, Yona is what type [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof creature?, A: Hedgehog\nQ: Can you name the singer of the title track for [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'1997 - Tomorrow Never Dies\'?, A: Sheryl Crow\nQ: Which Christian festival is [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcelebrated on 6 January, the 12th day after Christmas, to commemorate the coming[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof the Magi?, A: Epiphany\nQ: In what Beijing square were democracy activists [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmassacred in 1989?, A: Tiananmen\nQ: Which brewery makes Hatters Mild and [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mUnicorn Bitter?, A: Robinson\nQ: Covering an area in excess of 30,000 square [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmiles, in which country can you find the \'Dasht  e Kavir Desert\' the largest [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mto lie wholly in it\'s own country?, A: IRAN\nQ: Maria Fitzherbert was ‘married’[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mto which British monarch?, A: George IV\nQ: What was Tony Blair’s constituency?,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mA: SEDGEFIELD\nQ: Which singer and actress who lived from 1963 - 2012, shares [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mher surname with major city in Texas?, A: Whitney Houston\nQ: Who won the Best [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mActress Oscar for the 1988 film, The Accused?, A: Jodie Foster\nQ: The four town[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mhalls in Kirklees that contain concert venues are in Huddersfield, Cleckheaton, [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDewsbury and which other town?, A: Batley\nQ: Jack Nicholson played Randle [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMcMurphy in which film?, A: One Flew Over the Cuckoo’s Nest\nQ: Which single [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mword connects \'The Spanish Armada, and the TV series \'The Worker\'?, A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDRAKE\nQ: American Jim Yong Kim was appointed head of which international [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33morganization in April 2012?, A: World Bank\nQ: Who has been President of France [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtwice, but never been elected to the position?, A: Alain Poher\nQ: What is the [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mname of the seven-branched candelabra used in the Jewish religion?, A: [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMenorah\nQ: Which private railway line runs between Kidderminster and [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBridgnorth?, A: Severn Valley\nQ: Nicknamed the \'Diamond State\', which US [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mstate shares borders with Pennslyvania, New Jersey and Maryland?, A: [0m            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDELAWARE\nQ: Who scored Wrexham\'s fourth and final spot-kick against Grimsby [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTown in the penalty shoot0out at Wembley last month ?, A: [0m[1;33m([0m[33mJohnny[0m[1;33m)[0m[33m HUNT\nQ: The [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mworld cup opens on Friday. Which country is hosting this year?, A: South [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAfrica\nQ: The name Benedict, as used by popes, etc., is from the Latin [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmeaning?, A: The Blessed\nQ: Hidrosis is the medical term for which bodily [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfunction?, A: Sweating\nQ: What naturalist’s quest to save Rwandan gorillas from[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpoaching was made into the 1988 Academy Award-nominated film “Gorillas in the [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMist”?, A: Dian Fossey\nQ: Which city was visited by Prince William in March [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m2011 after suffering two earthquakes in the preceeding six months?, A: [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCHRISTCHURCH\nQ: what is chased down Cooper\'s Hill in Gloucestershire in a [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtraditional race every Spring Bank Holiday?, A: A CHEESE\nQ: Who supposedly [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mchopped down a cherry tree, but couldn\'t lie about it?, A: George [0m              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWashington\nQ: \'Whole Lotta Love\', \'Yellow Pearl\', \'The Wizard\', and \'Get[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mOut Of That\' have all been theme tunes to which television programme?, A: \'TOP[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mOF THE POPS\'\nQ: What is the name of the long narrow island off the east coast [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof Russia?, A: Sakhalin\nQ: Which hit programme is filmed in a tent at Harptree [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCourt in Somerset?, A: Great British Bake Off\nQ: "Which singer recently made a [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msurprise return to the top of the UK charts after 29 years, with his album [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m""50""?", A: [0m[1;33m([0m[33mRick[0m[1;33m)[0m[33m Astley\nQ: The flag of the Great Socialist People\'s Libyan [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mArab Jamahiriya was what single colour?, A: Green\nQ: Published on Feb 21, 1848,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich two authors were responsible for the Communist Manifesto?, A: Karl Marx [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand Friedrich Engels\nQ: Which Germna military leader had the nickname \'The [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBlue Max\'? He commited suicide on October 15th 1846 by swallowing potassium [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcyanide after being found guilty of war crimes at the Nuremberg War Crimes [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTrial., A: Hermaan GOERING\nQ: Which singer had a big 60s No 1 with Roses Are [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mRed?, A: Bobby Vinton\nQ: Which Liverpool street was named as \'The Great Street[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m2013\' in the National Urbanism Awards?, A: Hope Street\nQ: What noted fictional[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpirate, who sailed aboard the Jolly Roger, had an unreasonable fear of [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcrocodiles and had a first mate named Smee?, A: Captain Hook\nQ: KHI is the [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33minternational code for which Asian airport?, A: Karachi\nQ: One Summer: America [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1927 is a 2013 history book by which author?, A: BILL BRYSON\nQ: Named for a [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mGreek muse and currently given by the Nielsen Company, what are the awards given[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mto reward creative excellence in advertising and design?, A: Clio Awards\nQ: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhich city is generally accepted as the birthplace of Grunge, a subgenre of [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33malternative rock that emerged during the mid-1980s?, A: Seattle\nQ: Who played [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDr Richard Kimble in the 1993 film The Fugitive?, A: Harrison Ford\nQ: In food [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand drink terms, what are porcini [0m[1;33m([0m[33mpoor-chee-nee[0m[1;33m)[0m[33m and straw?, A: Types of [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmushrooms\n\n\n    RETRIEVED MEMORIES:\n    <13>, <Here are some trivia [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mquestions and answers for you to process. Please extract all of the answers in [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mjson form as a single message: E.g [0m[1;33m[[0m[33m"answer 1", "answer 2", ...[0m[1;33m][0m[33m\nQ: Which [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBritish city has cathedrals dedicated to St Nicholas and St Mary?, A: Newcastle [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mupon Tyne\nQ: Which Dickens novel\'s opening chapter is \'In Chancery\' with a [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mdescription of a foggy and muddy London street?, A: BLEAK HOUSE\nQ: Which 18th [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcentury inventor and founding father of the United States coined the phrase [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'time is money\'?, A: Benjamin Franklyn\nQ: "What was special about ""The Daily[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCourant"" that appeared in the early 18th century?", A: First daily [0m             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mnewspaper\nQ: Before being surpassed in 1311 AD by the Lincoln Cathedral in [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEngland, what construction with its 481 feet held the title for the tallest [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mman-made structure for hundreds of years?, A: Great Pyramid of Giza built around[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m2500 BC\nQ: Which TV series was about a pop group called \'Little Ladies\' [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfeaturing Charlotte Cornwell, Julie Covington and Rula Lenska?, A: Rock [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFollies\nQ: Actor Norman Painting died in November 2009, which part in a log [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mrunning radio series did he make his own?, A: PHIL ARCHER\nQ: What is the [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mgeneric title of a series of French comic strips that were written originally by[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mRen Goscinny and illustrated by Albert Uderzo?, A: The Adventures of Asterix\nQ:[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhich former Liverpool player has the middle name Everton?, A: MARK WALTERS\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mIn December 2006, the second longest motorway tunnel in Europe was opened [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mconnecting the port to the airport in which capital city?, A: Dublin\nQ: Which [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m17th/18th century Irish politician leader was nicknamed \'the Liberator”?, A: [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDaniel O’Connell\nQ: Referring to the cause of a person\'s downfall, who is the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mGreek goddess of punishment?, A: Nemesis\nQ: The adjective leporine relates to [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich animal?, A: Hare\nQ: Subtitled ‘What You Will’, which play begins: ‘If [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmusic be the food of love, play on’?, A: TWELFTH NIGHT\nQ: "The ""Giant [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMarbles"" rock formation in the USA is in which national park?", A: Joshua Tree [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNational Park\nQ: In which city did the gangland St Valentine’s Day Massacre [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtake place?, A: CHICAGO\nQ: Which country invaded the Falkland Islands in April [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1982?, A: Argentina\nQ: Which double glazing firm used a feather in their [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33madvertising commercials, A: Everest\nQ: What is the name for the point in the [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlunar orbit when the moon is nearest to the earth?, A: Perigee\nQ: "Which [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mclassic poem\'s first line is ""A thing of beauty is a joy forever""?", A: [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mENDYMION [0m[1;33m([0m[33mKeats[0m[1;33m)[0m[33m\nQ: In culinary terms, what is the Scoville Scale used to [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmeasure?, A: HOTNESS OF CHILI PEPPERS\nQ: Which supermarket chain started [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mselling straight croissants in its stores in February?, A: TESCO\nQ: "Judi Dench[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwon an Oscar for Best Supporting Actressfor playing which character in the 1998 [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfilm ""Shakespeare in Love""?", A: Queen Elizabeth I\nQ: Artiodactyla Suidae is [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe scientific name for which farm animal?, A: Pig\nQ: Who played Beverley Hills[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mhairdresser George Roundy in the 1975 film ‘Shampoo’?, A: Warren Beatty\nQ: [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLasting from 1299 to 1922, the Ottoman empire roughly corresponds to what modern[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mday country?, A: Turkey\nQ: """Torchwood"" was a spin-off of what popular TV [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mshow?", A: Doctor Who\nQ: In which town is the \'TV sitcom \'Two Pints of Lager [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand a Packet of Crisps\' set?, A: Runcorn\nQ: www.lbvcr.com is the website for [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich event organised by the RAC, this year on Sunday November 7th?, A: LONDON [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTO BRIGHTON VETERAN CAR [0m[1;33m([0m[33mRUN[0m[1;33m)[0m[33m\nQ: ‘The history of all the hitherto existing [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msociety is the history of class struggles’ is part of the first chapter of which[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpublication?, A: The Communist Manifesto\nQ: What lake can be found on the [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mborder of Vermont and New York?, A: Lake Champlain\nQ: The UK\'s longest [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNational Trail, what path stretches 630 miles between Minehead and Poole [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mHarbour?, A: SOUTH WEST COAST\nQ: In the culinary world, what word is used for [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe edible offal of a fowl, typically including the heart, gizzard and liver?, [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mA: Giblets\nQ: Who was the first Briton to hold a world javelin record, A: [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFatima Whitbread\nQ: The traditional \'Daily rum ration\' was ended in what [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33myear?, A: 1970\nQ: Charlotte, TJ\'s, Adelphi, Barfly; Joiners, and Forum [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mare/were names in what UK market sector?, A: Music\nQ: His debut album [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'Disc-Overy\' was released in 2010. By what stage-name id Patrick Chukwuemeka [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mOkogwu better known?, A: \'TINIE TEMPAH\'\nQ: Traitor\'s Gate is part of which [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbuilding?, A: Tower of London\nQ: "What name is given to the maxim ""employees [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtend to rise to their level of incompetence.""?", A: Peter Principle\nQ: Which [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAsian city\'s international airport is built at the mouth of the Tama-gawa?, A: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTOKYO\nQ: Which singer made the news in September 2009 when Muslim groups [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mprotested that her first concert in Malaysia should be cancelled for a second [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtime?, A: Beyonc\nQ: Louis Reard created which two-piece item of clothing in [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1946?, A: Bikini\nQ: What name is given to a substance that accelerates a [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mchemical reaction without itself being affected?, A: CATALYST\nQ: In the 1904 [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mOlympics, how many of the 23 track and field titles were won by Americans?, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m21\nQ: The largest known volcano in our solar system is on which planet?, A: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMars\nQ: Who is the author of the Twilight series of best-selling books?, A: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mStephenie Meyer\nQ: What radio station do you find at 1090 on your local AM [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mdial?, A: KPTK\nQ: What is the title of the 2009 biopic film directed by Sam [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTaylor-Wood about the early life of John Lennon, A: Nowhere Boy\nQ: Which [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mvolcano in Tanzania is the highest mountain in Africa?, A: Kilimanjaro\nQ: What [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwas the name of the ferry in the Zeebrugge disaster of 1987, A: Herald of Free [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEnterprise\nQ: Which French racehorse, which won the Derby and Prix de I’Arc de [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTriomphe in 1965, was the highest rated horse by Timeform until Frankel’s [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mperformances in 2012?, A: Sea Bird\nQ: What did Peter Carl Fabergé famously [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmake?, A: Fabergé Eggs\nQ: What board game for two players is known as wiq in [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mChinese and baduk in Korean?, A: Go\nQ: What does the Unix Time system do?, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCounts the seconds that have elapsed since Coordinated Universal Time was [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mestablished on 1/1/1970\nQ: In the 2005 Julian Barnes novel ‘Arthur and George’,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwho is Arthur?, A: Arthur Conan Doyle\nQ: What nation invented the kilt?, A: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mIreland\nQ: According to Greek myth, who was the wife of Odysseus, celebrated [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfor her faithfulness to him during his twenty year absence?, A: PENELOPE\nQ: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAnnual global production [0m[1;33m([0m[33mearly 2000s[0m[1;33m)[0m[33m of rough diamonds is about?, A: 26 [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtonnes/metric tons\nQ: Mycology is the study of what?, A: Fungi\nQ: What is the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mappropriate name of the craft which crashed into Mercury in April?, A: [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMessenger\nQ: In which English town is the Georgian colonnade called the [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPantiles?, A: [0m[1;33m([0m[33mROYAL[0m[1;33m)[0m[33m TUNBRIDGE WELLS\nQ: The youngest gold medalist for team GB[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mat the 2012 Olympics, Jade Jones, won in which sport?, A: TAEKWANDO\nQ: Which [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mword can go before Work, Guard and Dog to make three other words?, A: Fire\nQ: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhich British film, starring Ralph Fiennes, won nine Oscars in 1997?, A: The [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEnglish Patient\nQ: Where is Petra, an archaeological site with rock-cut [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33marchitecture and designated a World Heritage Site 1985, that was built by the [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNabataeans as their capital city around 100 BC?, A: Jordan\nQ: What name given [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mto an autumn full moon in the northern hemisphere alludes to the brightness of [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe night sky that aids the shooting of migrating birds?, A: Hunter\'s moon\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAdi Dassler founded the Adidas company, which company was founded by his brother[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mRudolf in 1948?, A: Puma\nQ: In December 1965, who became President of the [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPhilippines?, A: Ferdinand Marcos\nQ: A holiday on 25 March in Greece celebrates[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe final recognition of Greece as an independent nation following the Greek War[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof Independence against the Ottoman Empire. What year did this happen?, A: [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1832\nQ: The painting \'Faithful Unto Death\' can be found in Liverpool\'s [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWalker Art Gallery. Who painted it?, A: SIR EDWARD JOHN POYNTER\nQ: What was the[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mname of the alliance of trading cities and their guilds, each with their own law[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msystem and with armies for mututal aid, that established and maintained a trade [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmonopoly along the coast of Northern Europe, from the Baltic to the North Sea [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand inland, from the 13th to 17th centuries?, A: Hanseatic League\nQ: What [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcolour is pistachio flavoured ice cream?, A: Green\nQ: Released in 1994, [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'Objects In The Rear View Mirror May Appear Closer Than They Are\' is the hit [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msingle with the longest un-bracketed title in UK chart history. Who sang it?, A:[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMEATLOAF\nQ: "Who wrote the nonsense poem ""Jabberwocky""?", A: Lewis [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCarroll\nQ: Whose first husband was a policeman called Jim Dougherty?, A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMARILYN MONROE\nQ: In 2012 which former Liberian president was found guilty of [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcrimes against humanity?, A: Charles Taylor\nQ: Which capital city is served by [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mArlanda Airport, A: Stockholm\nQ: Who won the \'Oscar\' for Best Actress in the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1950\'s film\'Born Yesterday\'?, A: JUDY HOLLIDAY\nQ: Which Cambridge College [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwas attended by Anthony Blunt, Kim Philby and Guy Burgess?, A: TRINITY\nQ: "Who [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpublished ""A Book of Nonsense"" [0m[1;33m([0m[33ma volume of limericks that went through three [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33meditions[0m[1;33m)[0m[33m in 1846, ""The History of the Seven Families of the Lake [0m              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPipple-Popple"" in 1865, and ""The Owl and the Pussycat"" in 1867?", A: Edward [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLear\nQ: Which National Trust property in Wiltshire was once owned by William [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mHenry Fox-Talbot the pioneer of photography?, A: Lacock Abbey\nQ: Which 1960 [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfilm is based on the 1954 film ‘Seven Samurai’?, A: The Magnificent Seven\nQ: [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWho was US Attorney General from January 1961 until September 1964 and a Senator[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfor New York from January 1965 until June 1968?, A: Robert Kennedy\nQ: Who was [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mon the English throne in 1400?, A: Henry 4th\nQ: What is next in the sequence: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLima, Quito, Bogota...?, A: Caracas\nQ: Who on television is the \'Idiot [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAbroad\'?, A: KARL PILKINGTON\nQ: "In England, in the first half of the [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtwentieth century, a ""vesta"" was a common term for a type of what?", A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMatch\nQ: Damascus is the capital of which country?, A: Syria\nQ: Across Eastern[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEurope, the Middle East and parts of Asia, what are known as keftes or kufta, [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand similar words derived from Persian, kuftan, meaning beat or grind?, A: [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMeatballs\nQ: "Colton Harris Moore, the 6\'5"" American teenager who made the [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mnews because he stole a boat and a plane, acquired what nickname because of his [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlack of footwear?", A: The Barefoot Bandit\nQ: What animals does a mahout work [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwith?, A: Elephants\nQ: If it was Phil Mickelson in 2006, Zach Johnson in 2007, [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand Trevor Immelman in 2008, who was it in 2009?, A: Angel Cabrera\nQ: Which [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmediaeval author wrote The Canterbury Tales, A: Geoffrey Chaucer\nQ: Who founded[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe \'London Philharmonic Orchestra\' in 1931?, A: Sir Thomas Beecham\nQ: What [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mis an open plane curve formed by the intersection of a cone with a plane [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mparallel to its side, resembling the path of a projectile under the action of [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mgravity?, A: Parabola\nQ: What was the Russian City of Nizhny Novgorod called [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbetween 1932 and 1990?, A: GORKY\nQ: In which English county was former British [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPrime minister Margaret Thatcher born?, A: Lincolnshire\nQ: What number shirt [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mdid England rugby union player Jonny Wilkinson wear in the 2011 World Cup?, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m10\nQ: Author Alex Haley, born on Aug 11, 1921, wrote what epic story of his [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfamily origins, later to be made a rather popular mini-series?, A: Roots: The [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mSaga of an American Family\nQ: Which famous Englishman had a cat called Hodge [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich he fed on oysters?, A: Dr Sam Johnson\nQ: In which county will you find [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFountains abbey and Studley Water Gardens?, A: North Yorkshire\nQ: In the [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCommonwealth games in Delhi, which British athlete won the mens 200m gold [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmedal?, A: Leon Baptiste\nQ: To ‘Defenestrate’ is to throw something or someone [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mout of what?, A: A window\nQ: "What is the literal meaning of the French [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mexpression ""Son et Lumiere""?", A: """SOUND AND LIGHT"""\nQ: The journal of [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich Amsterdam schoolgirl was first published in 1947 under the title The Diary[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof a Young Girl?, A: Anne Frank\nQ: Which single word connects \'The Spanish [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mArmada, and the TV series \'The Worker\'?, A: DRAKE\nQ: Which premiership [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmanager upset Louis Van Gaal in February 2015, when he described his team as [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlong ball united?, A: Sam Allardyce\nQ: In which novel does Michael Henchard [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msell his wife and child for 5 guineas?, A: The Mayor of Casterbridge\nQ: Which [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mleader of a British coalition Government became the first Earl of Dwfor?, A: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDAVID LLOYD-GEORGE\nQ: Ben Collins was \'outed\' in January 2009 as which [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmysterious TV character?, A: The Stig\nQ: The big-selling country and western [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mhit song, notably by Elvis Presley in 1957, is \'[0m[1;33m([0m[33mWhat?[0m[1;33m)[0m[33m Christmas\'?, A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBlue\nQ: The gravesite of what American writer, buried in Baltimore, is [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmysteriously visited every January 19th, to receive a toast of cognac and 3 [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mroses?, A: Edgar Allen Poe\nQ: On a clothing label a cross through what shape [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmeans \'Do Not Dry Clean\'?, A: CIRCLE\nQ: Who, in May 2006 when aged 17 years [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand 75 days, became the youngest footballer to play for England?, A: Theo [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWalcott\nQ: Which capital city is known as Praha by its inhabitants?, A: [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPRAGUE\nQ: The assassination of Salvatore Maragano led to a major change in what[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33morganisation?, A: New York mafia\nQ: The Song of Simeon canticle is also known [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mby which Latin name?, A: Nunc Dimittis\nQ: What name was collectively given to [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe sons of Poseidon, who dwelt with him at the bottom of the sea?, A: [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTritons\nQ: Who played the sergeant in Carry On Sergeant?, A: William [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mHartnell\nQ: On what date does St. David’s Day fall?, A: March 1st\nQ: What is [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe imperial distance of a marathon race?, A: 26 miles, 385 yards\nQ: Which [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33misland group in the South Atlantic was once known as the Sebald Islands?, A: The[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFalkland Islands\nQ: The Italian cheese called dolcelatte translates into [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEnglish as what?, A: Sweet milk\nQ: Which mediaeval author wrote The Canterbury [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTales, A: Geoffrey Chaucer\nQ: What is the pleasant activity of osculation?, A: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mKissing\nQ: Canal+ TV is based in which country?, A: France\nQ: What was the [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcurrency of the Netherlands from the 17th century until 2002, A: Guilder\nQ: Who[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mduetted with Aretha Franklin on Sisters Are Doing It For Themselves, A: Annie [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLennox\nQ: What is stevia a substitute for?, A: Sugar\nQ: Which element is mixed[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwith gold to make red gold?, A: Copper\nQ: Why are Angel Falls, Venezuela, so [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcalled?, A: They were discovered by James Angel\nQ: Which builder of steam [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mengines formed a successful partnership with Matthew Boulton?, A: James Watt\n>,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<NO RELEVANT INFORMATION>, <0.92>, <> <14>, <Here are some trivia questions and [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33manswers for you to process. Please extract all of the answers in json form as a [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msingle message: E.g [0m[1;33m[[0m[33m"answer 1", "answer 2", ...[0m[1;33m][0m[33m\nQ: "The ""Hall of Mirrors"" [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mis in which building?", A: Palace of Versailles\nQ: In police parlance what are [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m‘dabs’?, A: Fingerprints\nQ: What is the traditional/modern language of Iran and[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mold Persia, named from the latter?, A: Farsi\nQ: Which play set in Lancashire in[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe 1850\'s tells of boot maker Will Mossop\'s romance with his boss\'s [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mdaughter?, A: HOBSON\'S CHOICE\nQ: Which group had a number one hit in 2009 with[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'I Gotta Feeling\'?, A: BLACK EYED PEAS\nQ: What is the biggest Italian [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mautomaker?, A: Fiat\nQ: Which Bishop of the Church of England signs his first [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mname followed by Roffen?, A: BISHOP OF ROCHESTER\nQ: The Belgian beer ‘Kriek’ is[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mflavoured with which fruit?, A: Cherry\nQ: In February 1987, which UK airline [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwas privatised and listed on the London Stock Exchange?, A: British Airways\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mThe eyes of Dr. T. J. Eckleberg are a dominant symbol in which 1925 novel and [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlater films?, A: THE GREAT GATSBY\nQ: What famous road began in Chicago, [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mIllinois, ending at Santa Monica, California?, A: Route 66\nQ: The Red Sea is [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mconnected to the Indian Ocean by which gulf ?, A: Gulf of Aden.\nQ: Who was the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mKing of Libya who was overthrown by a military coupled by Colonel Qaddafi in [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1969?, A: IDRIS I\n>, <NO RELEVANT INFORMATION>, <0.91>, <> <15>, <Here are some[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtrivia questions and answers for you to process. Please extract all of the [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33manswers in json form as a single message: E.g [0m[1;33m[[0m[33m"answer 1", "answer 2", ...[0m[1;33m][0m[33m\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhat is a nectarine a cross between, A: None. The nectarine is a smooth skinned [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mvariety of the peach\n>, <Here is the answer:\n\n[0m[1;33m[[0m[33m"Palace of Versailles", [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Fingerprints", "Farsi", "HOBSON\'S CHOICE", "BLACK EYED PEAS", "Fiat", "BISHOP [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mOF ROCHESTER", "Cherry", "British Airways", "THE GREAT GATSBY", "Route 66", [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Gulf of Aden", "IDRIS I", "Newcastle upon Tyne", "BLEAK HOUSE", "Benjamin [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFranklyn", "First daily newspaper", "Great Pyramid of Giza built around 2500 [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBC", "Rock Follies", "PHIL ARCHER", "The Adventures of Asterix", "MARK WALTERS",[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Dublin", "Daniel O’Connell", "Nemesis", "Hare", "TWELFTH NIGHT", "Joshua Tree [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNational Park", "CHICAGO", "Argentina", "Everest", "Perigee", "ENDYMION [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [1;33m([0m[33mKeats[0m[1;33m)[0m[33m", "HOTNESS OF CHILI PEPPERS", "TESCO", "Queen Elizabeth I", "Pig", [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Warren Beatty", "Turkey", "Doctor Who", "Runcorn", "London to Brighton Veteran [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCar Run", "The Communist Manifesto", "Lake Champlain", "SOUTH WEST COAST", [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Giblets", "Fatima Whitbread", "1970", "Music", "\'TINIE TEMPAH", "Tower of [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLondon", "Peter Principle", "TOKYO", "Beyonc", "Bikini", "CATALYST", "21", [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Mars", "Stephenie Meyer", "KPTK", "Nowhere Boy", "Kilimanjaro", "Herald of Free[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEnterprise", "Sea Bird", "Fabergé Eggs", "Go", "Counts the seconds that have [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33melapsed since Coordinated Universal Time was established on 1/1/1970", "Arthur [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mConan Doyle", "Ireland", "PENELOPE", "26 tonnes/metric tons", "Fungi", [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Messenger", "[0m[1;33m([0m[33mROYAL[0m[1;33m)[0m[33m TUNBRIDGE WELLS", "TAEKWANDO", "Fire", "The English [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPatient", "Jordan", "Hunter\'s moon", "Puma", "Ferdinand Marcos", "1832", "SIR [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEDWARD JOHN POYNTER", "Hanseatic League", "Green", "MEATLOAF", "Lewis Carroll", [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"MARILYN MONROE", "Charles Taylor", "Stockholm", "JUDY HOLLIDAY", "TRINITY", [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Edward Lear", "Lacock Abbey", "The Magnificent Seven", "Robert Kennedy", "Henry[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m4th", "Caracas", "KARL PILKINGTON", "Match", "Syria", "Meatballs", "The Barefoot[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBandit", "Elephants", "Angel Cabrera", "Geoffrey Chaucer", "Sir Thomas Beecham",[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Parabola", "GORKY", "Lincolnshire", "10", "Roots: The Saga of an American [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFamily", "Dr Sam Johnson", "North Yorkshire", "Leon Baptiste", "Window", [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"""SOUND AND LIGHT""", "Anne Frank", "DRAKE", "Sam Allardyce", "The Mayor of [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCasterbridge", "DAVID LLOYD-GEORGE", "The Stig", "Blue", "Edgar Allen Poe", [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Circle", "Theo Walcott", "PRAGUE", "New York mafia", "Nunc Dimittis", [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Tritons", "William Hartnell", "March 1st", "26 miles, 385 yards", "The Falkland[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mIslands", "Sweet milk", "Geoffrey Chaucer", "Kissing", "France", "Guilder", [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Annie Lennox", "Sugar", "Copper", "They were discovered by James Angel", [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Copper", "James Watt"[0m[1;33m][0m[33m>, <0.85>, <> <2>, <I am going to subject you to a [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLong-Term Memory benchmark. In the following, I will be giving you different [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mkinds of information and I expect you to answer extremely briefly, only [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mproviding the responses that you are required to provide. Otherwise, provide [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mjust short confirmations. Understood?>, <CONFIRMED>, <0.76>, <[0m[1;33m>[0m[33m\n\n    Your [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtask:\n\n    1. Assess if the retrieved memories contain ANY relevant [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33minformation to the query.\n    2. If NO relevant information exists, respond [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mONLY with: "NO RELEVANT INFORMATION"\n    3. If relevant information exists, [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mprovide a brief, bullet-point summary of ONLY the most pertinent points. Be [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mextremely concise.\n    4. Pay special attention to linked memories and their [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mrelevance to the current query.\n\n    Your response should either be "NO [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mRELEVANT INFORMATION" or a brief, focused summary. Exclude any explanation or [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33melaboration.'[0m[1m}[0m[1m][0m, [33mmodel[0m=[33m'llama3-70b-8192'[0m[1m)[0m                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m    kwargs = [1m{[0m                                                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   [0m[33m'messages'[0m: [1m[[0m                                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   [0m[1m{[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense administrator at[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe core of a sophistic'[0m+[94m598[0m                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   [0m[1m}[0m,                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   [0m[1m{[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers for [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33myou to process. Please ext'[0m+[94m27115[0m                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   [0m[1m}[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   [0m[1m][0m,                                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [1m}[0m                                                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m      loop = [1m<[0m[1;95muvloop.Loop[0m[39m [0m[33mrunning[0m[39m=[0m[94mTrue[0m[39m [0m[33mclosed[0m[39m=[0m[94mFalse[0m[39m [0m[33mdebug[0m[39m=[0m[94mFalse[0m[1m>[0m                              [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/usr/local/lib/python3.12/concurrent/futures/[0m[1;33mthread.py[0m:[94m58[0m in [92mrun[0m                                 [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m 55 [0m[2m│   │   │   [0m[94mreturn[0m                                                                         [31m│[0m
[31m│[0m   [2m 56 [0m[2m│   │   [0m                                                                                   [31m│[0m
[31m│[0m   [2m 57 [0m[2m│   │   [0m[94mtry[0m:                                                                               [31m│[0m
[31m│[0m [31m❱ [0m 58 [2m│   │   │   [0mresult = [96mself[0m.fn(*[96mself[0m.args, **[96mself[0m.kwargs)                                    [31m│[0m
[31m│[0m   [2m 59 [0m[2m│   │   [0m[94mexcept[0m [96mBaseException[0m [94mas[0m exc:                                                       [31m│[0m
[31m│[0m   [2m 60 [0m[2m│   │   │   [0m[96mself[0m.future.set_exception(exc)                                                 [31m│[0m
[31m│[0m   [2m 61 [0m[2m│   │   │   [0m[2m# Break a reference cycle with the exception 'exc'[0m                             [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m─[0m[33m locals [0m[33m──[0m[33m─╮[0m                                                                                  [31m│[0m
[31m│[0m [33m│[0m self = [94mNone[0m [33m│[0m                                                                                  [31m│[0m
[31m│[0m [33m╰─────────────╯[0m                                                                                  [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/venv/lib/python3.12/site-packages/groq/resources/chat/[0m[1;33mcompletions.py[0m:[94m289[0m in [92mcreate[0m          [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m286 [0m[2m│   │     [0m                                                                                 [31m│[0m
[31m│[0m   [2m287 [0m[2;33m│   │     [0m[33mtimeout: Override the client-level default timeout for this request, in second[0m   [31m│[0m
[31m│[0m   [2m288 [0m[2;33m│   │   [0m[33m"""[0m                                                                                [31m│[0m
[31m│[0m [31m❱ [0m289 [2m│   │   [0m[94mreturn[0m [96mself[0m._post(                                                                 [31m│[0m
[31m│[0m   [2m290 [0m[2m│   │   │   [0m[33m"[0m[33m/openai/v1/chat/completions[0m[33m"[0m,                                                 [31m│[0m
[31m│[0m   [2m291 [0m[2m│   │   │   [0mbody=maybe_transform(                                                          [31m│[0m
[31m│[0m   [2m292 [0m[2m│   │   │   │   [0m{                                                                          [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m          extra_body = [94mNone[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       extra_headers = [94mNone[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         extra_query = [94mNone[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m   frequency_penalty = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       function_call = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           functions = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m          logit_bias = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            logprobs = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m          max_tokens = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            messages = [1m[[0m                                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   [0m[1m{[0m                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   │   [0m[33m'role'[0m: [33m'system'[0m,                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [33madministrator at the core of a sophistic'[0m+[94m598[0m                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   [0m[1m}[0m,                                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   [0m[1m{[0m                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   │   [0m[33m'role'[0m: [33m'user'[0m,                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [33mfor you to process. Please ext'[0m+[94m27115[0m                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   [0m[1m}[0m                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [1m][0m                                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m               model = [33m'llama3-70b-8192'[0m                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                   n = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m parallel_tool_calls = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m    presence_penalty = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m     response_format = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                seed = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                self = [1m<[0m[1;95mgroq.resources.chat.completions.Completions[0m[39m object at [0m[94m0x7fe5e77993d0[0m[1m>[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                stop = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              stream = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         temperature = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             timeout = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         tool_choice = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m               tools = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m        top_logprobs = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m               top_p = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                user = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/venv/lib/python3.12/site-packages/groq/[0m[1;33m_base_client.py[0m:[94m1225[0m in [92mpost[0m                         [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m1222 [0m[2m│   │   [0mopts = FinalRequestOptions.construct(                                             [31m│[0m
[31m│[0m   [2m1223 [0m[2m│   │   │   [0mmethod=[33m"[0m[33mpost[0m[33m"[0m, url=path, json_data=body, files=to_httpx_files(files), **opti  [31m│[0m
[31m│[0m   [2m1224 [0m[2m│   │   [0m)                                                                                 [31m│[0m
[31m│[0m [31m❱ [0m1225 [2m│   │   [0m[94mreturn[0m cast(ResponseT, [96mself[0m.request(cast_to, opts, stream=stream, stream_cls=str  [31m│[0m
[31m│[0m   [2m1226 [0m[2m│   [0m                                                                                      [31m│[0m
[31m│[0m   [2m1227 [0m[2m│   [0m[94mdef[0m [92mpatch[0m(                                                                            [31m│[0m
[31m│[0m   [2m1228 [0m[2m│   │   [0m[96mself[0m,                                                                             [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m       body = [1m{[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'messages'[0m: [1m[[0m                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m{[0m                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense administrator [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33mat the core of a sophistic'[0m+[94m598[0m                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m}[0m,                                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m{[0m                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers for [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33myou to process. Please ext'[0m+[94m27115[0m                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m}[0m                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[1m][0m,                                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m,                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'frequency_penalty'[0m: NOT_GIVEN,                                             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'function_call'[0m: NOT_GIVEN,                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'functions'[0m: NOT_GIVEN,                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'logit_bias'[0m: NOT_GIVEN,                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'logprobs'[0m: NOT_GIVEN,                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'max_tokens'[0m: NOT_GIVEN,                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'n'[0m: NOT_GIVEN,                                                             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'parallel_tool_calls'[0m: NOT_GIVEN,                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m...[0m +[94m11[0m                                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [1m}[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m    cast_to = [1m<[0m[1;95mclass[0m[39m [0m[33m'groq.types.chat.chat_completion.ChatCompletion'[0m[1m>[0m                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m      files = [94mNone[0m                                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m    options = [1m{[0m[1m}[0m                                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       opts = [1;35mFinalRequestOptions[0m[1m([0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mmethod[0m=[33m'post'[0m,                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33murl[0m=[33m'/openai/v1/chat/completions'[0m,                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mparams[0m=[1m{[0m[1m}[0m,                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mheaders[0m=[35mNOT_GIVEN[0m,                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mmax_retries[0m=[35mNOT_GIVEN[0m,                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mtimeout[0m=[35mNOT_GIVEN[0m,                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mfiles[0m=[94mNone[0m,                                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33midempotency_key[0m=[94mNone[0m,                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mpost_parser[0m=[35mNOT_GIVEN[0m,                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mjson_data[0m=[1m{[0m                                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[33m'messages'[0m: [1m[[0m                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[1m{[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33madministrator at the core of a sophistic'[0m+[94m598[0m                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[1m}[0m,                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[1m{[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33mfor you to process. Please ext'[0m+[94m27115[0m                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[1m}[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m][0m,                                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[1m}[0m,                                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mextra_json[0m=[94mNone[0m                                                             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [1m)[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       path = [33m'/openai/v1/chat/completions'[0m                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       self = [1m<[0m[1;95mgroq.Groq[0m[39m object at [0m[94m0x7fe589c1a300[0m[1m>[0m                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m     stream = [94mFalse[0m                                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m stream_cls = groq.Stream[1m[[0mgroq.types.chat.chat_completion_chunk.ChatCompletionChunk[1m][0m          [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/venv/lib/python3.12/site-packages/groq/[0m[1;33m_base_client.py[0m:[94m920[0m in [92mrequest[0m                       [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m 917 [0m[2m│   │   [0mstream: [96mbool[0m = [94mFalse[0m,                                                             [31m│[0m
[31m│[0m   [2m 918 [0m[2m│   │   [0mstream_cls: [96mtype[0m[_StreamT] | [94mNone[0m = [94mNone[0m,                                         [31m│[0m
[31m│[0m   [2m 919 [0m[2m│   [0m) -> ResponseT | _StreamT:                                                            [31m│[0m
[31m│[0m [31m❱ [0m 920 [2m│   │   [0m[94mreturn[0m [96mself[0m._request(                                                             [31m│[0m
[31m│[0m   [2m 921 [0m[2m│   │   │   [0mcast_to=cast_to,                                                              [31m│[0m
[31m│[0m   [2m 922 [0m[2m│   │   │   [0moptions=options,                                                              [31m│[0m
[31m│[0m   [2m 923 [0m[2m│   │   │   [0mstream=stream,                                                                [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m           cast_to = [1m<[0m[1;95mclass[0m[39m [0m[33m'groq.types.chat.chat_completion.ChatCompletion'[0m[1m>[0m                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           options = [1;35mFinalRequestOptions[0m[1m([0m                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mmethod[0m=[33m'post'[0m,                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33murl[0m=[33m'/openai/v1/chat/completions'[0m,                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mparams[0m=[1m{[0m[1m}[0m,                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mheaders[0m=[35mNOT_GIVEN[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mmax_retries[0m=[35mNOT_GIVEN[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mtimeout[0m=[35mNOT_GIVEN[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mfiles[0m=[94mNone[0m,                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33midempotency_key[0m=[94mNone[0m,                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mpost_parser[0m=[35mNOT_GIVEN[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mjson_data[0m=[1m{[0m                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'messages'[0m: [1m[[0m                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m{[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33madministrator at the core of a sophistic'[0m+[94m598[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m}[0m,                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m{[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33manswers for you to process. Please ext'[0m+[94m27115[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m}[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[1m][0m,                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m}[0m,                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mextra_json[0m=[94mNone[0m                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [1m)[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m remaining_retries = [94mNone[0m                                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              self = [1m<[0m[1;95mgroq.Groq[0m[39m object at [0m[94m0x7fe589c1a300[0m[1m>[0m                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            stream = [94mFalse[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m        stream_cls = groq.Stream[1m[[0mgroq.types.chat.chat_completion_chunk.ChatCompletionChunk[1m][0m   [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/venv/lib/python3.12/site-packages/groq/[0m[1;33m_base_client.py[0m:[94m1018[0m in [92m_request[0m                     [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m1015 [0m[2m│   │   │   │   [0merr.response.read()                                                       [31m│[0m
[31m│[0m   [2m1016 [0m[2m│   │   │   [0m                                                                              [31m│[0m
[31m│[0m   [2m1017 [0m[2m│   │   │   [0mlog.debug([33m"[0m[33mRe-raising status error[0m[33m"[0m)                                          [31m│[0m
[31m│[0m [31m❱ [0m1018 [2m│   │   │   [0m[94mraise[0m [96mself[0m._make_status_error_from_response(err.response) [94mfrom[0m [94mNone[0m           [31m│[0m
[31m│[0m   [2m1019 [0m[2m│   │   [0m                                                                                  [31m│[0m
[31m│[0m   [2m1020 [0m[2m│   │   [0m[94mreturn[0m [96mself[0m._process_response(                                                    [31m│[0m
[31m│[0m   [2m1021 [0m[2m│   │   │   [0mcast_to=cast_to,                                                              [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m           cast_to = [1m<[0m[1;95mclass[0m[39m [0m[33m'groq.types.chat.chat_completion.ChatCompletion'[0m[1m>[0m                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            kwargs = [1m{[0m[1m}[0m                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           options = [1;35mFinalRequestOptions[0m[1m([0m                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mmethod[0m=[33m'post'[0m,                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33murl[0m=[33m'/openai/v1/chat/completions'[0m,                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mparams[0m=[1m{[0m[1m}[0m,                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mheaders[0m=[35mNOT_GIVEN[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mmax_retries[0m=[35mNOT_GIVEN[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mtimeout[0m=[35mNOT_GIVEN[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mfiles[0m=[94mNone[0m,                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33midempotency_key[0m=[94mNone[0m,                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mpost_parser[0m=[35mNOT_GIVEN[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mjson_data[0m=[1m{[0m                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'messages'[0m: [1m[[0m                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m{[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33madministrator at the core of a sophistic'[0m+[94m598[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m}[0m,                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m{[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33manswers for you to process. Please ext'[0m+[94m27115[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m}[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[1m][0m,                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m}[0m,                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mextra_json[0m=[94mNone[0m                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [1m)[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m remaining_retries = [94mNone[0m                                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           request = [1m<[0m[1;35mRequest[0m[1;39m([0m[33m'POST'[0m[39m, [0m[33m'https://api.groq.com/openai/v1/chat/completions'[0m[1;39m)[0m[1m>[0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m          response = [1m<[0m[1;95mResponse[0m[39m [0m[1;39m[[0m[94m429[0m[39m Too Many Requests[0m[1;39m][0m[1m>[0m                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           retries = [94m2[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              self = [1m<[0m[1;95mgroq.Groq[0m[39m object at [0m[94m0x7fe589c1a300[0m[1m>[0m                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            stream = [94mFalse[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m        stream_cls = groq.Stream[1m[[0mgroq.types.chat.chat_completion_chunk.ChatCompletionChunk[1m][0m   [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m╰──────────────────────────────────────────────────────────────────────────────────────────────────╯[0m
[1;91mRateLimitError: [0mError code: [1;36m429[0m - [1m{[0m[32m'error'[0m: [1m{[0m[32m'message'[0m: [32m'Rate limit reached for model [0m
[32m`llama3-70b-8192` in organization `org_01j2kdfmb1f3r9h6frjpjqadwf` on tokens per minute [0m[32m([0m[32mTPM[0m[32m)[0m[32m: Limit[0m
[32m6000, Used 5724, Requested 6997. Please try again in 1m7.203s. Visit [0m
[32mhttps://console.groq.com/docs/rate-limits for more information.'[0m, [32m'type'[0m: [32m'tokens'[0m, [32m'code'[0m: 
[32m'rate_limit_exceeded'[0m[1m}[0m[1m}[0m

2024-07-12 16:51:19 [info     ] Query processed successfully
INFO:     172.18.0.1:44032 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:51:19 [info     ] Received query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: In which year was the 50p coin introduced into circulation in Britain?, A: 1969
Q: If you were eating a 'Knickerbocker Glory' - What would you be eating?, A: An ice-cream sundae
Q: What is the ocean current that flows from Florida to Europe?, A: Gulf Stream
Q: A bet of Manqué at roulette covers which group of numbers?, A: 1–18
Q: By which treaty of 1713 did Spain cede Gibraltar and Minorca to Great Britain?, A: Utrecht

2024-07-12 16:51:19 [info     ] get_linked_memories executed   execution_time=0.004007101058959961 function=get_linked_memories
2024-07-12 16:51:19 [info     ] get_linked_memories executed   execution_time=0.003524303436279297 function=get_linked_memories
2024-07-12 16:51:19 [info     ] get_linked_memories executed   execution_time=0.003597259521484375 function=get_linked_memories
2024-07-12 16:51:19 [info     ] get_linked_memories executed   execution_time=0.003957033157348633 function=get_linked_memories
2024-07-12 16:51:19 [info     ] get_linked_memories executed   execution_time=0.00438237190246582 function=get_linked_memories
2024-07-12 16:51:19 [info     ] retrieve_relevant_memories executed execution_time=0.2466888427734375 function=retrieve_relevant_memories
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x0cbf7443e233d89ab945761926f88ba8",
        "span_id": "0xcf1c43d96d8a2509",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x411141b317d9d214",
    "start_time": "2024-07-12T16:51:06.247448Z",
    "end_time": "2024-07-12T16:51:17.749809Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x0cbf7443e233d89ab945761926f88ba8",
        "span_id": "0x7fc07e9af6ea43e2",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x411141b317d9d214",
    "start_time": "2024-07-12T16:51:17.749981Z",
    "end_time": "2024-07-12T16:51:17.750190Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x0cbf7443e233d89ab945761926f88ba8",
        "span_id": "0xc98fccc18b53111e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x411141b317d9d214",
    "start_time": "2024-07-12T16:51:17.750229Z",
    "end_time": "2024-07-12T16:51:17.750258Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x0cbf7443e233d89ab945761926f88ba8",
        "span_id": "0x411141b317d9d214",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:51:06.247006Z",
    "end_time": "2024-07-12T16:51:17.750265Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 52764,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x588a30099e61f51a03cb1b392efd8c68",
        "span_id": "0x2c0f6e6cba28d507",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xcd47122bd9b222b4",
    "start_time": "2024-07-12T16:51:17.760718Z",
    "end_time": "2024-07-12T16:51:17.760735Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xe5507e0e21fda355c18146a5da519fbd",
        "span_id": "0xbb9d2c4420081d34",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x59d1f56ecfbda960",
    "start_time": "2024-07-12T16:51:17.912037Z",
    "end_time": "2024-07-12T16:51:17.912223Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xe5507e0e21fda355c18146a5da519fbd",
        "span_id": "0x4b2f0aafbeeb126c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x59d1f56ecfbda960",
    "start_time": "2024-07-12T16:51:17.912273Z",
    "end_time": "2024-07-12T16:51:17.912308Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xe5507e0e21fda355c18146a5da519fbd",
        "span_id": "0x59d1f56ecfbda960",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:51:17.911727Z",
    "end_time": "2024-07-12T16:51:17.912321Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 51182,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x588a30099e61f51a03cb1b392efd8c68",
        "span_id": "0x902393130ff994ed",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xcd47122bd9b222b4",
    "start_time": "2024-07-12T16:51:17.760959Z",
    "end_time": "2024-07-12T16:51:19.221458Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x588a30099e61f51a03cb1b392efd8c68",
        "span_id": "0x671bb2754f0390e4",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xcd47122bd9b222b4",
    "start_time": "2024-07-12T16:51:19.221719Z",
    "end_time": "2024-07-12T16:51:19.221997Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x588a30099e61f51a03cb1b392efd8c68",
        "span_id": "0xfa05d92e53ac7027",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xcd47122bd9b222b4",
    "start_time": "2024-07-12T16:51:19.222047Z",
    "end_time": "2024-07-12T16:51:19.222102Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x588a30099e61f51a03cb1b392efd8c68",
        "span_id": "0xcd47122bd9b222b4",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:51:17.760513Z",
    "end_time": "2024-07-12T16:51:19.222112Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 44032,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xb02c59e62edae7ca9af2e664504fa6a5",
        "span_id": "0xb0e811342fe2aba0",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x07414e35d612e3b7",
    "start_time": "2024-07-12T16:51:19.238803Z",
    "end_time": "2024-07-12T16:51:19.238824Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:47826 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x6fd3778dbbb1416ce89f730ae66b3635",
        "span_id": "0xa2176cd6c12f39a2",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x765e5e4428975063",
    "start_time": "2024-07-12T16:51:47.936127Z",
    "end_time": "2024-07-12T16:51:47.936325Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x6fd3778dbbb1416ce89f730ae66b3635",
        "span_id": "0xc344875d5210a725",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x765e5e4428975063",
    "start_time": "2024-07-12T16:51:47.936385Z",
    "end_time": "2024-07-12T16:51:47.936413Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x6fd3778dbbb1416ce89f730ae66b3635",
        "span_id": "0x765e5e4428975063",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:51:47.935807Z",
    "end_time": "2024-07-12T16:51:47.936421Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 47826,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:52:11 [info     ] process_query executed         execution_time=51.77875876426697 function=process_query
2024-07-12 16:52:11 [debug    ] Generated response             response=["1969", "An ice-cream sundae", "Gulf Stream", "1–18", "Utrecht"]
2024-07-12 16:52:11 [debug    ] Saved memory for query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: In which year was the 50p coin introduced into circulation in Britain?, A: 1969
Q: If you were eating a 'Knickerbocker Glory' - What would you be eating?, A: An ice-cream sundae
Q: What is the ocean current that flows from Florida to Europe?, A: Gulf Stream
Q: A bet of Manqué at roulette covers which group of numbers?, A: 1–18
Q: By which treaty of 1713 did Spain cede Gibraltar and Minorca to Great Britain?, A: Utrecht
 with result: ["1969", "An ice-cream sundae", "Gulf Stream", "1–18", "Utrecht"]
2024-07-12 16:52:11 [info     ] Loaded corpus with 17 entries in 0.01 seconds
2024-07-12 16:52:11 [info     ] Updated indexing with 17 documents in 0.01 seconds
2024-07-12 16:52:11 [info     ] _update_indexing executed      execution_time=0.006801128387451172 function=_update_indexing
2024-07-12 16:52:11 [info     ] auto_link_memories executed    execution_time=0.012326478958129883 function=auto_link_memories
2024-07-12 16:52:11 [info     ] Memory saved                   extra={'query': 'Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]\nQ: In which year was the 50p coin introduced into circulation in Britain?, A: 1969\nQ: If you were eating a \'Knickerbocker Glory\' - What would you be eating?, A: An ice-cream sundae\nQ: What is the ocean current that flows from Florida to Europe?, A: Gulf Stream\nQ: A bet of Manqué at roulette covers which group of numbers?, A: 1–18\nQ: By which treaty of 1713 did Spain cede Gibraltar and Minorca to Great Britain?, A: Utrecht\n', 'memory_id': 17}
2024-07-12 16:52:11 [info     ] save_memory executed           execution_time=0.33317995071411133 function=save_memory
2024-07-12 16:52:11 [info     ] Query processed successfully
INFO:     172.18.0.1:44036 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:52:11 [info     ] Received query: I visited Town Hall, which is 1 KM, West from Museum.
2024-07-12 16:52:11 [info     ] get_linked_memories executed   execution_time=0.003430604934692383 function=get_linked_memories
2024-07-12 16:52:11 [info     ] retrieve_relevant_memories executed execution_time=0.19127178192138672 function=retrieve_relevant_memories
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xb02c59e62edae7ca9af2e664504fa6a5",
        "span_id": "0xb498e95c6d2c126f",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x07414e35d612e3b7",
    "start_time": "2024-07-12T16:51:19.239081Z",
    "end_time": "2024-07-12T16:52:11.351469Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xb02c59e62edae7ca9af2e664504fa6a5",
        "span_id": "0x38bbcdb90a15f79c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x07414e35d612e3b7",
    "start_time": "2024-07-12T16:52:11.351687Z",
    "end_time": "2024-07-12T16:52:11.351931Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xb02c59e62edae7ca9af2e664504fa6a5",
        "span_id": "0x45ba8cc17cdbe464",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x07414e35d612e3b7",
    "start_time": "2024-07-12T16:52:11.351978Z",
    "end_time": "2024-07-12T16:52:11.352015Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xb02c59e62edae7ca9af2e664504fa6a5",
        "span_id": "0x07414e35d612e3b7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:51:19.238607Z",
    "end_time": "2024-07-12T16:52:11.352022Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 44036,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xa04de71cd49ac0e17d19fedb89ff9a3d",
        "span_id": "0x59b7063ebb944030",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5a9806b00cf08a84",
    "start_time": "2024-07-12T16:52:11.360261Z",
    "end_time": "2024-07-12T16:52:11.360280Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:42978 - "GET /health HTTP/1.1" 200 OK
2024-07-12 16:52:18 [info     ] process_query executed         execution_time=6.725133419036865 function=process_query
2024-07-12 16:52:18 [debug    ] Generated response             response=• There is a Museum in the center of the hometown.
2024-07-12 16:52:18 [debug    ] Saved memory for query: I visited Town Hall, which is 1 KM, West from Museum. with result: • There is a Museum in the center of the hometown.
2024-07-12 16:52:18 [info     ] Loaded corpus with 18 entries in 0.01 seconds
2024-07-12 16:52:18 [info     ] Updated indexing with 18 documents in 0.01 seconds
2024-07-12 16:52:18 [info     ] _update_indexing executed      execution_time=0.006744384765625 function=_update_indexing
2024-07-12 16:52:18 [info     ] auto_link_memories executed    execution_time=0.01230764389038086 function=auto_link_memories
2024-07-12 16:52:18 [info     ] Memory saved                   extra={'query': 'I visited Town Hall, which is 1 KM, West from Museum.', 'memory_id': 18}
2024-07-12 16:52:18 [info     ] save_memory executed           execution_time=0.3187704086303711 function=save_memory
2024-07-12 16:52:18 [info     ] Query processed successfully
INFO:     172.18.0.1:37214 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:52:18 [info     ] Received query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: Which European town gave its name to a Treaty which symbolizes closer economic links between European countries?, A: Maastricht
Q: What is the surname of the US astronaut after whom the Thunderbirds character John Tracy is named?, A: GLENN
Q: Bearoff, Nullo Play and Quadrant are all terms used in which board game?, A: Backgammon

2024-07-12 16:52:18 [info     ] get_linked_memories executed   execution_time=0.003806591033935547 function=get_linked_memories
2024-07-12 16:52:18 [info     ] get_linked_memories executed   execution_time=0.0031440258026123047 function=get_linked_memories
2024-07-12 16:52:18 [info     ] get_linked_memories executed   execution_time=0.0035147666931152344 function=get_linked_memories
2024-07-12 16:52:18 [info     ] get_linked_memories executed   execution_time=0.0033805370330810547 function=get_linked_memories
2024-07-12 16:52:18 [info     ] get_linked_memories executed   execution_time=0.0031936168670654297 function=get_linked_memories
2024-07-12 16:52:18 [info     ] get_linked_memories executed   execution_time=0.0035758018493652344 function=get_linked_memories
2024-07-12 16:52:18 [info     ] retrieve_relevant_memories executed execution_time=0.20104193687438965 function=retrieve_relevant_memories
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xa6b005b37390e1e5a90628179ae247b0",
        "span_id": "0x99f5bfa74fd8195d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x0a7520726e8b5c1c",
    "start_time": "2024-07-12T16:52:17.959276Z",
    "end_time": "2024-07-12T16:52:17.959490Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xa6b005b37390e1e5a90628179ae247b0",
        "span_id": "0x7bc0d8046c80751b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x0a7520726e8b5c1c",
    "start_time": "2024-07-12T16:52:17.959538Z",
    "end_time": "2024-07-12T16:52:17.959564Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xa6b005b37390e1e5a90628179ae247b0",
        "span_id": "0x0a7520726e8b5c1c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:52:17.958967Z",
    "end_time": "2024-07-12T16:52:17.959570Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 42978,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xa04de71cd49ac0e17d19fedb89ff9a3d",
        "span_id": "0x67ce78cfecd1306e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5a9806b00cf08a84",
    "start_time": "2024-07-12T16:52:11.360509Z",
    "end_time": "2024-07-12T16:52:18.404861Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xa04de71cd49ac0e17d19fedb89ff9a3d",
        "span_id": "0x25c3f49e24780a77",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5a9806b00cf08a84",
    "start_time": "2024-07-12T16:52:18.405074Z",
    "end_time": "2024-07-12T16:52:18.405314Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xa04de71cd49ac0e17d19fedb89ff9a3d",
        "span_id": "0x18c7bec91285d520",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x5a9806b00cf08a84",
    "start_time": "2024-07-12T16:52:18.405362Z",
    "end_time": "2024-07-12T16:52:18.405399Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xa04de71cd49ac0e17d19fedb89ff9a3d",
        "span_id": "0x5a9806b00cf08a84",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:52:11.360076Z",
    "end_time": "2024-07-12T16:52:18.405405Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 37214,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xb98864b9d618032e5d0544bb05c01cd9",
        "span_id": "0x576d946189151f04",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4a032a898274684a",
    "start_time": "2024-07-12T16:52:18.414457Z",
    "end_time": "2024-07-12T16:52:18.414475Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:41008 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x8fb8909c5fb6725916c8524837fc17ba",
        "span_id": "0x4bbde2c8e20ccac6",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xa1003e63e1919138",
    "start_time": "2024-07-12T16:52:47.983424Z",
    "end_time": "2024-07-12T16:52:47.983608Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x8fb8909c5fb6725916c8524837fc17ba",
        "span_id": "0xf41f706659f6ebc8",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xa1003e63e1919138",
    "start_time": "2024-07-12T16:52:47.983654Z",
    "end_time": "2024-07-12T16:52:47.983680Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x8fb8909c5fb6725916c8524837fc17ba",
        "span_id": "0xa1003e63e1919138",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:52:47.983150Z",
    "end_time": "2024-07-12T16:52:47.983687Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 41008,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:53:11 [info     ] process_query executed         execution_time=53.56908869743347 function=process_query
2024-07-12 16:53:11 [debug    ] Generated response             response=["Maastricht", "GLENN", "Backgammon"]
2024-07-12 16:53:12 [debug    ] Saved memory for query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: Which European town gave its name to a Treaty which symbolizes closer economic links between European countries?, A: Maastricht
Q: What is the surname of the US astronaut after whom the Thunderbirds character John Tracy is named?, A: GLENN
Q: Bearoff, Nullo Play and Quadrant are all terms used in which board game?, A: Backgammon
 with result: ["Maastricht", "GLENN", "Backgammon"]
2024-07-12 16:53:12 [info     ] Loaded corpus with 19 entries in 0.01 seconds
2024-07-12 16:53:12 [info     ] Updated indexing with 19 documents in 0.01 seconds
2024-07-12 16:53:12 [info     ] _update_indexing executed      execution_time=0.006251096725463867 function=_update_indexing
2024-07-12 16:53:12 [info     ] auto_link_memories executed    execution_time=0.01441049575805664 function=auto_link_memories
2024-07-12 16:53:12 [info     ] Memory saved                   extra={'query': 'Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]\nQ: Which European town gave its name to a Treaty which symbolizes closer economic links between European countries?, A: Maastricht\nQ: What is the surname of the US astronaut after whom the Thunderbirds character John Tracy is named?, A: GLENN\nQ: Bearoff, Nullo Play and Quadrant are all terms used in which board game?, A: Backgammon\n', 'memory_id': 19}
2024-07-12 16:53:12 [info     ] save_memory executed           execution_time=0.33013176918029785 function=save_memory
2024-07-12 16:53:12 [info     ] Query processed successfully
INFO:     172.18.0.1:37224 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:53:12 [info     ] Received query: I require another 3 Leek, please put it on the list.
2024-07-12 16:53:12 [info     ] get_linked_memories executed   execution_time=0.0036857128143310547 function=get_linked_memories
2024-07-12 16:53:12 [info     ] retrieve_relevant_memories executed execution_time=0.19075989723205566 function=retrieve_relevant_memories
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xb98864b9d618032e5d0544bb05c01cd9",
        "span_id": "0x5a413ef991c8af8f",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4a032a898274684a",
    "start_time": "2024-07-12T16:52:18.414856Z",
    "end_time": "2024-07-12T16:53:12.314521Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xb98864b9d618032e5d0544bb05c01cd9",
        "span_id": "0xace1fe7087260461",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4a032a898274684a",
    "start_time": "2024-07-12T16:53:12.314704Z",
    "end_time": "2024-07-12T16:53:12.314916Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xb98864b9d618032e5d0544bb05c01cd9",
        "span_id": "0xa1bcade6b562a230",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x4a032a898274684a",
    "start_time": "2024-07-12T16:53:12.314956Z",
    "end_time": "2024-07-12T16:53:12.314987Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xb98864b9d618032e5d0544bb05c01cd9",
        "span_id": "0x4a032a898274684a",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:52:18.414285Z",
    "end_time": "2024-07-12T16:53:12.314993Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 37224,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0xfb4477622e0d5a7f11c1635c07f24637",
        "span_id": "0xecc5a5f91ff3dd70",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xa3d8cfd4e3d1554b",
    "start_time": "2024-07-12T16:53:12.322495Z",
    "end_time": "2024-07-12T16:53:12.322515Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:52980 - "GET /health HTTP/1.1" 200 OK
2024-07-12 16:53:19 [info     ] process_query executed         execution_time=6.742230415344238 function=process_query
2024-07-12 16:53:19 [debug    ] Generated response             response=• Similar query, asking for a different quantity of Leeks.
2024-07-12 16:53:19 [debug    ] Saved memory for query: I require another 3 Leek, please put it on the list. with result: • Similar query, asking for a different quantity of Leeks.
2024-07-12 16:53:19 [info     ] Loaded corpus with 20 entries in 0.01 seconds
2024-07-12 16:53:19 [info     ] Updated indexing with 20 documents in 0.01 seconds
2024-07-12 16:53:19 [info     ] _update_indexing executed      execution_time=0.00639796257019043 function=_update_indexing
2024-07-12 16:53:19 [info     ] create_memory_link executed    execution_time=0.010494470596313477 function=create_memory_link
2024-07-12 16:53:19 [info     ] create_memory_link executed    execution_time=0.010561704635620117 function=create_memory_link
2024-07-12 16:53:19 [info     ] auto_link_memories executed    execution_time=0.03480076789855957 function=auto_link_memories
2024-07-12 16:53:19 [info     ] Memory saved                   extra={'query': 'I require another 3 Leek, please put it on the list.', 'memory_id': 20}
2024-07-12 16:53:19 [info     ] save_memory executed           execution_time=0.34253358840942383 function=save_memory
2024-07-12 16:53:19 [info     ] Query processed successfully
INFO:     172.18.0.1:45116 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:53:19 [info     ] Received query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: What movie starred Michael Jordan?, A: Space Jam
Q: Which singer played the Goblin King Jareth in the film Labyrinth'?, A: David Bowie
Q: Napoleon called this the 'Battle of Mont Saint Jean', by what name do we know it?, A: WATERLOO
Q: John Sholto Douglas sponsored the rules for which sport in the 19th century?, A: Boxing
Q: What provoked the war between Honduras and El Salvador in 1969?, A: A Football Match
Q: Pilliwinks was a medieval instrument of torture used mainly on which part of the body?, A: Fingers and thumbs
Q: Which businessman on his elevation to the House of Lords, by Gordon Brown, in 2000, took the title Baron of Clapton?, A: Alan Sugar
Q: What brand announced, in 2010, that their food used to taste bad?, A: Dominos
Q: Which Canadian sang Miss Chatelaine in 1993, A: K.D. Lang
Q: What nickname was given to Ana Cumpna, also known as Anna Sage, who betrayed John Dillinger to the police when he attended the Biograph Theater in Chicago?, A: Lady in Red
Q: What is prepared in a tannery?, A: Leather
Q: What is the name of Beethoven's only opera?, A: Fidelio
Q: Herb of Grace is the name given to which strong- smelling herb?, A: Rue
Q: Of which country was Cleopatra the Queen, A: Egypt
Q: What was the name of the character played by Chuck Connors in The Rifleman, A: Lucas McCain
Q: Famous for its glass manufacturing, what is the real name of Malta’s ‘Silent City’?, A: MDINA
Q: Which pigment is named after an Italian city?, A: Sienna
Q: In 2009, a special design was used on the reverse of the 50p coin to commemorate the 250th anniversary of which establishment?, A: Royal Botanical Gardens at Kew
Q: """A Shropshire Lad"" is a work of poetry by whom?", A: A. E. Housman
Q: What name was given to the floating harbours used on D-Day?, A: Mulberries
Q: Which northern English beer was originally launched by Col. James Porter in 1927?, A: Newcastle Brown Ale
Q: Who had an 80s No 1 hit with Hold On To The Nights?, A: Richard Marx
Q: In Greek Myth which legendary monster fathered both the Chimera and Cerberus?, A: Typhon
Q: What alcoholic drink whose name means 'little water' was first distilled from grain in the 8-9th centuries in NE Europe?, A: Vodka
Q: What is the most common chemical used in nail polish remover?, A: Acetone
Q: What is the name of the strait that lies between Australia and New Guinea that links the Coral Sea to the East with the Arafura Sea to the west?, A: TORRES Strait
Q: What is the technical term for the hollow at the back of the knee, sometimes called the knee pit?, A: Popliteal fossa
Q: What Latin word meaning equal expresses a quality standard/norm (on or below or above etc), alluding to golfing performance?, A: Par
Q: What was the password for the allied troops during D-Day, A: Mickey Mouse
Q: Which book begins 'When he was nearly thirteen my brother Jem got his arm badly broken'?, A: TO KILL A MOCKINGBIRD
Q: When Jim Laker took 19 wickets in the Old Trafford Test Match in 1956, who was the Australian captain?, A: RICHIE BENAUD
Q: Born in Kingston, Texas in 1925, who is generally recognized as the most decorated American soldier of WWII, before he launched a successful film career?, A: Audie Murphy
Q: In which year was the 'Boxing Day Tsunami' in the Indian Ocean?, A: 2004
Q: """A Shropshire Lad"" is a work of poetry by whom?", A: A. E. Housman
Q: The pub with the longest name in the UK has how many letters in it? 55, 75 or 95?, A: 55
Q: Which Aztec ruler was deposed by Cortez?, A: MONTEZUMA
Q: What was the capital city of Tanzania until 1974?, A: DAR-ES-SALAAM
Q: The Bet365 Gold Cup, formerly the Beffred and the Whitbread Gold Cup, is the last major 'race of the National Hunt season. On which course is it run?, A: Sandown
Q: In 2001: A Space Odyssey, what was the name of the computer that took control of the spaceship Discovery?, A: HAL 9000
Q: At the equator, in miles per hour, what speed of the ground beneath your feet, as a result of the Earth's rotation?, A: 18,000 mph

2024-07-12 16:53:19 [info     ] get_linked_memories executed   execution_time=0.003941774368286133 function=get_linked_memories
2024-07-12 16:53:19 [info     ] get_linked_memories executed   execution_time=0.003918886184692383 function=get_linked_memories
2024-07-12 16:53:19 [info     ] get_linked_memories executed   execution_time=0.0044209957122802734 function=get_linked_memories
2024-07-12 16:53:19 [info     ] get_linked_memories executed   execution_time=0.0033981800079345703 function=get_linked_memories
2024-07-12 16:53:19 [info     ] get_linked_memories executed   execution_time=0.0041103363037109375 function=get_linked_memories
2024-07-12 16:53:19 [info     ] get_linked_memories executed   execution_time=0.003932476043701172 function=get_linked_memories
2024-07-12 16:53:19 [info     ] retrieve_relevant_memories executed execution_time=0.33060479164123535 function=retrieve_relevant_memories
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x951a230950a857788842352eaafab41e",
        "span_id": "0x27706052be71eddf",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd733c8c555ec299e",
    "start_time": "2024-07-12T16:53:18.007357Z",
    "end_time": "2024-07-12T16:53:18.007562Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x951a230950a857788842352eaafab41e",
        "span_id": "0x7933b30919404b16",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd733c8c555ec299e",
    "start_time": "2024-07-12T16:53:18.007609Z",
    "end_time": "2024-07-12T16:53:18.007641Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x951a230950a857788842352eaafab41e",
        "span_id": "0xd733c8c555ec299e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:53:18.007033Z",
    "end_time": "2024-07-12T16:53:18.007647Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 52980,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0xfb4477622e0d5a7f11c1635c07f24637",
        "span_id": "0x517d395730c3e5b7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xa3d8cfd4e3d1554b",
    "start_time": "2024-07-12T16:53:12.322725Z",
    "end_time": "2024-07-12T16:53:19.407973Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xfb4477622e0d5a7f11c1635c07f24637",
        "span_id": "0x3a08591e67f4c55e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xa3d8cfd4e3d1554b",
    "start_time": "2024-07-12T16:53:19.408215Z",
    "end_time": "2024-07-12T16:53:19.408465Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0xfb4477622e0d5a7f11c1635c07f24637",
        "span_id": "0xb80fc5aa0a689ed1",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xa3d8cfd4e3d1554b",
    "start_time": "2024-07-12T16:53:19.408514Z",
    "end_time": "2024-07-12T16:53:19.408549Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0xfb4477622e0d5a7f11c1635c07f24637",
        "span_id": "0xa3d8cfd4e3d1554b",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:53:12.322272Z",
    "end_time": "2024-07-12T16:53:19.408556Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 45116,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x8e322450c836580d5ba22106885bfe49",
        "span_id": "0xa6dc63e53670f40a",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xaf4d40cec2084a65",
    "start_time": "2024-07-12T16:53:19.419769Z",
    "end_time": "2024-07-12T16:53:19.419788Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
2024-07-12 16:53:19 [error    ] Error executing query          error=Error code: 429 - {'error': {'message': 'Rate limit reached for model `llama3-70b-8192` in organization `org_01j2kdfmb1f3r9h6frjpjqadwf` on tokens per minute (TPM): Limit 6000, Used 5832, Requested 6411. Please try again in 1m2.426s. Visit https://console.groq.com/docs/rate-limits for more information.', 'type': 'tokens', 'code': 'rate_limit_exceeded'}} query=Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: What movie starred Michael Jordan?, A: Space Jam
Q: Which singer played the Goblin King Jareth in the film Labyrinth'?, A: David Bowie
Q: Napoleon called this the 'Battle of Mont Saint Jean', by what name do we know it?, A: WATERLOO
Q: John Sholto Douglas sponsored the rules for which sport in the 19th century?, A: Boxing
Q: What provoked the war between Honduras and El Salvador in 1969?, A: A Football Match
Q: Pilliwinks was a medieval instrument of torture used mainly on which part of the body?, A: Fingers and thumbs
Q: Which businessman on his elevation to the House of Lords, by Gordon Brown, in 2000, took the title Baron of Clapton?, A: Alan Sugar
Q: What brand announced, in 2010, that their food used to taste bad?, A: Dominos
Q: Which Canadian sang Miss Chatelaine in 1993, A: K.D. Lang
Q: What nickname was given to Ana Cumpna, also known as Anna Sage, who betrayed John Dillinger to the police when he attended the Biograph Theater in Chicago?, A: Lady in Red
Q: What is prepared in a tannery?, A: Leather
Q: What is the name of Beethoven's only opera?, A: Fidelio
Q: Herb of Grace is the name given to which strong- smelling herb?, A: Rue
Q: Of which country was Cleopatra the Queen, A: Egypt
Q: What was the name of the character played by Chuck Connors in The Rifleman, A: Lucas McCain
Q: Famous for its glass manufacturing, what is the real name of Malta’s ‘Silent City’?, A: MDINA
Q: Which pigment is named after an Italian city?, A: Sienna
Q: In 2009, a special design was used on the reverse of the 50p coin to commemorate the 250th anniversary of which establishment?, A: Royal Botanical Gardens at Kew
Q: """A Shropshire Lad"" is a work of poetry by whom?", A: A. E. Housman
Q: What name was given to the floating harbours used on D-Day?, A: Mulberries
Q: Which northern English beer was originally launched by Col. James Porter in 1927?, A: Newcastle Brown Ale
Q: Who had an 80s No 1 hit with Hold On To The Nights?, A: Richard Marx
Q: In Greek Myth which legendary monster fathered both the Chimera and Cerberus?, A: Typhon
Q: What alcoholic drink whose name means 'little water' was first distilled from grain in the 8-9th centuries in NE Europe?, A: Vodka
Q: What is the most common chemical used in nail polish remover?, A: Acetone
Q: What is the name of the strait that lies between Australia and New Guinea that links the Coral Sea to the East with the Arafura Sea to the west?, A: TORRES Strait
Q: What is the technical term for the hollow at the back of the knee, sometimes called the knee pit?, A: Popliteal fossa
Q: What Latin word meaning equal expresses a quality standard/norm (on or below or above etc), alluding to golfing performance?, A: Par
Q: What was the password for the allied troops during D-Day, A: Mickey Mouse
Q: Which book begins 'When he was nearly thirteen my brother Jem got his arm badly broken'?, A: TO KILL A MOCKINGBIRD
Q: When Jim Laker took 19 wickets in the Old Trafford Test Match in 1956, who was the Australian captain?, A: RICHIE BENAUD
Q: Born in Kingston, Texas in 1925, who is generally recognized as the most decorated American soldier of WWII, before he launched a successful film career?, A: Audie Murphy
Q: In which year was the 'Boxing Day Tsunami' in the Indian Ocean?, A: 2004
Q: """A Shropshire Lad"" is a work of poetry by whom?", A: A. E. Housman
Q: The pub with the longest name in the UK has how many letters in it? 55, 75 or 95?, A: 55
Q: Which Aztec ruler was deposed by Cortez?, A: MONTEZUMA
Q: What was the capital city of Tanzania until 1974?, A: DAR-ES-SALAAM
Q: The Bet365 Gold Cup, formerly the Beffred and the Whitbread Gold Cup, is the last major 'race of the National Hunt season. On which course is it run?, A: Sandown
Q: In 2001: A Space Odyssey, what was the name of the computer that took control of the spaceship Discovery?, A: HAL 9000
Q: At the equator, in miles per hour, what speed of the ground beneath your feet, as a result of the Earth's rotation?, A: 18,000 mph

[31m╭─[0m[31m──────────────────────────────[0m[31m [0m[1;31mTraceback [0m[1;2;31m(most recent call last)[0m[31m [0m[31m───────────────────────────────[0m[31m─╮[0m
[31m│[0m [2;33m/app/src/utils/[0m[1;33mcontroller.py[0m:[94m26[0m in [92mexecute_query[0m                                                 [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m23 [0m[2m│   [0m                                                                                        [31m│[0m
[31m│[0m   [2m24 [0m[2m│   [0m[94masync[0m [94mdef[0m [92mexecute_query[0m([96mself[0m, query: [96mstr[0m) -> [96mstr[0m:                                       [31m│[0m
[31m│[0m   [2m25 [0m[2m│   │   [0m[94mtry[0m:                                                                                [31m│[0m
[31m│[0m [31m❱ [0m26 [2m│   │   │   [0mresponse = [94mawait[0m [96mself[0m.agent.process_query(query)                                [31m│[0m
[31m│[0m   [2m27 [0m[2m│   │   │   [0m[96mself[0m.logger.debug([33m"[0m[33mGenerated response[0m[33m"[0m, response=response)                      [31m│[0m
[31m│[0m   [2m28 [0m[2m│   │   │   [0m[94mawait[0m [96mself[0m.memory_manager.save_memory(query, response)                          [31m│[0m
[31m│[0m   [2m29 [0m[2m│   │   │   [0m[94mreturn[0m response                                                                 [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m     e = [1;35mRateLimitError[0m[1m([0m[33m"Error code: 429 - [0m[1;33m{[0m[33m'error': [0m[1;33m{[0m[33m'message': 'Rate limit reached for [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33mmodel `llama3-70b-8192` in organization `org_01j2kdfmb1f3r9h6frjpjqadwf` on tokens [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33mper minute [0m[1;33m([0m[33mTPM[0m[1;33m)[0m[33m: Limit 6000, Used 5832, Requested 6411. Please try again in [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33m1m2.426s. Visit https://console.groq.com/docs/rate-limits for more information.', [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33m'type': 'tokens', 'code': 'rate_limit_exceeded'[0m[1;33m}[0m[1;33m}[0m[33m"[0m[1m)[0m                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m query = [33m'Here are some trivia questions and answers for you to process. Please extract [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         [33mal'[0m+[94m4059[0m                                                                             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m  self = [1m<[0m[1;95msrc.utils.controller.Controller[0m[39m object at [0m[94m0x7fe58a4003e0[0m[1m>[0m                           [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/src/utils/[0m[1;33menhanced_logging.py[0m:[94m12[0m in [92mwrapper[0m                                                 [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m 9 [0m[2m│   [0m[1;95m@wraps[0m(func)                                                                            [31m│[0m
[31m│[0m   [2m10 [0m[2m│   [0m[94masync[0m [94mdef[0m [92mwrapper[0m(*args, **kwargs):                                                     [31m│[0m
[31m│[0m   [2m11 [0m[2m│   │   [0mstart_time = time.time()                                                            [31m│[0m
[31m│[0m [31m❱ [0m12 [2m│   │   [0mresult = [94mawait[0m func(*args, **kwargs)                                                [31m│[0m
[31m│[0m   [2m13 [0m[2m│   │   [0mexecution_time = time.time() - start_time                                           [31m│[0m
[31m│[0m   [2m14 [0m[2m│   │   [0mperformance_logger.info([33mf[0m[33m"[0m[33m{[0mfunc.[91m__name__[0m[33m}[0m[33m executed[0m[33m"[0m,                                [31m│[0m
[31m│[0m   [2m15 [0m[2m│   │   │   │   │   │   │   │   [0mexecution_time=execution_time,                              [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m       args = [1m([0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[1m<[0m[1;95msrc.agents.agent.Agent[0m[39m object at [0m[94m0x7fe58a400230[0m[1m>[0m,                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'Here are some trivia questions and answers for you to process. Please [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33mextract al'[0m+[94m4059[0m                                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [1m)[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       func = [1m<[0m[1;95mfunction[0m[39m Agent.process_query at [0m[94m0x7fe5e768d080[0m[1m>[0m                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m     kwargs = [1m{[0m[1m}[0m                                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m start_time = [94m1720803199.4201813[0m                                                              [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/src/agents/[0m[1;33magent.py[0m:[94m52[0m in [92mprocess_query[0m                                                     [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m49 [0m[2m│   │   [0m]                                                                                   [31m│[0m
[31m│[0m   [2m50 [0m[2m│   │   [0m                                                                                    [31m│[0m
[31m│[0m   [2m51 [0m[2m│   │   [0m[2m# Use asyncio.to_thread to run the synchronous API call in a separate thread[0m        [31m│[0m
[31m│[0m [31m❱ [0m52 [2m│   │   [0mresponse = [94mawait[0m asyncio.to_thread(                                                 [31m│[0m
[31m│[0m   [2m53 [0m[2m│   │   │   [0m[96mself[0m.groq_client.chat.completions.create,                                       [31m│[0m
[31m│[0m   [2m54 [0m[2m│   │   │   [0mmessages=messages,                                                              [31m│[0m
[31m│[0m   [2m55 [0m[2m│   │   │   [0mmodel=config.MODEL_NAME,                                                        [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m          messages = [1m[[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m{[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'role'[0m: [33m'system'[0m,                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33madministrator at the core of a sophistic'[0m+[94m598[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m}[0m,                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m{[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'role'[0m: [33m'user'[0m,                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33mfor you to process. Please ext'[0m+[94m24783[0m                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m}[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [1m][0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             query = [33m'Here are some trivia questions and answers for you to process. Please [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33mextract al'[0m+[94m4059[0m                                                         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m relevant_memories = [33m'[0m[1;33m<[0m[1;33m14[0m[1;33m>[0m[33m, <Here are some trivia questions and answers for you to process. [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33mPlease ext'[0m+[94m20061[0m                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              self = [1m<[0m[1;95msrc.agents.agent.Agent[0m[39m object at [0m[94m0x7fe58a400230[0m[1m>[0m                        [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/usr/local/lib/python3.12/asyncio/[0m[1;33mthreads.py[0m:[94m25[0m in [92mto_thread[0m                                     [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m22 [0m[2m│   [0mloop = events.get_running_loop()                                                        [31m│[0m
[31m│[0m   [2m23 [0m[2m│   [0mctx = contextvars.copy_context()                                                        [31m│[0m
[31m│[0m   [2m24 [0m[2m│   [0mfunc_call = functools.partial(ctx.run, func, *args, **kwargs)                           [31m│[0m
[31m│[0m [31m❱ [0m25 [2m│   [0m[94mreturn[0m [94mawait[0m loop.run_in_executor([94mNone[0m, func_call)                                      [31m│[0m
[31m│[0m   [2m26 [0m                                                                                            [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m      args = [1m([0m[1m)[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       ctx = [1m<[0m[1;95m_contextvars.Context[0m[39m object at [0m[94m0x7fe589a3f540[0m[1m>[0m                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m      func = [1m<[0m[1;95mbound[0m[39m method Completions.create of <groq.resources.chat.completions.Completions[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [39mobject at [0m[94m0x7fe5e77993d0[0m[39m>[0m[1m>[0m                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m func_call = [1;35mfunctools.partial[0m[1m([0m[1m<[0m[1;95mbuilt-in[0m[39m method run of _contextvars.Context object at [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [94m0x7fe589a3f540[0m[39m>, <bound method Completions.create of [0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [39m<groq.resources.chat.completions.Completions object at [0m[94m0x7fe5e77993d0[0m[39m>>, [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmessages[0m[39m=[0m[1;39m[[0m[1;39m{[0m[33m'role'[0m[39m: [0m[33m'system'[0m[39m, [0m[33m'content'[0m[39m: [0m[33m'You are a highly efficient, no-nonsense[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33madministrator at the core of a sophisticated memory system. Your primary role is[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mto analyze retrieved memories and provide concise, relevant summaries or [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mindicate their lack of relevance. You value brevity and directness above all [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33melse.\n\n    The retrieved memories you will be processing are structured as [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfollows:\n\n    1. Each memory entry contains: <memory_id>, <previous_query>, [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<previous_response>, <similarity_score>\n    2. Some entries may have an [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33madditional field indicating if they are linked to another memory.\n\n    Analyze[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthese memories in relation to the current query efficiently, paying special [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mattention to linked memories.'[0m[1;39m}[0m[39m, [0m[1;39m{[0m[33m'role'[0m[39m: [0m[33m'user'[0m[39m, [0m[33m'content'[0m[39m: [0m[33m'QUERY: Here are [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msome trivia questions and answers for you to process. Please extract all of the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33manswers in json form as a single message: E.g [0m[1;33m[[0m[33m"answer 1", "answer 2", ...[0m[1;33m][0m[33m\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhat movie starred Michael Jordan?, A: Space Jam\nQ: Which singer played the [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mGoblin King Jareth in the film \x91Labyrinth\'?, A: David Bowie\nQ: Napoleon [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcalled this the \'Battle of Mont Saint Jean\', by what name do we know it?, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWATERLOO\nQ: John Sholto Douglas sponsored the rules for which sport in the 19th[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcentury?, A: Boxing\nQ: What provoked the war between Honduras and El Salvador [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33min 1969?, A: A Football Match\nQ: Pilliwinks was a medieval instrument of [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtorture used mainly on which part of the body?, A: Fingers and thumbs\nQ: Which [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbusinessman on his elevation to the House of Lords, by Gordon Brown, in 2000, [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtook the title Baron of Clapton?, A: Alan Sugar\nQ: What brand announced, in [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m2010, that their food used to taste bad?, A: Dominos\nQ: Which Canadian sang [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMiss Chatelaine in 1993, A: K.D. Lang\nQ: What nickname was given to Ana Cumpna,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33malso known as Anna Sage, who betrayed John Dillinger to the police when he [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mattended the Biograph Theater in Chicago?, A: Lady in Red\nQ: What is prepared [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33min a tannery?, A: Leather\nQ: What is the name of Beethoven\'s only opera?, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFidelio\nQ: Herb of Grace is the name given to which strong- smelling herb?, A: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mRue\nQ: Of which country was Cleopatra the Queen, A: Egypt\nQ: What was the name[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof the character played by Chuck Connors in The Rifleman, A: Lucas McCain\nQ: [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFamous for its glass manufacturing, what is the real name of Malta’s ‘Silent [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCity’?, A: MDINA\nQ: Which pigment is named after an Italian city?, A: [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mSienna\nQ: In 2009, a special design was used on the reverse of the 50p coin to [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcommemorate the 250th anniversary of which establishment?, A: Royal Botanical [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mGardens at Kew\nQ: """A Shropshire Lad"" is a work of poetry by whom?", A: A. E.[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mHousman\nQ: What name was given to the floating harbours used on D-Day?, A: [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMulberries\nQ: Which northern English beer was originally launched by Col. James[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPorter in 1927?, A: Newcastle Brown Ale\nQ: Who had an 80s No 1 hit with Hold On[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTo The Nights?, A: Richard Marx\nQ: In Greek Myth which legendary monster [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfathered both the Chimera and Cerberus?, A: Typhon\nQ: What alcoholic drink [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhose name means \'little water\' was first distilled from grain in the 8-9th [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcenturies in NE Europe?, A: Vodka\nQ: What is the most common chemical used in [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mnail polish remover?, A: Acetone\nQ: What is the name of the strait that lies [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbetween Australia and New Guinea that links the Coral Sea to the East with the [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mArafura Sea to the west?, A: TORRES Strait\nQ: What is the technical term for [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe hollow at the back of the knee, sometimes called the knee pit?, A: Popliteal[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfossa\nQ: What Latin word meaning equal expresses a quality standard/norm [0m[1;33m([0m[33mon or[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbelow or above etc[0m[1;33m)[0m[33m, alluding to golfing performance?, A: Par\nQ: What was the [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpassword for the allied troops during D-Day, A: Mickey Mouse\nQ: Which book [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbegins \'When he was nearly thirteen my brother Jem got his arm badly broken\'?,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mA: TO KILL A MOCKINGBIRD\nQ: When Jim Laker took 19 wickets in the Old Trafford [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTest Match in 1956, who was the Australian captain?, A: RICHIE BENAUD\nQ: Born [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33min Kingston, Texas in 1925, who is generally recognized as the most decorated [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAmerican soldier of WWII, before he launched a successful film career?, A: Audie[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMurphy\nQ: In which year was the \'Boxing Day Tsunami\' in the Indian Ocean?, A:[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m2004\nQ: """A Shropshire Lad"" is a work of poetry by whom?", A: A. E. [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mHousman\nQ: The pub with the longest name in the UK has how many letters in it? [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m55, 75 or 95?, A: 55\nQ: Which Aztec ruler was deposed by Cortez?, A: [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMONTEZUMA\nQ: What was the capital city of Tanzania until 1974?, A: [0m             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDAR-ES-SALAAM\nQ: The Bet365 Gold Cup, formerly the Beffred and the Whitbread [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mGold Cup, is the last major \'race of the National Hunt season. On which course [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mis it run?, A: Sandown\nQ: In 2001: A Space Odyssey, what was the name of the [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcomputer that took control of the spaceship Discovery?, A: HAL 9000\nQ: At the [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mequator, in miles per hour, what speed of the ground beneath your feet, as a [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mresult of the Earth\'s rotation?, A: 18,000 mph\n\n\n    RETRIEVED MEMORIES:\n  [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<14>, <Here are some trivia questions and answers for you to process. Please [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mextract all of the answers in json form as a single message: E.g [0m[1;33m[[0m[33m"answer 1", [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"answer 2", ...[0m[1;33m][0m[33m\nQ: "The ""Hall of Mirrors"" is in which building?", A: Palace [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof Versailles\nQ: In police parlance what are ‘dabs’?, A: Fingerprints\nQ: What [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mis the traditional/modern language of Iran and old Persia, named from the [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlatter?, A: Farsi\nQ: Which play set in Lancashire in the 1850\'s tells of boot [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmaker Will Mossop\'s romance with his boss\'s daughter?, A: HOBSON\'S CHOICE\nQ:[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhich group had a number one hit in 2009 with \'I Gotta Feeling\'?, A: BLACK [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEYED PEAS\nQ: What is the biggest Italian automaker?, A: Fiat\nQ: Which Bishop [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof the Church of England signs his first name followed by Roffen?, A: BISHOP OF [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mROCHESTER\nQ: The Belgian beer ‘Kriek’ is flavoured with which fruit?, A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCherry\nQ: In February 1987, which UK airline was privatised and listed on the [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLondon Stock Exchange?, A: British Airways\nQ: The eyes of Dr. T. J. Eckleberg [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mare a dominant symbol in which 1925 novel and later films?, A: THE GREAT [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mGATSBY\nQ: What famous road began in Chicago, Illinois, ending at Santa Monica, [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCalifornia?, A: Route 66\nQ: The Red Sea is connected to the Indian Ocean by [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich gulf ?, A: Gulf of Aden.\nQ: Who was the King of Libya who was overthrown [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mby a military coupled by Colonel Qaddafi in 1969?, A: IDRIS I\n>, <NO RELEVANT [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mINFORMATION>, <0.92>, <> <19>, <Here are some trivia questions and answers for [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33myou to process. Please extract all of the answers in json form as a single [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmessage: E.g [0m[1;33m[[0m[33m"answer 1", "answer 2", ...[0m[1;33m][0m[33m\nQ: Which European town gave its name[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mto a Treaty which symbolizes closer economic links between European countries?, [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mA: Maastricht\nQ: What is the surname of the US astronaut after whom the [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mThunderbirds character John Tracy is named?, A: GLENN\nQ: Bearoff, Nullo Play [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand Quadrant are all terms used in which board game?, A: Backgammon\n>, [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<[0m[1;33m[[0m[33m"Maastricht", "GLENN", "Backgammon"[0m[1;33m][0m[33m>, <0.91>, <> <13>, <Here are some trivia [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mquestions and answers for you to process. Please extract all of the answers in [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mjson form as a single message: E.g [0m[1;33m[[0m[33m"answer 1", "answer 2", ...[0m[1;33m][0m[33m\nQ: Which [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBritish city has cathedrals dedicated to St Nicholas and St Mary?, A: Newcastle [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mupon Tyne\nQ: Which Dickens novel\'s opening chapter is \'In Chancery\' with a [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mdescription of a foggy and muddy London street?, A: BLEAK HOUSE\nQ: Which 18th [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcentury inventor and founding father of the United States coined the phrase [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'time is money\'?, A: Benjamin Franklyn\nQ: "What was special about ""The Daily[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCourant"" that appeared in the early 18th century?", A: First daily [0m             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mnewspaper\nQ: Before being surpassed in 1311 AD by the Lincoln Cathedral in [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEngland, what construction with its 481 feet held the title for the tallest [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mman-made structure for hundreds of years?, A: Great Pyramid of Giza built around[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m2500 BC\nQ: Which TV series was about a pop group called \'Little Ladies\' [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfeaturing Charlotte Cornwell, Julie Covington and Rula Lenska?, A: Rock [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFollies\nQ: Actor Norman Painting died in November 2009, which part in a log [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mrunning radio series did he make his own?, A: PHIL ARCHER\nQ: What is the [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mgeneric title of a series of French comic strips that were written originally by[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mRen Goscinny and illustrated by Albert Uderzo?, A: The Adventures of Asterix\nQ:[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhich former Liverpool player has the middle name Everton?, A: MARK WALTERS\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mIn December 2006, the second longest motorway tunnel in Europe was opened [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mconnecting the port to the airport in which capital city?, A: Dublin\nQ: Which [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m17th/18th century Irish politician leader was nicknamed \'the Liberator”?, A: [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDaniel O’Connell\nQ: Referring to the cause of a person\'s downfall, who is the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mGreek goddess of punishment?, A: Nemesis\nQ: The adjective leporine relates to [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich animal?, A: Hare\nQ: Subtitled ‘What You Will’, which play begins: ‘If [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmusic be the food of love, play on’?, A: TWELFTH NIGHT\nQ: "The ""Giant [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMarbles"" rock formation in the USA is in which national park?", A: Joshua Tree [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNational Park\nQ: In which city did the gangland St Valentine’s Day Massacre [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtake place?, A: CHICAGO\nQ: Which country invaded the Falkland Islands in April [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1982?, A: Argentina\nQ: Which double glazing firm used a feather in their [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33madvertising commercials, A: Everest\nQ: What is the name for the point in the [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlunar orbit when the moon is nearest to the earth?, A: Perigee\nQ: "Which [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mclassic poem\'s first line is ""A thing of beauty is a joy forever""?", A: [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mENDYMION [0m[1;33m([0m[33mKeats[0m[1;33m)[0m[33m\nQ: In culinary terms, what is the Scoville Scale used to [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmeasure?, A: HOTNESS OF CHILI PEPPERS\nQ: Which supermarket chain started [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mselling straight croissants in its stores in February?, A: TESCO\nQ: "Judi Dench[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwon an Oscar for Best Supporting Actressfor playing which character in the 1998 [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfilm ""Shakespeare in Love""?", A: Queen Elizabeth I\nQ: Artiodactyla Suidae is [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe scientific name for which farm animal?, A: Pig\nQ: Who played Beverley Hills[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mhairdresser George Roundy in the 1975 film ‘Shampoo’?, A: Warren Beatty\nQ: [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLasting from 1299 to 1922, the Ottoman empire roughly corresponds to what modern[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mday country?, A: Turkey\nQ: """Torchwood"" was a spin-off of what popular TV [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mshow?", A: Doctor Who\nQ: In which town is the \'TV sitcom \'Two Pints of Lager [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand a Packet of Crisps\' set?, A: Runcorn\nQ: www.lbvcr.com is the website for [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich event organised by the RAC, this year on Sunday November 7th?, A: LONDON [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTO BRIGHTON VETERAN CAR [0m[1;33m([0m[33mRUN[0m[1;33m)[0m[33m\nQ: ‘The history of all the hitherto existing [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msociety is the history of class struggles’ is part of the first chapter of which[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpublication?, A: The Communist Manifesto\nQ: What lake can be found on the [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mborder of Vermont and New York?, A: Lake Champlain\nQ: The UK\'s longest [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNational Trail, what path stretches 630 miles between Minehead and Poole [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mHarbour?, A: SOUTH WEST COAST\nQ: In the culinary world, what word is used for [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe edible offal of a fowl, typically including the heart, gizzard and liver?, [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mA: Giblets\nQ: Who was the first Briton to hold a world javelin record, A: [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFatima Whitbread\nQ: The traditional \'Daily rum ration\' was ended in what [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33myear?, A: 1970\nQ: Charlotte, TJ\'s, Adelphi, Barfly; Joiners, and Forum [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mare/were names in what UK market sector?, A: Music\nQ: His debut album [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'Disc-Overy\' was released in 2010. By what stage-name id Patrick Chukwuemeka [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mOkogwu better known?, A: \'TINIE TEMPAH\'\nQ: Traitor\'s Gate is part of which [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbuilding?, A: Tower of London\nQ: "What name is given to the maxim ""employees [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtend to rise to their level of incompetence.""?", A: Peter Principle\nQ: Which [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAsian city\'s international airport is built at the mouth of the Tama-gawa?, A: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTOKYO\nQ: Which singer made the news in September 2009 when Muslim groups [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mprotested that her first concert in Malaysia should be cancelled for a second [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtime?, A: Beyonc\nQ: Louis Reard created which two-piece item of clothing in [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1946?, A: Bikini\nQ: What name is given to a substance that accelerates a [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mchemical reaction without itself being affected?, A: CATALYST\nQ: In the 1904 [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mOlympics, how many of the 23 track and field titles were won by Americans?, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m21\nQ: The largest known volcano in our solar system is on which planet?, A: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMars\nQ: Who is the author of the Twilight series of best-selling books?, A: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mStephenie Meyer\nQ: What radio station do you find at 1090 on your local AM [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mdial?, A: KPTK\nQ: What is the title of the 2009 biopic film directed by Sam [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTaylor-Wood about the early life of John Lennon, A: Nowhere Boy\nQ: Which [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mvolcano in Tanzania is the highest mountain in Africa?, A: Kilimanjaro\nQ: What [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwas the name of the ferry in the Zeebrugge disaster of 1987, A: Herald of Free [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEnterprise\nQ: Which French racehorse, which won the Derby and Prix de I’Arc de [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTriomphe in 1965, was the highest rated horse by Timeform until Frankel’s [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mperformances in 2012?, A: Sea Bird\nQ: What did Peter Carl Fabergé famously [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmake?, A: Fabergé Eggs\nQ: What board game for two players is known as wiq in [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mChinese and baduk in Korean?, A: Go\nQ: What does the Unix Time system do?, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCounts the seconds that have elapsed since Coordinated Universal Time was [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mestablished on 1/1/1970\nQ: In the 2005 Julian Barnes novel ‘Arthur and George’,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwho is Arthur?, A: Arthur Conan Doyle\nQ: What nation invented the kilt?, A: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mIreland\nQ: According to Greek myth, who was the wife of Odysseus, celebrated [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfor her faithfulness to him during his twenty year absence?, A: PENELOPE\nQ: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAnnual global production [0m[1;33m([0m[33mearly 2000s[0m[1;33m)[0m[33m of rough diamonds is about?, A: 26 [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtonnes/metric tons\nQ: Mycology is the study of what?, A: Fungi\nQ: What is the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mappropriate name of the craft which crashed into Mercury in April?, A: [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMessenger\nQ: In which English town is the Georgian colonnade called the [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPantiles?, A: [0m[1;33m([0m[33mROYAL[0m[1;33m)[0m[33m TUNBRIDGE WELLS\nQ: The youngest gold medalist for team GB[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mat the 2012 Olympics, Jade Jones, won in which sport?, A: TAEKWANDO\nQ: Which [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mword can go before Work, Guard and Dog to make three other words?, A: Fire\nQ: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhich British film, starring Ralph Fiennes, won nine Oscars in 1997?, A: The [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEnglish Patient\nQ: Where is Petra, an archaeological site with rock-cut [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33marchitecture and designated a World Heritage Site 1985, that was built by the [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mNabataeans as their capital city around 100 BC?, A: Jordan\nQ: What name given [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mto an autumn full moon in the northern hemisphere alludes to the brightness of [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe night sky that aids the shooting of migrating birds?, A: Hunter\'s moon\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAdi Dassler founded the Adidas company, which company was founded by his brother[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mRudolf in 1948?, A: Puma\nQ: In December 1965, who became President of the [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPhilippines?, A: Ferdinand Marcos\nQ: A holiday on 25 March in Greece celebrates[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe final recognition of Greece as an independent nation following the Greek War[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof Independence against the Ottoman Empire. What year did this happen?, A: [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1832\nQ: The painting \'Faithful Unto Death\' can be found in Liverpool\'s [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWalker Art Gallery. Who painted it?, A: SIR EDWARD JOHN POYNTER\nQ: What was the[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mname of the alliance of trading cities and their guilds, each with their own law[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msystem and with armies for mututal aid, that established and maintained a trade [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmonopoly along the coast of Northern Europe, from the Baltic to the North Sea [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand inland, from the 13th to 17th centuries?, A: Hanseatic League\nQ: What [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcolour is pistachio flavoured ice cream?, A: Green\nQ: Released in 1994, [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'Objects In The Rear View Mirror May Appear Closer Than They Are\' is the hit [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msingle with the longest un-bracketed title in UK chart history. Who sang it?, A:[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMEATLOAF\nQ: "Who wrote the nonsense poem ""Jabberwocky""?", A: Lewis [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCarroll\nQ: Whose first husband was a policeman called Jim Dougherty?, A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMARILYN MONROE\nQ: In 2012 which former Liberian president was found guilty of [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcrimes against humanity?, A: Charles Taylor\nQ: Which capital city is served by [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mArlanda Airport, A: Stockholm\nQ: Who won the \'Oscar\' for Best Actress in the [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1950\'s film\'Born Yesterday\'?, A: JUDY HOLLIDAY\nQ: Which Cambridge College [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwas attended by Anthony Blunt, Kim Philby and Guy Burgess?, A: TRINITY\nQ: "Who [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mpublished ""A Book of Nonsense"" [0m[1;33m([0m[33ma volume of limericks that went through three [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33meditions[0m[1;33m)[0m[33m in 1846, ""The History of the Seven Families of the Lake [0m              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPipple-Popple"" in 1865, and ""The Owl and the Pussycat"" in 1867?", A: Edward [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLear\nQ: Which National Trust property in Wiltshire was once owned by William [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mHenry Fox-Talbot the pioneer of photography?, A: Lacock Abbey\nQ: Which 1960 [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfilm is based on the 1954 film ‘Seven Samurai’?, A: The Magnificent Seven\nQ: [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWho was US Attorney General from January 1961 until September 1964 and a Senator[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfor New York from January 1965 until June 1968?, A: Robert Kennedy\nQ: Who was [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mon the English throne in 1400?, A: Henry 4th\nQ: What is next in the sequence: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLima, Quito, Bogota...?, A: Caracas\nQ: Who on television is the \'Idiot [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAbroad\'?, A: KARL PILKINGTON\nQ: "In England, in the first half of the [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtwentieth century, a ""vesta"" was a common term for a type of what?", A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMatch\nQ: Damascus is the capital of which country?, A: Syria\nQ: Across Eastern[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEurope, the Middle East and parts of Asia, what are known as keftes or kufta, [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand similar words derived from Persian, kuftan, meaning beat or grind?, A: [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMeatballs\nQ: "Colton Harris Moore, the 6\'5"" American teenager who made the [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mnews because he stole a boat and a plane, acquired what nickname because of his [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlack of footwear?", A: The Barefoot Bandit\nQ: What animals does a mahout work [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwith?, A: Elephants\nQ: If it was Phil Mickelson in 2006, Zach Johnson in 2007, [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand Trevor Immelman in 2008, who was it in 2009?, A: Angel Cabrera\nQ: Which [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmediaeval author wrote The Canterbury Tales, A: Geoffrey Chaucer\nQ: Who founded[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe \'London Philharmonic Orchestra\' in 1931?, A: Sir Thomas Beecham\nQ: What [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mis an open plane curve formed by the intersection of a cone with a plane [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mparallel to its side, resembling the path of a projectile under the action of [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mgravity?, A: Parabola\nQ: What was the Russian City of Nizhny Novgorod called [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mbetween 1932 and 1990?, A: GORKY\nQ: In which English county was former British [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPrime minister Margaret Thatcher born?, A: Lincolnshire\nQ: What number shirt [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mdid England rugby union player Jonny Wilkinson wear in the 2011 World Cup?, A: [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m10\nQ: Author Alex Haley, born on Aug 11, 1921, wrote what epic story of his [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mfamily origins, later to be made a rather popular mini-series?, A: Roots: The [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mSaga of an American Family\nQ: Which famous Englishman had a cat called Hodge [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich he fed on oysters?, A: Dr Sam Johnson\nQ: In which county will you find [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFountains abbey and Studley Water Gardens?, A: North Yorkshire\nQ: In the [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCommonwealth games in Delhi, which British athlete won the mens 200m gold [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmedal?, A: Leon Baptiste\nQ: To ‘Defenestrate’ is to throw something or someone [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mout of what?, A: A window\nQ: "What is the literal meaning of the French [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mexpression ""Son et Lumiere""?", A: """SOUND AND LIGHT"""\nQ: The journal of [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwhich Amsterdam schoolgirl was first published in 1947 under the title The Diary[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mof a Young Girl?, A: Anne Frank\nQ: Which single word connects \'The Spanish [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mArmada, and the TV series \'The Worker\'?, A: DRAKE\nQ: Which premiership [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmanager upset Louis Van Gaal in February 2015, when he described his team as [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlong ball united?, A: Sam Allardyce\nQ: In which novel does Michael Henchard [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msell his wife and child for 5 guineas?, A: The Mayor of Casterbridge\nQ: Which [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mleader of a British coalition Government became the first Earl of Dwfor?, A: [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mDAVID LLOYD-GEORGE\nQ: Ben Collins was \'outed\' in January 2009 as which [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmysterious TV character?, A: The Stig\nQ: The big-selling country and western [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mhit song, notably by Elvis Presley in 1957, is \'[0m[1;33m([0m[33mWhat?[0m[1;33m)[0m[33m Christmas\'?, A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mBlue\nQ: The gravesite of what American writer, buried in Baltimore, is [0m         [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmysteriously visited every January 19th, to receive a toast of cognac and 3 [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mroses?, A: Edgar Allen Poe\nQ: On a clothing label a cross through what shape [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmeans \'Do Not Dry Clean\'?, A: CIRCLE\nQ: Who, in May 2006 when aged 17 years [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mand 75 days, became the youngest footballer to play for England?, A: Theo [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWalcott\nQ: Which capital city is known as Praha by its inhabitants?, A: [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPRAGUE\nQ: The assassination of Salvatore Maragano led to a major change in what[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33morganisation?, A: New York mafia\nQ: The Song of Simeon canticle is also known [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mby which Latin name?, A: Nunc Dimittis\nQ: What name was collectively given to [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe sons of Poseidon, who dwelt with him at the bottom of the sea?, A: [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTritons\nQ: Who played the sergeant in Carry On Sergeant?, A: William [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mHartnell\nQ: On what date does St. David’s Day fall?, A: March 1st\nQ: What is [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe imperial distance of a marathon race?, A: 26 miles, 385 yards\nQ: Which [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33misland group in the South Atlantic was once known as the Sebald Islands?, A: The[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFalkland Islands\nQ: The Italian cheese called dolcelatte translates into [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mEnglish as what?, A: Sweet milk\nQ: Which mediaeval author wrote The Canterbury [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTales, A: Geoffrey Chaucer\nQ: What is the pleasant activity of osculation?, A: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mKissing\nQ: Canal+ TV is based in which country?, A: France\nQ: What was the [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcurrency of the Netherlands from the 17th century until 2002, A: Guilder\nQ: Who[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mduetted with Aretha Franklin on Sisters Are Doing It For Themselves, A: Annie [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLennox\nQ: What is stevia a substitute for?, A: Sugar\nQ: Which element is mixed[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mwith gold to make red gold?, A: Copper\nQ: Why are Angel Falls, Venezuela, so [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcalled?, A: They were discovered by James Angel\nQ: Which builder of steam [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mengines formed a successful partnership with Matthew Boulton?, A: James Watt\n>,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<NO RELEVANT INFORMATION>, <0.90>, <> <17>, <Here are some trivia questions and [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33manswers for you to process. Please extract all of the answers in json form as a [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33msingle message: E.g [0m[1;33m[[0m[33m"answer 1", "answer 2", ...[0m[1;33m][0m[33m\nQ: In which year was the 50p [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mcoin introduced into circulation in Britain?, A: 1969\nQ: If you were eating a [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m\'Knickerbocker Glory\' - What would you be eating?, A: An ice-cream sundae\nQ: [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mWhat is the ocean current that flows from Florida to Europe?, A: Gulf Stream\nQ:[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mA bet of Manqué at roulette covers which group of numbers?, A: 1–18\nQ: By which[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtreaty of 1713 did Spain cede Gibraltar and Minorca to Great Britain?, A: [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mUtrecht\n>, <[0m[1;33m[[0m[33m"1969", "An ice-cream sundae", "Gulf Stream", "1–18", "Utrecht"[0m[1;33m][0m[33m>,[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<0.89>, <> <15>, <Here are some trivia questions and answers for you to process.[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPlease extract all of the answers in json form as a single message: E.g [0m[1;33m[[0m[33m"answer[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m1", "answer 2", ...[0m[1;33m][0m[33m\nQ: What is a nectarine a cross between, A: None. The [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mnectarine is a smooth skinned variety of the peach\n>, <Here is the [0m             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33manswer:\n\n[0m[1;33m[[0m[33m"Palace of Versailles", "Fingerprints", "Farsi", "HOBSON\'S CHOICE",[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"BLACK EYED PEAS", "Fiat", "BISHOP OF ROCHESTER", "Cherry", "British Airways", [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"THE GREAT GATSBY", "Route 66", "Gulf of Aden", "IDRIS I", "Newcastle upon [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mTyne", "BLEAK HOUSE", "Benjamin Franklyn", "First daily newspaper", "Great [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mPyramid of Giza built around 2500 BC", "Rock Follies", "PHIL ARCHER", "The [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mAdventures of Asterix", "MARK WALTERS", "Dublin", "Daniel O’Connell", "Nemesis",[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Hare", "TWELFTH NIGHT", "Joshua Tree National Park", "CHICAGO", "Argentina", [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Everest", "Perigee", "ENDYMION [0m[1;33m([0m[33mKeats[0m[1;33m)[0m[33m", "HOTNESS OF CHILI PEPPERS", "TESCO", [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Queen Elizabeth I", "Pig", "Warren Beatty", "Turkey", "Doctor Who", "Runcorn", [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"London to Brighton Veteran Car Run", "The Communist Manifesto", "Lake [0m          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mChamplain", "SOUTH WEST COAST", "Giblets", "Fatima Whitbread", "1970", "Music", [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"\'TINIE TEMPAH", "Tower of London", "Peter Principle", "TOKYO", "Beyonc", [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Bikini", "CATALYST", "21", "Mars", "Stephenie Meyer", "KPTK", "Nowhere Boy", [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Kilimanjaro", "Herald of Free Enterprise", "Sea Bird", "Fabergé Eggs", "Go", [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Counts the seconds that have elapsed since Coordinated Universal Time was [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mestablished on 1/1/1970", "Arthur Conan Doyle", "Ireland", "PENELOPE", "26 [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mtonnes/metric tons", "Fungi", "Messenger", "[0m[1;33m([0m[33mROYAL[0m[1;33m)[0m[33m TUNBRIDGE WELLS", [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"TAEKWANDO", "Fire", "The English Patient", "Jordan", "Hunter\'s moon", "Puma", [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Ferdinand Marcos", "1832", "SIR EDWARD JOHN POYNTER", "Hanseatic League", [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Green", "MEATLOAF", "Lewis Carroll", "MARILYN MONROE", "Charles Taylor", [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Stockholm", "JUDY HOLLIDAY", "TRINITY", "Edward Lear", "Lacock Abbey", "The [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mMagnificent Seven", "Robert Kennedy", "Henry 4th", "Caracas", "KARL PILKINGTON",[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Match", "Syria", "Meatballs", "The Barefoot Bandit", "Elephants", "Angel [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mCabrera", "Geoffrey Chaucer", "Sir Thomas Beecham", "Parabola", "GORKY", [0m        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Lincolnshire", "10", "Roots: The Saga of an American Family", "Dr Sam Johnson",[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"North Yorkshire", "Leon Baptiste", "Window", """SOUND AND LIGHT""", "Anne [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mFrank", "DRAKE", "Sam Allardyce", "The Mayor of Casterbridge", "DAVID [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mLLOYD-GEORGE", "The Stig", "Blue", "Edgar Allen Poe", "Circle", "Theo Walcott", [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"PRAGUE", "New York mafia", "Nunc Dimittis", "Tritons", "William Hartnell", [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"March 1st", "26 miles, 385 yards", "The Falkland Islands", "Sweet milk", [0m       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Geoffrey Chaucer", "Kissing", "France", "Guilder", "Annie Lennox", "Sugar", [0m    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m"Copper", "They were discovered by James Angel", "Copper", "James Watt"[0m[1;33m][0m[33m>, [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<0.83>, <> <2>, <I am going to subject you to a Long-Term Memory benchmark. In [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe following, I will be giving you different kinds of information and I expect [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33myou to answer extremely briefly, only providing the responses that you are [0m      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mrequired to provide. Otherwise, provide just short confirmations. Understood?>, [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33m<CONFIRMED>, <0.77>, <[0m[1;33m>[0m[33m\n\n    Your task:\n\n    1. Assess if the retrieved [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmemories contain ANY relevant information to the query.\n    2. If NO relevant [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33minformation exists, respond ONLY with: "NO RELEVANT INFORMATION"\n    3. If [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mrelevant information exists, provide a brief, bullet-point summary of ONLY the [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mmost pertinent points. Be extremely concise.\n    4. Pay special attention to [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mlinked memories and their relevance to the current query.\n\n    Your response [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mshould either be "NO RELEVANT INFORMATION" or a brief, focused summary. Exclude [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33many explanation or elaboration.'[0m[1m}[0m[1m][0m, [33mmodel[0m=[33m'llama3-70b-8192'[0m[1m)[0m                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m    kwargs = [1m{[0m                                                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   [0m[33m'messages'[0m: [1m[[0m                                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   [0m[1m{[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense administrator at[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33mthe core of a sophistic'[0m+[94m598[0m                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   [0m[1m}[0m,                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   [0m[1m{[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers for [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [33myou to process. Please ext'[0m+[94m24783[0m                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   │   [0m[1m}[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   [0m[1m][0m,                                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [2m│   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             [1m}[0m                                                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m      loop = [1m<[0m[1;95muvloop.Loop[0m[39m [0m[33mrunning[0m[39m=[0m[94mTrue[0m[39m [0m[33mclosed[0m[39m=[0m[94mFalse[0m[39m [0m[33mdebug[0m[39m=[0m[94mFalse[0m[1m>[0m                              [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/usr/local/lib/python3.12/concurrent/futures/[0m[1;33mthread.py[0m:[94m58[0m in [92mrun[0m                                 [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m 55 [0m[2m│   │   │   [0m[94mreturn[0m                                                                         [31m│[0m
[31m│[0m   [2m 56 [0m[2m│   │   [0m                                                                                   [31m│[0m
[31m│[0m   [2m 57 [0m[2m│   │   [0m[94mtry[0m:                                                                               [31m│[0m
[31m│[0m [31m❱ [0m 58 [2m│   │   │   [0mresult = [96mself[0m.fn(*[96mself[0m.args, **[96mself[0m.kwargs)                                    [31m│[0m
[31m│[0m   [2m 59 [0m[2m│   │   [0m[94mexcept[0m [96mBaseException[0m [94mas[0m exc:                                                       [31m│[0m
[31m│[0m   [2m 60 [0m[2m│   │   │   [0m[96mself[0m.future.set_exception(exc)                                                 [31m│[0m
[31m│[0m   [2m 61 [0m[2m│   │   │   [0m[2m# Break a reference cycle with the exception 'exc'[0m                             [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m─[0m[33m locals [0m[33m──[0m[33m─╮[0m                                                                                  [31m│[0m
[31m│[0m [33m│[0m self = [94mNone[0m [33m│[0m                                                                                  [31m│[0m
[31m│[0m [33m╰─────────────╯[0m                                                                                  [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/venv/lib/python3.12/site-packages/groq/resources/chat/[0m[1;33mcompletions.py[0m:[94m289[0m in [92mcreate[0m          [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m286 [0m[2m│   │     [0m                                                                                 [31m│[0m
[31m│[0m   [2m287 [0m[2;33m│   │     [0m[33mtimeout: Override the client-level default timeout for this request, in second[0m   [31m│[0m
[31m│[0m   [2m288 [0m[2;33m│   │   [0m[33m"""[0m                                                                                [31m│[0m
[31m│[0m [31m❱ [0m289 [2m│   │   [0m[94mreturn[0m [96mself[0m._post(                                                                 [31m│[0m
[31m│[0m   [2m290 [0m[2m│   │   │   [0m[33m"[0m[33m/openai/v1/chat/completions[0m[33m"[0m,                                                 [31m│[0m
[31m│[0m   [2m291 [0m[2m│   │   │   [0mbody=maybe_transform(                                                          [31m│[0m
[31m│[0m   [2m292 [0m[2m│   │   │   │   [0m{                                                                          [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m          extra_body = [94mNone[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       extra_headers = [94mNone[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         extra_query = [94mNone[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m   frequency_penalty = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       function_call = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           functions = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m          logit_bias = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            logprobs = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m          max_tokens = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            messages = [1m[[0m                                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   [0m[1m{[0m                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   │   [0m[33m'role'[0m: [33m'system'[0m,                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [33madministrator at the core of a sophistic'[0m+[94m598[0m                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   [0m[1m}[0m,                                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   [0m[1m{[0m                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   │   [0m[33m'role'[0m: [33m'user'[0m,                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers [0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [33mfor you to process. Please ext'[0m+[94m24783[0m                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [2m│   [0m[1m}[0m                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                       [1m][0m                                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m               model = [33m'llama3-70b-8192'[0m                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                   n = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m parallel_tool_calls = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m    presence_penalty = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m     response_format = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                seed = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                self = [1m<[0m[1;95mgroq.resources.chat.completions.Completions[0m[39m object at [0m[94m0x7fe5e77993d0[0m[1m>[0m [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                stop = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              stream = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         temperature = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m             timeout = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m         tool_choice = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m               tools = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m        top_logprobs = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m               top_p = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                user = NOT_GIVEN                                                              [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/venv/lib/python3.12/site-packages/groq/[0m[1;33m_base_client.py[0m:[94m1225[0m in [92mpost[0m                         [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m1222 [0m[2m│   │   [0mopts = FinalRequestOptions.construct(                                             [31m│[0m
[31m│[0m   [2m1223 [0m[2m│   │   │   [0mmethod=[33m"[0m[33mpost[0m[33m"[0m, url=path, json_data=body, files=to_httpx_files(files), **opti  [31m│[0m
[31m│[0m   [2m1224 [0m[2m│   │   [0m)                                                                                 [31m│[0m
[31m│[0m [31m❱ [0m1225 [2m│   │   [0m[94mreturn[0m cast(ResponseT, [96mself[0m.request(cast_to, opts, stream=stream, stream_cls=str  [31m│[0m
[31m│[0m   [2m1226 [0m[2m│   [0m                                                                                      [31m│[0m
[31m│[0m   [2m1227 [0m[2m│   [0m[94mdef[0m [92mpatch[0m(                                                                            [31m│[0m
[31m│[0m   [2m1228 [0m[2m│   │   [0m[96mself[0m,                                                                             [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m       body = [1m{[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'messages'[0m: [1m[[0m                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m{[0m                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense administrator [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33mat the core of a sophistic'[0m+[94m598[0m                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m}[0m,                                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m{[0m                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers for [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33myou to process. Please ext'[0m+[94m24783[0m                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m}[0m                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[1m][0m,                                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m,                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'frequency_penalty'[0m: NOT_GIVEN,                                             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'function_call'[0m: NOT_GIVEN,                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'functions'[0m: NOT_GIVEN,                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'logit_bias'[0m: NOT_GIVEN,                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'logprobs'[0m: NOT_GIVEN,                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'max_tokens'[0m: NOT_GIVEN,                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'n'[0m: NOT_GIVEN,                                                             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m'parallel_tool_calls'[0m: NOT_GIVEN,                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33m...[0m +[94m11[0m                                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [1m}[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m    cast_to = [1m<[0m[1;95mclass[0m[39m [0m[33m'groq.types.chat.chat_completion.ChatCompletion'[0m[1m>[0m                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m      files = [94mNone[0m                                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m    options = [1m{[0m[1m}[0m                                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       opts = [1;35mFinalRequestOptions[0m[1m([0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mmethod[0m=[33m'post'[0m,                                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33murl[0m=[33m'/openai/v1/chat/completions'[0m,                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mparams[0m=[1m{[0m[1m}[0m,                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mheaders[0m=[35mNOT_GIVEN[0m,                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mmax_retries[0m=[35mNOT_GIVEN[0m,                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mtimeout[0m=[35mNOT_GIVEN[0m,                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mfiles[0m=[94mNone[0m,                                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33midempotency_key[0m=[94mNone[0m,                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mpost_parser[0m=[35mNOT_GIVEN[0m,                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mjson_data[0m=[1m{[0m                                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[33m'messages'[0m: [1m[[0m                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[1m{[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33madministrator at the core of a sophistic'[0m+[94m598[0m                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[1m}[0m,                                                                  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[1m{[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and answers [0m  [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [33mfor you to process. Please ext'[0m+[94m24783[0m                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   │   [0m[1m}[0m                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[1m][0m,                                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   │   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m                                              [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[1m}[0m,                                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [2m│   [0m[33mextra_json[0m=[94mNone[0m                                                             [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              [1m)[0m                                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       path = [33m'/openai/v1/chat/completions'[0m                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m       self = [1m<[0m[1;95mgroq.Groq[0m[39m object at [0m[94m0x7fe589c1a300[0m[1m>[0m                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m     stream = [94mFalse[0m                                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m stream_cls = groq.Stream[1m[[0mgroq.types.chat.chat_completion_chunk.ChatCompletionChunk[1m][0m          [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/venv/lib/python3.12/site-packages/groq/[0m[1;33m_base_client.py[0m:[94m920[0m in [92mrequest[0m                       [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m 917 [0m[2m│   │   [0mstream: [96mbool[0m = [94mFalse[0m,                                                             [31m│[0m
[31m│[0m   [2m 918 [0m[2m│   │   [0mstream_cls: [96mtype[0m[_StreamT] | [94mNone[0m = [94mNone[0m,                                         [31m│[0m
[31m│[0m   [2m 919 [0m[2m│   [0m) -> ResponseT | _StreamT:                                                            [31m│[0m
[31m│[0m [31m❱ [0m 920 [2m│   │   [0m[94mreturn[0m [96mself[0m._request(                                                             [31m│[0m
[31m│[0m   [2m 921 [0m[2m│   │   │   [0mcast_to=cast_to,                                                              [31m│[0m
[31m│[0m   [2m 922 [0m[2m│   │   │   [0moptions=options,                                                              [31m│[0m
[31m│[0m   [2m 923 [0m[2m│   │   │   [0mstream=stream,                                                                [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m           cast_to = [1m<[0m[1;95mclass[0m[39m [0m[33m'groq.types.chat.chat_completion.ChatCompletion'[0m[1m>[0m                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           options = [1;35mFinalRequestOptions[0m[1m([0m                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mmethod[0m=[33m'post'[0m,                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33murl[0m=[33m'/openai/v1/chat/completions'[0m,                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mparams[0m=[1m{[0m[1m}[0m,                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mheaders[0m=[35mNOT_GIVEN[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mmax_retries[0m=[35mNOT_GIVEN[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mtimeout[0m=[35mNOT_GIVEN[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mfiles[0m=[94mNone[0m,                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33midempotency_key[0m=[94mNone[0m,                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mpost_parser[0m=[35mNOT_GIVEN[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mjson_data[0m=[1m{[0m                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'messages'[0m: [1m[[0m                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m{[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33madministrator at the core of a sophistic'[0m+[94m598[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m}[0m,                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m{[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33manswers for you to process. Please ext'[0m+[94m24783[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m}[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[1m][0m,                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m}[0m,                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mextra_json[0m=[94mNone[0m                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [1m)[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m remaining_retries = [94mNone[0m                                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              self = [1m<[0m[1;95mgroq.Groq[0m[39m object at [0m[94m0x7fe589c1a300[0m[1m>[0m                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            stream = [94mFalse[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m        stream_cls = groq.Stream[1m[[0mgroq.types.chat.chat_completion_chunk.ChatCompletionChunk[1m][0m   [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [2;33m/app/venv/lib/python3.12/site-packages/groq/[0m[1;33m_base_client.py[0m:[94m1018[0m in [92m_request[0m                     [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m   [2m1015 [0m[2m│   │   │   │   [0merr.response.read()                                                       [31m│[0m
[31m│[0m   [2m1016 [0m[2m│   │   │   [0m                                                                              [31m│[0m
[31m│[0m   [2m1017 [0m[2m│   │   │   [0mlog.debug([33m"[0m[33mRe-raising status error[0m[33m"[0m)                                          [31m│[0m
[31m│[0m [31m❱ [0m1018 [2m│   │   │   [0m[94mraise[0m [96mself[0m._make_status_error_from_response(err.response) [94mfrom[0m [94mNone[0m           [31m│[0m
[31m│[0m   [2m1019 [0m[2m│   │   [0m                                                                                  [31m│[0m
[31m│[0m   [2m1020 [0m[2m│   │   [0m[94mreturn[0m [96mself[0m._process_response(                                                    [31m│[0m
[31m│[0m   [2m1021 [0m[2m│   │   │   [0mcast_to=cast_to,                                                              [31m│[0m
[31m│[0m                                                                                                  [31m│[0m
[31m│[0m [33m╭─[0m[33m──────────────────────────────────────────[0m[33m locals [0m[33m──────────────────────────────────────────[0m[33m─╮[0m [31m│[0m
[31m│[0m [33m│[0m           cast_to = [1m<[0m[1;95mclass[0m[39m [0m[33m'groq.types.chat.chat_completion.ChatCompletion'[0m[1m>[0m                 [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            kwargs = [1m{[0m[1m}[0m                                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           options = [1;35mFinalRequestOptions[0m[1m([0m                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mmethod[0m=[33m'post'[0m,                                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33murl[0m=[33m'/openai/v1/chat/completions'[0m,                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mparams[0m=[1m{[0m[1m}[0m,                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mheaders[0m=[35mNOT_GIVEN[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mmax_retries[0m=[35mNOT_GIVEN[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mtimeout[0m=[35mNOT_GIVEN[0m,                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mfiles[0m=[94mNone[0m,                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33midempotency_key[0m=[94mNone[0m,                                                [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mpost_parser[0m=[35mNOT_GIVEN[0m,                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mjson_data[0m=[1m{[0m                                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'messages'[0m: [1m[[0m                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m{[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'role'[0m: [33m'system'[0m,                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'content'[0m: [33m'You are a highly efficient, no-nonsense [0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33madministrator at the core of a sophistic'[0m+[94m598[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m}[0m,                                                           [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m{[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'role'[0m: [33m'user'[0m,                                          [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   │   [0m[33m'content'[0m: [33m'QUERY: Here are some trivia questions and [0m   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [33manswers for you to process. Please ext'[0m+[94m24783[0m                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   │   [0m[1m}[0m                                                            [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[1m][0m,                                                               [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   │   [0m[33m'model'[0m: [33m'llama3-70b-8192'[0m                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[1m}[0m,                                                                   [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [2m│   [0m[33mextra_json[0m=[94mNone[0m                                                      [33m│[0m [31m│[0m
[31m│[0m [33m│[0m                     [1m)[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m remaining_retries = [94mNone[0m                                                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           request = [1m<[0m[1;35mRequest[0m[1;39m([0m[33m'POST'[0m[39m, [0m[33m'https://api.groq.com/openai/v1/chat/completions'[0m[1;39m)[0m[1m>[0m     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m          response = [1m<[0m[1;95mResponse[0m[39m [0m[1;39m[[0m[94m429[0m[39m Too Many Requests[0m[1;39m][0m[1m>[0m                                       [33m│[0m [31m│[0m
[31m│[0m [33m│[0m           retries = [94m2[0m                                                                        [33m│[0m [31m│[0m
[31m│[0m [33m│[0m              self = [1m<[0m[1;95mgroq.Groq[0m[39m object at [0m[94m0x7fe589c1a300[0m[1m>[0m                                     [33m│[0m [31m│[0m
[31m│[0m [33m│[0m            stream = [94mFalse[0m                                                                    [33m│[0m [31m│[0m
[31m│[0m [33m│[0m        stream_cls = groq.Stream[1m[[0mgroq.types.chat.chat_completion_chunk.ChatCompletionChunk[1m][0m   [33m│[0m [31m│[0m
[31m│[0m [33m╰──────────────────────────────────────────────────────────────────────────────────────────────╯[0m [31m│[0m
[31m╰──────────────────────────────────────────────────────────────────────────────────────────────────╯[0m
[1;91mRateLimitError: [0mError code: [1;36m429[0m - [1m{[0m[32m'error'[0m: [1m{[0m[32m'message'[0m: [32m'Rate limit reached for model [0m
[32m`llama3-70b-8192` in organization `org_01j2kdfmb1f3r9h6frjpjqadwf` on tokens per minute [0m[32m([0m[32mTPM[0m[32m)[0m[32m: Limit[0m
[32m6000, Used 5832, Requested 6411. Please try again in 1m2.426s. Visit [0m
[32mhttps://console.groq.com/docs/rate-limits for more information.'[0m, [32m'type'[0m: [32m'tokens'[0m, [32m'code'[0m: 
[32m'rate_limit_exceeded'[0m[1m}[0m[1m}[0m

2024-07-12 16:53:20 [info     ] Query processed successfully
INFO:     172.18.0.1:55792 - "POST /query HTTP/1.1" 200 OK
2024-07-12 16:53:20 [info     ] Received query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: "Which famous speech of 1968 began with the words ""The supreme function of statesmanship is to provide against preventative evils""?", A: 'RIVERS OF BLOOD' SPEECH BY ENOCH POWELL

2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.0033614635467529297 function=get_linked_memories
2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.003760814666748047 function=get_linked_memories
2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.0038299560546875 function=get_linked_memories
2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.005018711090087891 function=get_linked_memories
2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.005888462066650391 function=get_linked_memories
2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.00480198860168457 function=get_linked_memories
2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.00560450553894043 function=get_linked_memories
2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.006140947341918945 function=get_linked_memories
2024-07-12 16:53:20 [info     ] get_linked_memories executed   execution_time=0.006331443786621094 function=get_linked_memories
2024-07-12 16:53:20 [info     ] retrieve_relevant_memories executed execution_time=0.25536584854125977 function=retrieve_relevant_memories
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x8e322450c836580d5ba22106885bfe49",
        "span_id": "0x5bc8c9b96fe3fd1e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xaf4d40cec2084a65",
    "start_time": "2024-07-12T16:53:19.420035Z",
    "end_time": "2024-07-12T16:53:20.446728Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x8e322450c836580d5ba22106885bfe49",
        "span_id": "0x3a8cf5760556294d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xaf4d40cec2084a65",
    "start_time": "2024-07-12T16:53:20.446905Z",
    "end_time": "2024-07-12T16:53:20.447199Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x8e322450c836580d5ba22106885bfe49",
        "span_id": "0x4e20e3078e23d583",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xaf4d40cec2084a65",
    "start_time": "2024-07-12T16:53:20.447285Z",
    "end_time": "2024-07-12T16:53:20.447339Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x8e322450c836580d5ba22106885bfe49",
        "span_id": "0xaf4d40cec2084a65",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:53:19.419584Z",
    "end_time": "2024-07-12T16:53:20.447352Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 55792,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http receive",
    "context": {
        "trace_id": "0x2ea145319bb561fba0e032e8c1158f36",
        "span_id": "0x38a4c51eff3f34e7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xdf5dc3b43e55d524",
    "start_time": "2024-07-12T16:53:20.461549Z",
    "end_time": "2024-07-12T16:53:20.461730Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.request"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:50740 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x222300f1614d2eef68509e720c2f4483",
        "span_id": "0x2d8d6b312a7e3660",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd1f003be90774c9a",
    "start_time": "2024-07-12T16:53:48.029034Z",
    "end_time": "2024-07-12T16:53:48.029220Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x222300f1614d2eef68509e720c2f4483",
        "span_id": "0x4c7ec6c118a1c530",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd1f003be90774c9a",
    "start_time": "2024-07-12T16:53:48.029261Z",
    "end_time": "2024-07-12T16:53:48.029285Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x222300f1614d2eef68509e720c2f4483",
        "span_id": "0xd1f003be90774c9a",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:53:48.028420Z",
    "end_time": "2024-07-12T16:53:48.029290Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 50740,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:60846 - "GET /health HTTP/1.1" 200 OK
2024-07-12 16:54:18 [info     ] process_query executed         execution_time=58.03483319282532 function=process_query
2024-07-12 16:54:18 [debug    ] Generated response             response=["RIVERS OF BLOOD SPEECH BY ENOCH POWELL", "Palace of Versailles", "Fingerprints", "Farsi", "HOBSON'S CHOICE", "BLACK EYED PEAS", "Fiat", "BISHOP OF ROCHESTER", "Cherry", "British Airways", "THE GREAT GATSBY", "Route 66", "Gulf of Aden", "IDRIS I", "Newcastle upon Tyne", "BLEAK HOUSE", "Benjamin Franklyn", "First daily newspaper", "Great Pyramid of Giza built around 2500 BC", "Rock Follies", "PHIL ARCHER", "The Adventures of Asterix", "MARK WALTERS", "Dublin", "Daniel O’Connell", "Nemesis", "Hare", "TWELFTH NIGHT", "Joshua Tree National Park", "CHICAGO", "Argentina", "Everest", "Perigee", "ENDYMION (Keats)", "HOTNESS OF CHILI PEPPERS", "TESCO", "Queen Elizabeth I", "Pig", "Warren Beatty", "Turkey", "Doctor Who", "Runcorn", "London to Brighton Veteran Car Run", "The Communist Manifesto", "Lake Champlain", "SOUTH WEST COAST", "Giblets", "Fatima Whitbread", "1970", "Music", "'TINIE TEMPAH", "Tower of London", "Peter Principle", "TOKYO", "Beyonc", "Bikini", "CATALYST", "21", "Mars", "Stephenie Meyer", "KPTK", "Nowhere Boy", "Kilimanjaro", "Herald of Free Enterprise", "Sea Bird", "Fabergé Eggs", "Go", "Counts the seconds that have elapsed since Coordinated Universal Time was established on 1/1/1970", "Arthur Conan Doyle", "Ireland", "PENELOPE", "26 tonnes/metric tons", "Fungi", "Messenger", "(ROYAL) TUNBRIDGE WELLS", "TAEKWANDO", "Fire", "The English Patient", "Jordan", "Hunter's moon", "Puma", "Ferdinand Marcos", "1832", "SIR EDWARD JOHN POYNTER", "Hanseatic League", "Green", "MEATLOAF", "Lewis Carroll", "MARILYN MONROE", "Charles Taylor", "Stockholm", "JUDY HOLLIDAY", "TRINITY", "Edward Lear", "Lacock Abbey", "The Magnificent Seven", "Robert Kennedy", "Henry 4th", "Caracas", "KARL PILKINGTON", "Match", "Syria", "Meatballs", "The Barefoot Bandit", "Elephants", "Angel Cabrera", "Geoffrey Chaucer", "Sir Thomas Beecham", "Parabola", "GORKY", "Lincolnshire", "10", "Roots: The Saga of an American Family", "Dr Sam Johnson", "North Yorkshire", "Leon Baptiste", "Window", """SOUND AND LIGHT""", "Anne Frank", "DRAKE", "Sam Allardyce", "The Mayor of Casterbridge", "DAVID LLOYD-GEORGE", "The Stig", "Blue", "Edgar Allen Poe", "Circle", "Theo Walcott", "PRAGUE", "New York mafia", "Nunc Dimittis", "Tritons", "William Hartnell", "March 1st", "26 miles, 385 yards", "The Falkland Islands", "Sweet milk", "Geoffrey Chaucer", "Kissing", "France", "Guilder", "Annie Lennox", "Sugar", "Copper", "They were discovered by James Angel", "Copper", "James Watt"]
2024-07-12 16:54:18 [debug    ] Saved memory for query: Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]
Q: "Which famous speech of 1968 began with the words ""The supreme function of statesmanship is to provide against preventative evils""?", A: 'RIVERS OF BLOOD' SPEECH BY ENOCH POWELL
 with result: ["RIVERS OF BLOOD SPEECH BY ENOCH POWELL", "Palace of Versailles", "Fingerprints", "Farsi", "HOBSON'S CHOICE", "BLACK EYED PEAS", "Fiat", "BISHOP OF ROCHESTER", "Cherry", "British Airways", "THE GREAT GATSBY", "Route 66", "Gulf of Aden", "IDRIS I", "Newcastle upon Tyne", "BLEAK HOUSE", "Benjamin Franklyn", "First daily newspaper", "Great Pyramid of Giza built around 2500 BC", "Rock Follies", "PHIL ARCHER", "The Adventures of Asterix", "MARK WALTERS", "Dublin", "Daniel O’Connell", "Nemesis", "Hare", "TWELFTH NIGHT", "Joshua Tree National Park", "CHICAGO", "Argentina", "Everest", "Perigee", "ENDYMION (Keats)", "HOTNESS OF CHILI PEPPERS", "TESCO", "Queen Elizabeth I", "Pig", "Warren Beatty", "Turkey", "Doctor Who", "Runcorn", "London to Brighton Veteran Car Run", "The Communist Manifesto", "Lake Champlain", "SOUTH WEST COAST", "Giblets", "Fatima Whitbread", "1970", "Music", "'TINIE TEMPAH", "Tower of London", "Peter Principle", "TOKYO", "Beyonc", "Bikini", "CATALYST", "21", "Mars", "Stephenie Meyer", "KPTK", "Nowhere Boy", "Kilimanjaro", "Herald of Free Enterprise", "Sea Bird", "Fabergé Eggs", "Go", "Counts the seconds that have elapsed since Coordinated Universal Time was established on 1/1/1970", "Arthur Conan Doyle", "Ireland", "PENELOPE", "26 tonnes/metric tons", "Fungi", "Messenger", "(ROYAL) TUNBRIDGE WELLS", "TAEKWANDO", "Fire", "The English Patient", "Jordan", "Hunter's moon", "Puma", "Ferdinand Marcos", "1832", "SIR EDWARD JOHN POYNTER", "Hanseatic League", "Green", "MEATLOAF", "Lewis Carroll", "MARILYN MONROE", "Charles Taylor", "Stockholm", "JUDY HOLLIDAY", "TRINITY", "Edward Lear", "Lacock Abbey", "The Magnificent Seven", "Robert Kennedy", "Henry 4th", "Caracas", "KARL PILKINGTON", "Match", "Syria", "Meatballs", "The Barefoot Bandit", "Elephants", "Angel Cabrera", "Geoffrey Chaucer", "Sir Thomas Beecham", "Parabola", "GORKY", "Lincolnshire", "10", "Roots: The Saga of an American Family", "Dr Sam Johnson", "North Yorkshire", "Leon Baptiste", "Window", """SOUND AND LIGHT""", "Anne Frank", "DRAKE", "Sam Allardyce", "The Mayor of Casterbridge", "DAVID LLOYD-GEORGE", "The Stig", "Blue", "Edgar Allen Poe", "Circle", "Theo Walcott", "PRAGUE", "New York mafia", "Nunc Dimittis", "Tritons", "William Hartnell", "March 1st", "26 miles, 385 yards", "The Falkland Islands", "Sweet milk", "Geoffrey Chaucer", "Kissing", "France", "Guilder", "Annie Lennox", "Sugar", "Copper", "They were discovered by James Angel", "Copper", "James Watt"]
2024-07-12 16:54:18 [info     ] Loaded corpus with 21 entries in 0.01 seconds
2024-07-12 16:54:18 [info     ] Updated indexing with 21 documents in 0.01 seconds
2024-07-12 16:54:18 [info     ] _update_indexing executed      execution_time=0.006433725357055664 function=_update_indexing
2024-07-12 16:54:18 [info     ] auto_link_memories executed    execution_time=0.013160467147827148 function=auto_link_memories
2024-07-12 16:54:18 [info     ] Memory saved                   extra={'query': 'Here are some trivia questions and answers for you to process. Please extract all of the answers in json form as a single message: E.g ["answer 1", "answer 2", ...]\nQ: "Which famous speech of 1968 began with the words ""The supreme function of statesmanship is to provide against preventative evils""?", A: \'RIVERS OF BLOOD\' SPEECH BY ENOCH POWELL\n', 'memory_id': 21}
2024-07-12 16:54:18 [info     ] save_memory executed           execution_time=0.34127330780029297 function=save_memory
2024-07-12 16:54:18 [info     ] Query processed successfully
INFO:     172.18.0.1:55796 - "POST /query HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xcc2a4120225fbd8ba132c95049904311",
        "span_id": "0xfbcce8b51f077007",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd34eb9bcf430b45e",
    "start_time": "2024-07-12T16:54:18.049056Z",
    "end_time": "2024-07-12T16:54:18.049268Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xcc2a4120225fbd8ba132c95049904311",
        "span_id": "0xe66e8a65c67adf06",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd34eb9bcf430b45e",
    "start_time": "2024-07-12T16:54:18.049313Z",
    "end_time": "2024-07-12T16:54:18.049339Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xcc2a4120225fbd8ba132c95049904311",
        "span_id": "0xd34eb9bcf430b45e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:54:18.048744Z",
    "end_time": "2024-07-12T16:54:18.049345Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 60846,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "query_processing",
    "context": {
        "trace_id": "0x2ea145319bb561fba0e032e8c1158f36",
        "span_id": "0x0e5708726f906053",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xdf5dc3b43e55d524",
    "start_time": "2024-07-12T16:53:20.462031Z",
    "end_time": "2024-07-12T16:54:18.838642Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {},
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x2ea145319bb561fba0e032e8c1158f36",
        "span_id": "0x60fb1a82542288ce",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xdf5dc3b43e55d524",
    "start_time": "2024-07-12T16:54:18.838825Z",
    "end_time": "2024-07-12T16:54:18.839030Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query http send",
    "context": {
        "trace_id": "0x2ea145319bb561fba0e032e8c1158f36",
        "span_id": "0xc2a3e93da25daafa",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xdf5dc3b43e55d524",
    "start_time": "2024-07-12T16:54:18.839068Z",
    "end_time": "2024-07-12T16:54:18.839097Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "POST /query",
    "context": {
        "trace_id": "0x2ea145319bb561fba0e032e8c1158f36",
        "span_id": "0xdf5dc3b43e55d524",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:53:20.461170Z",
    "end_time": "2024-07-12T16:54:18.839104Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "172.18.0.2:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/query",
        "http.url": "http://172.18.0.2:8000/query",
        "http.method": "POST",
        "http.server_name": "localhost:8080",
        "http.user_agent": "python-requests/2.32.3",
        "net.peer.ip": "172.18.0.1",
        "net.peer.port": 55796,
        "http.route": "/query",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:50064 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x37ebf70b6a08dcda5840e975203281d5",
        "span_id": "0x5a00d5804d639b03",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x640a9d4aa4b337b5",
    "start_time": "2024-07-12T16:54:48.070753Z",
    "end_time": "2024-07-12T16:54:48.070958Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x37ebf70b6a08dcda5840e975203281d5",
        "span_id": "0xf34205e2a30b7eb6",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x640a9d4aa4b337b5",
    "start_time": "2024-07-12T16:54:48.071001Z",
    "end_time": "2024-07-12T16:54:48.071028Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x37ebf70b6a08dcda5840e975203281d5",
        "span_id": "0x640a9d4aa4b337b5",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:54:48.070453Z",
    "end_time": "2024-07-12T16:54:48.071035Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 50064,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:49608 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x299ef815205aefb6bd576b4f6e6c813a",
        "span_id": "0xd579e1e2fde67de4",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x24ce80e4a12ae898",
    "start_time": "2024-07-12T16:55:18.092217Z",
    "end_time": "2024-07-12T16:55:18.092399Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x299ef815205aefb6bd576b4f6e6c813a",
        "span_id": "0x80697b42d960e5af",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x24ce80e4a12ae898",
    "start_time": "2024-07-12T16:55:18.092441Z",
    "end_time": "2024-07-12T16:55:18.092467Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x299ef815205aefb6bd576b4f6e6c813a",
        "span_id": "0x24ce80e4a12ae898",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:55:18.091541Z",
    "end_time": "2024-07-12T16:55:18.092473Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 49608,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:33628 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xaa7154018fb66fc9869c324b3091e46c",
        "span_id": "0x25425667bf51a242",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd13d4b47e397f8dc",
    "start_time": "2024-07-12T16:55:48.114773Z",
    "end_time": "2024-07-12T16:55:48.114954Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xaa7154018fb66fc9869c324b3091e46c",
        "span_id": "0x0c02018864b73853",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xd13d4b47e397f8dc",
    "start_time": "2024-07-12T16:55:48.115004Z",
    "end_time": "2024-07-12T16:55:48.115031Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xaa7154018fb66fc9869c324b3091e46c",
        "span_id": "0xd13d4b47e397f8dc",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:55:48.114482Z",
    "end_time": "2024-07-12T16:55:48.115037Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 33628,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:44410 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x6be5a1feff2c11dd936daa32016b5576",
        "span_id": "0x79221a41b99c20f8",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x64b359332e2ce687",
    "start_time": "2024-07-12T16:56:18.136536Z",
    "end_time": "2024-07-12T16:56:18.136739Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x6be5a1feff2c11dd936daa32016b5576",
        "span_id": "0xe38763dd1edaf064",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x64b359332e2ce687",
    "start_time": "2024-07-12T16:56:18.136788Z",
    "end_time": "2024-07-12T16:56:18.136818Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x6be5a1feff2c11dd936daa32016b5576",
        "span_id": "0x64b359332e2ce687",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:56:18.136243Z",
    "end_time": "2024-07-12T16:56:18.136825Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 44410,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:53104 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x23766a5944660c37ba8f89e2ad2b6fbe",
        "span_id": "0x7852f8011ae72aee",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x0773507525dfcaae",
    "start_time": "2024-07-12T16:56:48.157953Z",
    "end_time": "2024-07-12T16:56:48.158183Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x23766a5944660c37ba8f89e2ad2b6fbe",
        "span_id": "0xe1280c8513cae937",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x0773507525dfcaae",
    "start_time": "2024-07-12T16:56:48.158237Z",
    "end_time": "2024-07-12T16:56:48.158270Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x23766a5944660c37ba8f89e2ad2b6fbe",
        "span_id": "0x0773507525dfcaae",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:56:48.157640Z",
    "end_time": "2024-07-12T16:56:48.158278Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 53104,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:55890 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x332a5c7703b4e12487d8636a22c73bf5",
        "span_id": "0xcad8258d7aa97a23",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7e73c39cc6ae3c61",
    "start_time": "2024-07-12T16:57:18.181608Z",
    "end_time": "2024-07-12T16:57:18.181859Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x332a5c7703b4e12487d8636a22c73bf5",
        "span_id": "0x73d1161da88f3a7e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x7e73c39cc6ae3c61",
    "start_time": "2024-07-12T16:57:18.181909Z",
    "end_time": "2024-07-12T16:57:18.181940Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x332a5c7703b4e12487d8636a22c73bf5",
        "span_id": "0x7e73c39cc6ae3c61",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:57:18.181324Z",
    "end_time": "2024-07-12T16:57:18.181946Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 55890,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:46964 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x549aa614f5a159b14c8037441d22602c",
        "span_id": "0x8ca71c787f215f1e",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xf9b662cd2a07a084",
    "start_time": "2024-07-12T16:57:48.204357Z",
    "end_time": "2024-07-12T16:57:48.204544Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x549aa614f5a159b14c8037441d22602c",
        "span_id": "0x984af5ef5fce5c0d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xf9b662cd2a07a084",
    "start_time": "2024-07-12T16:57:48.204586Z",
    "end_time": "2024-07-12T16:57:48.204613Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x549aa614f5a159b14c8037441d22602c",
        "span_id": "0xf9b662cd2a07a084",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:57:48.204081Z",
    "end_time": "2024-07-12T16:57:48.204619Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 46964,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:38796 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x39dd996712e94c106880a927ee88d5fa",
        "span_id": "0x6fdb4a6915c23157",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xbb10acd93288d7e6",
    "start_time": "2024-07-12T16:58:18.227216Z",
    "end_time": "2024-07-12T16:58:18.227413Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x39dd996712e94c106880a927ee88d5fa",
        "span_id": "0x76a43764ddc838d7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xbb10acd93288d7e6",
    "start_time": "2024-07-12T16:58:18.227470Z",
    "end_time": "2024-07-12T16:58:18.227501Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x39dd996712e94c106880a927ee88d5fa",
        "span_id": "0xbb10acd93288d7e6",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:58:18.226934Z",
    "end_time": "2024-07-12T16:58:18.227508Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 38796,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:54822 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x4845fe744f898c814f781ccdf4dc94f2",
        "span_id": "0x2f21d500be41b6c9",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x1070029a91159715",
    "start_time": "2024-07-12T16:58:48.249674Z",
    "end_time": "2024-07-12T16:58:48.249872Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x4845fe744f898c814f781ccdf4dc94f2",
        "span_id": "0x35aabc176278943f",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x1070029a91159715",
    "start_time": "2024-07-12T16:58:48.249920Z",
    "end_time": "2024-07-12T16:58:48.249950Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x4845fe744f898c814f781ccdf4dc94f2",
        "span_id": "0x1070029a91159715",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:58:48.249331Z",
    "end_time": "2024-07-12T16:58:48.249963Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 54822,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:50840 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xdae6c31c7155309805f479a1b037d210",
        "span_id": "0x9a79bb7ee75589b2",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xf38a23c7214f76af",
    "start_time": "2024-07-12T16:59:18.272802Z",
    "end_time": "2024-07-12T16:59:18.272986Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xdae6c31c7155309805f479a1b037d210",
        "span_id": "0xa69a6aec7c34fb89",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xf38a23c7214f76af",
    "start_time": "2024-07-12T16:59:18.273030Z",
    "end_time": "2024-07-12T16:59:18.273056Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xdae6c31c7155309805f479a1b037d210",
        "span_id": "0xf38a23c7214f76af",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:59:18.272527Z",
    "end_time": "2024-07-12T16:59:18.273062Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 50840,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:51718 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x1f20552df55a6ee2f130ff8308ee3880",
        "span_id": "0x9d5683a94b320911",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb867f54ed6555b7f",
    "start_time": "2024-07-12T16:59:48.301716Z",
    "end_time": "2024-07-12T16:59:48.301985Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x1f20552df55a6ee2f130ff8308ee3880",
        "span_id": "0x1dec2f1fd205e354",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb867f54ed6555b7f",
    "start_time": "2024-07-12T16:59:48.302074Z",
    "end_time": "2024-07-12T16:59:48.302119Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x1f20552df55a6ee2f130ff8308ee3880",
        "span_id": "0xb867f54ed6555b7f",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T16:59:48.301296Z",
    "end_time": "2024-07-12T16:59:48.302130Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 51718,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:40736 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xf54b595f35a34f3150e47e71228b52b4",
        "span_id": "0x49f05e9d477415ee",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xc7886edb706974c6",
    "start_time": "2024-07-12T17:00:18.325702Z",
    "end_time": "2024-07-12T17:00:18.325876Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xf54b595f35a34f3150e47e71228b52b4",
        "span_id": "0xc679ade630c6e7ca",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xc7886edb706974c6",
    "start_time": "2024-07-12T17:00:18.325922Z",
    "end_time": "2024-07-12T17:00:18.325948Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xf54b595f35a34f3150e47e71228b52b4",
        "span_id": "0xc7886edb706974c6",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T17:00:18.325393Z",
    "end_time": "2024-07-12T17:00:18.325954Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 40736,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:58576 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xd76c9a958ab9b53d38ceaf881775f1b6",
        "span_id": "0x6a36edfeab4df95a",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xca663c7aa8121241",
    "start_time": "2024-07-12T17:00:48.349662Z",
    "end_time": "2024-07-12T17:00:48.350046Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xd76c9a958ab9b53d38ceaf881775f1b6",
        "span_id": "0x84276c1e2c1da698",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xca663c7aa8121241",
    "start_time": "2024-07-12T17:00:48.350094Z",
    "end_time": "2024-07-12T17:00:48.350121Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xd76c9a958ab9b53d38ceaf881775f1b6",
        "span_id": "0xca663c7aa8121241",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T17:00:48.349379Z",
    "end_time": "2024-07-12T17:00:48.350127Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 58576,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:50674 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x5ddafb783b0e394ef3c345e5633f7c8f",
        "span_id": "0xe41fc8463c74eb4d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x49c897b936c9f12d",
    "start_time": "2024-07-12T17:01:18.376599Z",
    "end_time": "2024-07-12T17:01:18.376799Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x5ddafb783b0e394ef3c345e5633f7c8f",
        "span_id": "0xd363a125488b47e5",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x49c897b936c9f12d",
    "start_time": "2024-07-12T17:01:18.376853Z",
    "end_time": "2024-07-12T17:01:18.376883Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x5ddafb783b0e394ef3c345e5633f7c8f",
        "span_id": "0x49c897b936c9f12d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T17:01:18.376308Z",
    "end_time": "2024-07-12T17:01:18.376900Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 50674,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:38676 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xf1f9e486f22e0671c004c087d70e57f8",
        "span_id": "0x22bacb4b60e4f92d",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x674a328130e1c04f",
    "start_time": "2024-07-12T17:01:48.398779Z",
    "end_time": "2024-07-12T17:01:48.398953Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0xf1f9e486f22e0671c004c087d70e57f8",
        "span_id": "0xd1400fefa2700335",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0x674a328130e1c04f",
    "start_time": "2024-07-12T17:01:48.398998Z",
    "end_time": "2024-07-12T17:01:48.399024Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0xf1f9e486f22e0671c004c087d70e57f8",
        "span_id": "0x674a328130e1c04f",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T17:01:48.398477Z",
    "end_time": "2024-07-12T17:01:48.399030Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 38676,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:41540 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x9cc009738c0b2d0deb04f1c2726bfdb6",
        "span_id": "0xd7c88de235279b98",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xddce1e35ea838e28",
    "start_time": "2024-07-12T17:02:18.420205Z",
    "end_time": "2024-07-12T17:02:18.420387Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x9cc009738c0b2d0deb04f1c2726bfdb6",
        "span_id": "0x89c95157d32175b7",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xddce1e35ea838e28",
    "start_time": "2024-07-12T17:02:18.420431Z",
    "end_time": "2024-07-12T17:02:18.420458Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x9cc009738c0b2d0deb04f1c2726bfdb6",
        "span_id": "0xddce1e35ea838e28",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T17:02:18.419921Z",
    "end_time": "2024-07-12T17:02:18.420465Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 41540,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:36804 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x491ca1df8a7df75081f23463c58fb4a7",
        "span_id": "0x9ba6ff07e6c17625",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xecb920a28109a02c",
    "start_time": "2024-07-12T17:02:48.443052Z",
    "end_time": "2024-07-12T17:02:48.443260Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x491ca1df8a7df75081f23463c58fb4a7",
        "span_id": "0x77893316a87ebfae",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xecb920a28109a02c",
    "start_time": "2024-07-12T17:02:48.443314Z",
    "end_time": "2024-07-12T17:02:48.443341Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x491ca1df8a7df75081f23463c58fb4a7",
        "span_id": "0xecb920a28109a02c",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T17:02:48.442738Z",
    "end_time": "2024-07-12T17:02:48.443349Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 36804,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
INFO:     127.0.0.1:38312 - "GET /health HTTP/1.1" 200 OK
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x305f9282be953f8edb5a3db46b577d85",
        "span_id": "0x2c0b9e83be3a5604",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb098e1dd84836f01",
    "start_time": "2024-07-12T17:03:18.465096Z",
    "end_time": "2024-07-12T17:03:18.465268Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.status_code": 200,
        "type": "http.response.start"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health http send",
    "context": {
        "trace_id": "0x305f9282be953f8edb5a3db46b577d85",
        "span_id": "0x72eba83df34b7094",
        "trace_state": "[]"
    },
    "kind": "SpanKind.INTERNAL",
    "parent_id": "0xb098e1dd84836f01",
    "start_time": "2024-07-12T17:03:18.465312Z",
    "end_time": "2024-07-12T17:03:18.465337Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "type": "http.response.body"
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
{
    "name": "GET /health",
    "context": {
        "trace_id": "0x305f9282be953f8edb5a3db46b577d85",
        "span_id": "0xb098e1dd84836f01",
        "trace_state": "[]"
    },
    "kind": "SpanKind.SERVER",
    "parent_id": null,
    "start_time": "2024-07-12T17:03:18.464811Z",
    "end_time": "2024-07-12T17:03:18.465344Z",
    "status": {
        "status_code": "UNSET"
    },
    "attributes": {
        "http.scheme": "http",
        "http.host": "127.0.0.1:8000",
        "net.host.port": 8000,
        "http.flavor": "1.1",
        "http.target": "/health",
        "http.url": "http://127.0.0.1:8000/health",
        "http.method": "GET",
        "http.server_name": "localhost:8000",
        "http.user_agent": "curl/7.88.1",
        "net.peer.ip": "127.0.0.1",
        "net.peer.port": 38312,
        "http.route": "/health",
        "http.status_code": 200
    },
    "events": [],
    "links": [],
    "resource": {
        "attributes": {
            "telemetry.sdk.language": "python",
            "telemetry.sdk.name": "opentelemetry",
            "telemetry.sdk.version": "1.22.0",
            "service.name": "unknown_service"
        },
        "schema_url": ""
    }
}
